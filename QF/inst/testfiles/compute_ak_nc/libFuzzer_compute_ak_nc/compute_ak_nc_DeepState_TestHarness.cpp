// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// compute_ak_nc_DeepState_TestHarness_generation.cpp and compute_ak_nc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<double> compute_ak_nc(NumericVector lambdas, NumericVector etas, int maxit, double eps, double beta);

TEST(QF_deepstate_test,compute_ak_nc_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector lambdas  = RcppDeepState_NumericVector();
  std::string lambdas_t = "/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_nc/libFuzzer_compute_ak_nc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambdas.qs";
  qs::c_qsave(lambdas,lambdas_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambdas values: "<< lambdas << std::endl;
  NumericVector etas  = RcppDeepState_NumericVector();
  std::string etas_t = "/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_nc/libFuzzer_compute_ak_nc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_etas.qs";
  qs::c_qsave(etas,etas_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "etas values: "<< etas << std::endl;
  IntegerVector maxit(1);
  maxit[0]  = RcppDeepState_int();
  std::string maxit_t = "/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_nc/libFuzzer_compute_ak_nc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maxit.qs";
  qs::c_qsave(maxit,maxit_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxit values: "<< maxit << std::endl;
  NumericVector eps(1);
  eps[0]  = RcppDeepState_double();
  std::string eps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_nc/libFuzzer_compute_ak_nc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_eps.qs";
  qs::c_qsave(eps,eps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps values: "<< eps << std::endl;
  NumericVector beta(1);
  beta[0]  = RcppDeepState_double();
  std::string beta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_nc/libFuzzer_compute_ak_nc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_beta.qs";
  qs::c_qsave(beta,beta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    compute_ak_nc(lambdas,etas,maxit[0],eps[0],beta[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
