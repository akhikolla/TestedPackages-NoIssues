// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// compute_ak_c_DeepState_TestHarness_generation.cpp and compute_ak_c_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<double> compute_ak_c(NumericVector lambdas, int maxit, double eps, double beta);

TEST(QF_deepstate_test,compute_ak_c_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector lambdas  = RcppDeepState_NumericVector();
  qs::c_qsave(lambdas,"/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_c/inputs/lambdas.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambdas values: "<< lambdas << std::endl;
  IntegerVector maxit(1);
  maxit[0]  = RcppDeepState_int();
  qs::c_qsave(maxit,"/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_c/inputs/maxit.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxit values: "<< maxit << std::endl;
  NumericVector eps(1);
  eps[0]  = RcppDeepState_double();
  qs::c_qsave(eps,"/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_c/inputs/eps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps values: "<< eps << std::endl;
  NumericVector beta(1);
  beta[0]  = RcppDeepState_double();
  qs::c_qsave(beta,"/home/akhila/fuzzer_packages/fuzzedpackages/QF/inst/testfiles/compute_ak_c/inputs/beta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    compute_ak_c(lambdas,maxit[0],eps[0],beta[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
