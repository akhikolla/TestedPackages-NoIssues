// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// UpGammaML_DeepState_TestHarness_generation.cpp and UpGammaML_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix UpGammaML(NumericMatrix PostW, int W, int C);

TEST(glca_deepstate_test,UpGammaML_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix PostW  = RcppDeepState_NumericMatrix();
  std::string PostW_t = "/home/akhila/fuzzer_packages/fuzzedpackages/glca/inst/testfiles/UpGammaML/libFuzzer_UpGammaML/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_PostW.qs";
  qs::c_qsave(PostW,PostW_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PostW values: "<< PostW << std::endl;
  IntegerVector W(1);
  W[0]  = RcppDeepState_int();
  std::string W_t = "/home/akhila/fuzzer_packages/fuzzedpackages/glca/inst/testfiles/UpGammaML/libFuzzer_UpGammaML/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_W.qs";
  qs::c_qsave(W,W_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  IntegerVector C(1);
  C[0]  = RcppDeepState_int();
  std::string C_t = "/home/akhila/fuzzer_packages/fuzzedpackages/glca/inst/testfiles/UpGammaML/libFuzzer_UpGammaML/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_C.qs";
  qs::c_qsave(C,C_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    UpGammaML(PostW,W[0],C[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
