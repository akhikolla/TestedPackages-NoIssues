// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// UpGammaML_DeepState_TestHarness_generation.cpp and UpGammaML_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix UpGammaML(NumericMatrix PostW, int W, int C);

TEST(glca_deepstate_test,UpGammaML_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix PostW  = RcppDeepState_NumericMatrix();
  qs::c_qsave(PostW,"/home/akhila/fuzzer_packages/fuzzedpackages/glca/inst/testfiles/UpGammaML/inputs/PostW.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PostW values: "<< PostW << std::endl;
  IntegerVector W(1);
  W[0]  = RcppDeepState_int();
  qs::c_qsave(W,"/home/akhila/fuzzer_packages/fuzzedpackages/glca/inst/testfiles/UpGammaML/inputs/W.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  IntegerVector C(1);
  C[0]  = RcppDeepState_int();
  qs::c_qsave(C,"/home/akhila/fuzzer_packages/fuzzedpackages/glca/inst/testfiles/UpGammaML/inputs/C.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    UpGammaML(PostW,W[0],C[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
