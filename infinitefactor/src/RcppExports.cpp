// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// msf
Rcpp::NumericMatrix msf(arma::mat lambda, arma::mat pivot);
RcppExport SEXP _infinitefactor_msf(SEXP lambdaSEXP, SEXP pivotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pivot(pivotSEXP);
    rcpp_result_gen = Rcpp::wrap(msf(lambda, pivot));
    return rcpp_result_gen;
END_RCPP
}
// msfOUT
Rcpp::NumericVector msfOUT(arma::mat lambda, arma::mat pivot);
RcppExport SEXP _infinitefactor_msfOUT(SEXP lambdaSEXP, SEXP pivotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pivot(pivotSEXP);
    rcpp_result_gen = Rcpp::wrap(msfOUT(lambda, pivot));
    return rcpp_result_gen;
END_RCPP
}
// aplr
Rcpp::NumericMatrix aplr(arma::mat matr, arma::vec perm);
RcppExport SEXP _infinitefactor_aplr(SEXP matrSEXP, SEXP permSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type matr(matrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type perm(permSEXP);
    rcpp_result_gen = Rcpp::wrap(aplr(matr, perm));
    return rcpp_result_gen;
END_RCPP
}
// eta_lin
Rcpp::NumericMatrix eta_lin(arma::mat lambda, arma::vec ps, int k, int n, arma::mat Y);
RcppExport SEXP _infinitefactor_eta_lin(SEXP lambdaSEXP, SEXP psSEXP, SEXP kSEXP, SEXP nSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ps(psSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(eta_lin(lambda, ps, k, n, Y));
    return rcpp_result_gen;
END_RCPP
}
// lam_lin
Rcpp::NumericMatrix lam_lin(arma::mat eta, arma::mat Plam, arma::vec ps, int k, int p, arma::mat Y);
RcppExport SEXP _infinitefactor_lam_lin(SEXP etaSEXP, SEXP PlamSEXP, SEXP psSEXP, SEXP kSEXP, SEXP pSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Plam(PlamSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ps(psSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(lam_lin(eta, Plam, ps, k, p, Y));
    return rcpp_result_gen;
END_RCPP
}
// psi_mg
Rcpp::NumericMatrix psi_mg(arma::mat lambda, arma::vec tauh, arma::vec ps, int k, int p, double df);
RcppExport SEXP _infinitefactor_psi_mg(SEXP lambdaSEXP, SEXP tauhSEXP, SEXP psSEXP, SEXP kSEXP, SEXP pSEXP, SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauh(tauhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ps(psSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(psi_mg(lambda, tauh, ps, k, p, df));
    return rcpp_result_gen;
END_RCPP
}
// del_mg
Rcpp::NumericVector del_mg(arma::mat lambda, arma::mat psijh, arma::vec tauh, arma::vec delta, int k, int p, double ad1, double bd1, double ad2, double bd2);
RcppExport SEXP _infinitefactor_del_mg(SEXP lambdaSEXP, SEXP psijhSEXP, SEXP tauhSEXP, SEXP deltaSEXP, SEXP kSEXP, SEXP pSEXP, SEXP ad1SEXP, SEXP bd1SEXP, SEXP ad2SEXP, SEXP bd2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psijh(psijhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauh(tauhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type ad1(ad1SEXP);
    Rcpp::traits::input_parameter< double >::type bd1(bd1SEXP);
    Rcpp::traits::input_parameter< double >::type ad2(ad2SEXP);
    Rcpp::traits::input_parameter< double >::type bd2(bd2SEXP);
    rcpp_result_gen = Rcpp::wrap(del_mg(lambda, psijh, tauh, delta, k, p, ad1, bd1, ad2, bd2));
    return rcpp_result_gen;
END_RCPP
}
// sig_lin
Rcpp::NumericVector sig_lin(arma::mat lambda, arma::mat eta, int k, int p, int n, arma::mat Y, double as, double bs);
RcppExport SEXP _infinitefactor_sig_lin(SEXP lambdaSEXP, SEXP etaSEXP, SEXP kSEXP, SEXP pSEXP, SEXP nSEXP, SEXP YSEXP, SEXP asSEXP, SEXP bsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type as(asSEXP);
    Rcpp::traits::input_parameter< double >::type bs(bsSEXP);
    rcpp_result_gen = Rcpp::wrap(sig_lin(lambda, eta, k, p, n, Y, as, bs));
    return rcpp_result_gen;
END_RCPP
}
// plm_mg
Rcpp::NumericMatrix plm_mg(arma::mat psijh, arma::vec tauh);
RcppExport SEXP _infinitefactor_plm_mg(SEXP psijhSEXP, SEXP tauhSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type psijh(psijhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauh(tauhSEXP);
    rcpp_result_gen = Rcpp::wrap(plm_mg(psijh, tauh));
    return rcpp_result_gen;
END_RCPP
}
// rig
double rig(double mu);
RcppExport SEXP _infinitefactor_rig(SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(rig(mu));
    return rcpp_result_gen;
END_RCPP
}
// rgig
double rgig(double lam, double chi, double psi);
RcppExport SEXP _infinitefactor_rgig(SEXP lamSEXP, SEXP chiSEXP, SEXP psiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type chi(chiSEXP);
    Rcpp::traits::input_parameter< double >::type psi(psiSEXP);
    rcpp_result_gen = Rcpp::wrap(rgig(lam, chi, psi));
    return rcpp_result_gen;
END_RCPP
}
// psi_dl
Rcpp::NumericMatrix psi_dl(arma::mat lambda, arma::mat phi, arma::vec tau);
RcppExport SEXP _infinitefactor_psi_dl(SEXP lambdaSEXP, SEXP phiSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(psi_dl(lambda, phi, tau));
    return rcpp_result_gen;
END_RCPP
}
// tau_dl
Rcpp::NumericVector tau_dl(arma::mat lambda, arma::mat phi, int k, int p);
RcppExport SEXP _infinitefactor_tau_dl(SEXP lambdaSEXP, SEXP phiSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(tau_dl(lambda, phi, k, p));
    return rcpp_result_gen;
END_RCPP
}
// phi_dl
Rcpp::NumericMatrix phi_dl(arma::mat lambda, double a, int k, int p);
RcppExport SEXP _infinitefactor_phi_dl(SEXP lambdaSEXP, SEXP aSEXP, SEXP kSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(phi_dl(lambda, a, k, p));
    return rcpp_result_gen;
END_RCPP
}
// plm_dl
Rcpp::NumericMatrix plm_dl(arma::mat psi, arma::mat phi, arma::vec tau);
RcppExport SEXP _infinitefactor_plm_dl(SEXP psiSEXP, SEXP phiSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(plm_dl(psi, phi, tau));
    return rcpp_result_gen;
END_RCPP
}
// mh
double mh(arma::vec trial, arma::mat amh, arma::mat lambda, arma::mat psi, arma::vec phi, arma::vec ps, arma::vec xr, double yr, double ssy);
RcppExport SEXP _infinitefactor_mh(SEXP trialSEXP, SEXP amhSEXP, SEXP lambdaSEXP, SEXP psiSEXP, SEXP phiSEXP, SEXP psSEXP, SEXP xrSEXP, SEXP yrSEXP, SEXP ssySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type trial(trialSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type amh(amhSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< double >::type yr(yrSEXP);
    Rcpp::traits::input_parameter< double >::type ssy(ssySEXP);
    rcpp_result_gen = Rcpp::wrap(mh(trial, amh, lambda, psi, phi, ps, xr, yr, ssy));
    return rcpp_result_gen;
END_RCPP
}
// eta_int
Rcpp::NumericMatrix eta_int(arma::mat lambda, arma::mat eta, arma::vec ps, arma::vec phi, arma::mat Psi, int k, int n, arma::vec Y, arma::mat X, double sigmasq_y, double delta_rw, Rcpp::NumericVector acp);
RcppExport SEXP _infinitefactor_eta_int(SEXP lambdaSEXP, SEXP etaSEXP, SEXP psSEXP, SEXP phiSEXP, SEXP PsiSEXP, SEXP kSEXP, SEXP nSEXP, SEXP YSEXP, SEXP XSEXP, SEXP sigmasq_ySEXP, SEXP delta_rwSEXP, SEXP acpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ps(psSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Psi(PsiSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type sigmasq_y(sigmasq_ySEXP);
    Rcpp::traits::input_parameter< double >::type delta_rw(delta_rwSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type acp(acpSEXP);
    rcpp_result_gen = Rcpp::wrap(eta_int(lambda, eta, ps, phi, Psi, k, n, Y, X, sigmasq_y, delta_rw, acp));
    return rcpp_result_gen;
END_RCPP
}
// psi_int
Rcpp::NumericMatrix psi_int(arma::mat eta, arma::vec y, arma::vec phi, double ssy, int k, int n);
RcppExport SEXP _infinitefactor_psi_int(SEXP etaSEXP, SEXP ySEXP, SEXP phiSEXP, SEXP ssySEXP, SEXP kSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type ssy(ssySEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(psi_int(eta, y, phi, ssy, k, n));
    return rcpp_result_gen;
END_RCPP
}
// phi_int
Rcpp::NumericVector phi_int(arma::mat eta, arma::vec y, double ssy, arma::mat psi, int k);
RcppExport SEXP _infinitefactor_phi_int(SEXP etaSEXP, SEXP ySEXP, SEXP ssySEXP, SEXP psiSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type ssy(ssySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(phi_int(eta, y, ssy, psi, k));
    return rcpp_result_gen;
END_RCPP
}
// ssy_int
double ssy_int(arma::mat eta, arma::vec phi, arma::mat psi, arma::vec y, int n);
RcppExport SEXP _infinitefactor_ssy_int(SEXP etaSEXP, SEXP phiSEXP, SEXP psiSEXP, SEXP ySEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(ssy_int(eta, phi, psi, y, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_infinitefactor_msf", (DL_FUNC) &_infinitefactor_msf, 2},
    {"_infinitefactor_msfOUT", (DL_FUNC) &_infinitefactor_msfOUT, 2},
    {"_infinitefactor_aplr", (DL_FUNC) &_infinitefactor_aplr, 2},
    {"_infinitefactor_eta_lin", (DL_FUNC) &_infinitefactor_eta_lin, 5},
    {"_infinitefactor_lam_lin", (DL_FUNC) &_infinitefactor_lam_lin, 6},
    {"_infinitefactor_psi_mg", (DL_FUNC) &_infinitefactor_psi_mg, 6},
    {"_infinitefactor_del_mg", (DL_FUNC) &_infinitefactor_del_mg, 10},
    {"_infinitefactor_sig_lin", (DL_FUNC) &_infinitefactor_sig_lin, 8},
    {"_infinitefactor_plm_mg", (DL_FUNC) &_infinitefactor_plm_mg, 2},
    {"_infinitefactor_rig", (DL_FUNC) &_infinitefactor_rig, 1},
    {"_infinitefactor_rgig", (DL_FUNC) &_infinitefactor_rgig, 3},
    {"_infinitefactor_psi_dl", (DL_FUNC) &_infinitefactor_psi_dl, 3},
    {"_infinitefactor_tau_dl", (DL_FUNC) &_infinitefactor_tau_dl, 4},
    {"_infinitefactor_phi_dl", (DL_FUNC) &_infinitefactor_phi_dl, 4},
    {"_infinitefactor_plm_dl", (DL_FUNC) &_infinitefactor_plm_dl, 3},
    {"_infinitefactor_mh", (DL_FUNC) &_infinitefactor_mh, 9},
    {"_infinitefactor_eta_int", (DL_FUNC) &_infinitefactor_eta_int, 12},
    {"_infinitefactor_psi_int", (DL_FUNC) &_infinitefactor_psi_int, 6},
    {"_infinitefactor_phi_int", (DL_FUNC) &_infinitefactor_phi_int, 5},
    {"_infinitefactor_ssy_int", (DL_FUNC) &_infinitefactor_ssy_int, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_infinitefactor(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
