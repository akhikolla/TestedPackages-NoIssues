// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// c_interp_DeepState_TestHarness_generation.cpp and c_interp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector c_interp(NumericVector m, NumericVector fits, NumericVector slopes, NumericVector at);

TEST(stlplus_deepstate_test,c_interp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector m  = RcppDeepState_NumericVector();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stlplus/inst/testfiles/c_interp/AFL_c_interp/afl_inputs/" + std::to_string(t) + "_m.qs";
  qs::c_qsave(m,m_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  NumericVector fits  = RcppDeepState_NumericVector();
  std::string fits_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stlplus/inst/testfiles/c_interp/AFL_c_interp/afl_inputs/" + std::to_string(t) + "_fits.qs";
  qs::c_qsave(fits,fits_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fits values: "<< fits << std::endl;
  NumericVector slopes  = RcppDeepState_NumericVector();
  std::string slopes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stlplus/inst/testfiles/c_interp/AFL_c_interp/afl_inputs/" + std::to_string(t) + "_slopes.qs";
  qs::c_qsave(slopes,slopes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "slopes values: "<< slopes << std::endl;
  NumericVector at  = RcppDeepState_NumericVector();
  std::string at_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stlplus/inst/testfiles/c_interp/AFL_c_interp/afl_inputs/" + std::to_string(t) + "_at.qs";
  qs::c_qsave(at,at_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "at values: "<< at << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    c_interp(m,fits,slopes,at);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
