// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// LDAindex
double LDAindex(IntegerVector origclass, NumericMatrix origdata, NumericMatrix proj, bool weight);
RcppExport SEXP _PPtreeViz_LDAindex(SEXP origclassSEXP, SEXP origdataSEXP, SEXP projSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type proj(projSEXP);
    Rcpp::traits::input_parameter< bool >::type weight(weightSEXP);
    rcpp_result_gen = Rcpp::wrap(LDAindex(origclass, origdata, proj, weight));
    return rcpp_result_gen;
END_RCPP
}
// PDAindex
double PDAindex(IntegerVector origclass, NumericMatrix origdata, NumericMatrix proj, bool weight, double lambda);
RcppExport SEXP _PPtreeViz_PDAindex(SEXP origclassSEXP, SEXP origdataSEXP, SEXP projSEXP, SEXP weightSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type proj(projSEXP);
    Rcpp::traits::input_parameter< bool >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(PDAindex(origclass, origdata, proj, weight, lambda));
    return rcpp_result_gen;
END_RCPP
}
// Lrindex
double Lrindex(IntegerVector origclass, NumericMatrix origdata, NumericMatrix proj, bool weight, int r);
RcppExport SEXP _PPtreeViz_Lrindex(SEXP origclassSEXP, SEXP origdataSEXP, SEXP projSEXP, SEXP weightSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type proj(projSEXP);
    Rcpp::traits::input_parameter< bool >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(Lrindex(origclass, origdata, proj, weight, r));
    return rcpp_result_gen;
END_RCPP
}
// GINIindex1D
double GINIindex1D(IntegerVector origclass, NumericMatrix origdata, NumericVector proj);
RcppExport SEXP _PPtreeViz_GINIindex1D(SEXP origclassSEXP, SEXP origdataSEXP, SEXP projSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type proj(projSEXP);
    rcpp_result_gen = Rcpp::wrap(GINIindex1D(origclass, origdata, proj));
    return rcpp_result_gen;
END_RCPP
}
// ENTROPYindex1D
double ENTROPYindex1D(IntegerVector origclass, NumericMatrix origdata, NumericVector proj);
RcppExport SEXP _PPtreeViz_ENTROPYindex1D(SEXP origclassSEXP, SEXP origdataSEXP, SEXP projSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type proj(projSEXP);
    rcpp_result_gen = Rcpp::wrap(ENTROPYindex1D(origclass, origdata, proj));
    return rcpp_result_gen;
END_RCPP
}
// PPopt
List PPopt(IntegerVector origclass, NumericMatrix origdata, int q, std::string PPmethod, bool weight, int r, double lambda, double energy, double cooling, double TOL, int maxiter);
RcppExport SEXP _PPtreeViz_PPopt(SEXP origclassSEXP, SEXP origdataSEXP, SEXP qSEXP, SEXP PPmethodSEXP, SEXP weightSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP energySEXP, SEXP coolingSEXP, SEXP TOLSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< std::string >::type PPmethod(PPmethodSEXP);
    Rcpp::traits::input_parameter< bool >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type energy(energySEXP);
    Rcpp::traits::input_parameter< double >::type cooling(coolingSEXP);
    Rcpp::traits::input_parameter< double >::type TOL(TOLSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(PPopt(origclass, origdata, q, PPmethod, weight, r, lambda, energy, cooling, TOL, maxiter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PPtreeViz_LDAindex", (DL_FUNC) &_PPtreeViz_LDAindex, 4},
    {"_PPtreeViz_PDAindex", (DL_FUNC) &_PPtreeViz_PDAindex, 5},
    {"_PPtreeViz_Lrindex", (DL_FUNC) &_PPtreeViz_Lrindex, 5},
    {"_PPtreeViz_GINIindex1D", (DL_FUNC) &_PPtreeViz_GINIindex1D, 3},
    {"_PPtreeViz_ENTROPYindex1D", (DL_FUNC) &_PPtreeViz_ENTROPYindex1D, 3},
    {"_PPtreeViz_PPopt", (DL_FUNC) &_PPtreeViz_PPopt, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_PPtreeViz(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
