// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ENTROPYindex1D_DeepState_TestHarness_generation.cpp and ENTROPYindex1D_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double ENTROPYindex1D(IntegerVector origclass, NumericMatrix origdata, NumericVector proj);

TEST(PPtreeViz_deepstate_test,ENTROPYindex1D_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector origclass  = RcppDeepState_IntegerVector();
  std::string origclass_t = "/home/akhila/fuzzer_packages/fuzzedpackages/PPtreeViz/inst/testfiles/ENTROPYindex1D/libFuzzer_ENTROPYindex1D/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_origclass.qs";
  qs::c_qsave(origclass,origclass_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "origclass values: "<< origclass << std::endl;
  NumericMatrix origdata  = RcppDeepState_NumericMatrix();
  std::string origdata_t = "/home/akhila/fuzzer_packages/fuzzedpackages/PPtreeViz/inst/testfiles/ENTROPYindex1D/libFuzzer_ENTROPYindex1D/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_origdata.qs";
  qs::c_qsave(origdata,origdata_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "origdata values: "<< origdata << std::endl;
  NumericVector proj  = RcppDeepState_NumericVector();
  std::string proj_t = "/home/akhila/fuzzer_packages/fuzzedpackages/PPtreeViz/inst/testfiles/ENTROPYindex1D/libFuzzer_ENTROPYindex1D/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_proj.qs";
  qs::c_qsave(proj,proj_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "proj values: "<< proj << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ENTROPYindex1D(origclass,origdata,proj);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
