// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ENTROPYindex1D_DeepState_TestHarness_generation.cpp and ENTROPYindex1D_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double ENTROPYindex1D(IntegerVector origclass, NumericMatrix origdata, NumericVector proj);

TEST(PPtreeViz_deepstate_test,ENTROPYindex1D_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector origclass  = RcppDeepState_IntegerVector();
  qs::c_qsave(origclass,"/home/akhila/fuzzer_packages/fuzzedpackages/PPtreeViz/inst/testfiles/ENTROPYindex1D/inputs/origclass.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "origclass values: "<< origclass << std::endl;
  NumericMatrix origdata  = RcppDeepState_NumericMatrix();
  qs::c_qsave(origdata,"/home/akhila/fuzzer_packages/fuzzedpackages/PPtreeViz/inst/testfiles/ENTROPYindex1D/inputs/origdata.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "origdata values: "<< origdata << std::endl;
  NumericVector proj  = RcppDeepState_NumericVector();
  qs::c_qsave(proj,"/home/akhila/fuzzer_packages/fuzzedpackages/PPtreeViz/inst/testfiles/ENTROPYindex1D/inputs/proj.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "proj values: "<< proj << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ENTROPYindex1D(origclass,origdata,proj);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
