// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// FindIntervalCalibCPPvec_DeepState_TestHarness_generation.cpp and FindIntervalCalibCPPvec_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector FindIntervalCalibCPPvec(NumericVector w, NumericVector wres);

TEST(ICcalib_deepstate_test,FindIntervalCalibCPPvec_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector w  = RcppDeepState_NumericVector();
  std::string w_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ICcalib/inst/testfiles/FindIntervalCalibCPPvec/AFL_FindIntervalCalibCPPvec/afl_inputs/" + std::to_string(t) + "_w.qs";
  qs::c_qsave(w,w_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  NumericVector wres  = RcppDeepState_NumericVector();
  std::string w_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ICcalib/inst/testfiles/FindIntervalCalibCPPvec/AFL_FindIntervalCalibCPPvec/afl_inputs/" + std::to_string(t) + "_w.qs";
  std::string wres_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ICcalib/inst/testfiles/FindIntervalCalibCPPvec/AFL_FindIntervalCalibCPPvec/afl_inputs/" + std::to_string(t) + "_wres.qs";
  qs::c_qsave(wres,wres_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wres values: "<< wres << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    FindIntervalCalibCPPvec(w,wres);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
