// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// tpmatrix
arma::mat tpmatrix(const arma::mat P);
RcppExport SEXP _SpatPCA_tpmatrix(SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(tpmatrix(P));
    return rcpp_result_gen;
END_RCPP
}
// tpm2
arma::mat tpm2(const arma::mat z, const arma::mat P, const arma::mat Phi);
RcppExport SEXP _SpatPCA_tpm2(SEXP zSEXP, SEXP PSEXP, SEXP PhiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Phi(PhiSEXP);
    rcpp_result_gen = Rcpp::wrap(tpm2(z, P, Phi));
    return rcpp_result_gen;
END_RCPP
}
// spatpcaCV
List spatpcaCV(NumericMatrix sxyr, NumericMatrix Yr, int M, int K, NumericVector tau1r, NumericVector tau2r, NumericVector gammar, NumericVector nkr, int maxit, double tol, NumericVector l2r);
RcppExport SEXP _SpatPCA_spatpcaCV(SEXP sxyrSEXP, SEXP YrSEXP, SEXP MSEXP, SEXP KSEXP, SEXP tau1rSEXP, SEXP tau2rSEXP, SEXP gammarSEXP, SEXP nkrSEXP, SEXP maxitSEXP, SEXP tolSEXP, SEXP l2rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sxyr(sxyrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Yr(YrSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tau1r(tau1rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tau2r(tau2rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammar(gammarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nkr(nkrSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l2r(l2rSEXP);
    rcpp_result_gen = Rcpp::wrap(spatpcaCV(sxyr, Yr, M, K, tau1r, tau2r, gammar, nkr, maxit, tol, l2r));
    return rcpp_result_gen;
END_RCPP
}
// eigenEstimate
List eigenEstimate(NumericMatrix phir, NumericMatrix Yr, double gamma, NumericMatrix phi2r);
RcppExport SEXP _SpatPCA_eigenEstimate(SEXP phirSEXP, SEXP YrSEXP, SEXP gammaSEXP, SEXP phi2rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type phir(phirSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Yr(YrSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type phi2r(phi2rSEXP);
    rcpp_result_gen = Rcpp::wrap(eigenEstimate(phir, Yr, gamma, phi2r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpatPCA_tpmatrix", (DL_FUNC) &_SpatPCA_tpmatrix, 1},
    {"_SpatPCA_tpm2", (DL_FUNC) &_SpatPCA_tpm2, 3},
    {"_SpatPCA_spatpcaCV", (DL_FUNC) &_SpatPCA_spatpcaCV, 11},
    {"_SpatPCA_eigenEstimate", (DL_FUNC) &_SpatPCA_eigenEstimate, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpatPCA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
