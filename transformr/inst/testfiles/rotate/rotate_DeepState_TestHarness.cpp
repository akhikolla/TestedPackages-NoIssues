// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rotate_DeepState_TestHarness_generation.cpp and rotate_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int rotate(NumericVector poly_x, NumericVector poly_y, NumericVector ref_x, NumericVector ref_y);

TEST(transformr_deepstate_test,rotate_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector poly_x  = RcppDeepState_NumericVector();
  qs::c_qsave(poly_x,"/home/akhila/fuzzer_packages/fuzzedpackages/transformr/inst/testfiles/rotate/inputs/poly_x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "poly_x values: "<< poly_x << std::endl;
  NumericVector poly_y  = RcppDeepState_NumericVector();
  qs::c_qsave(poly_y,"/home/akhila/fuzzer_packages/fuzzedpackages/transformr/inst/testfiles/rotate/inputs/poly_y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "poly_y values: "<< poly_y << std::endl;
  NumericVector ref_x  = RcppDeepState_NumericVector();
  qs::c_qsave(ref_x,"/home/akhila/fuzzer_packages/fuzzedpackages/transformr/inst/testfiles/rotate/inputs/ref_x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ref_x values: "<< ref_x << std::endl;
  NumericVector ref_y  = RcppDeepState_NumericVector();
  qs::c_qsave(ref_y,"/home/akhila/fuzzer_packages/fuzzedpackages/transformr/inst/testfiles/rotate/inputs/ref_y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ref_y values: "<< ref_y << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rotate(poly_x,poly_y,ref_x,ref_y);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
