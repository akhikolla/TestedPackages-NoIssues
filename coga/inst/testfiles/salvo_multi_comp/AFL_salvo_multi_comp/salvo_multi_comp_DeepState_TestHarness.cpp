// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// salvo_multi_comp_DeepState_TestHarness_generation.cpp and salvo_multi_comp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double salvo_multi_comp(double y, NumericVector shape, NumericVector scale);

TEST(coga_deepstate_test,salvo_multi_comp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector y(1);
  y[0]  = RcppDeepState_double();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_multi_comp/AFL_salvo_multi_comp/afl_inputs/" + std::to_string(t) + "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector shape  = RcppDeepState_NumericVector();
  std::string shape_t = "/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_multi_comp/AFL_salvo_multi_comp/afl_inputs/" + std::to_string(t) + "_shape.qs";
  qs::c_qsave(shape,shape_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape values: "<< shape << std::endl;
  NumericVector scale  = RcppDeepState_NumericVector();
  std::string scale_t = "/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_multi_comp/AFL_salvo_multi_comp/afl_inputs/" + std::to_string(t) + "_scale.qs";
  qs::c_qsave(scale,scale_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "scale values: "<< scale << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    salvo_multi_comp(y[0],shape,scale);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
