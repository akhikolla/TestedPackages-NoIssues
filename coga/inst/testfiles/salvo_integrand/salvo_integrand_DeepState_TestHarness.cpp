// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// salvo_integrand_DeepState_TestHarness_generation.cpp and salvo_integrand_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double salvo_integrand(NumericVector u, double y, NumericVector shape, NumericVector scale);

TEST(coga_deepstate_test,salvo_integrand_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector u  = RcppDeepState_NumericVector();
  qs::c_qsave(u,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_integrand/inputs/u.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector y(1);
  y[0]  = RcppDeepState_double();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_integrand/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector shape  = RcppDeepState_NumericVector();
  qs::c_qsave(shape,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_integrand/inputs/shape.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape values: "<< shape << std::endl;
  NumericVector scale  = RcppDeepState_NumericVector();
  qs::c_qsave(scale,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/salvo_integrand/inputs/scale.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "scale values: "<< scale << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    salvo_integrand(u,y[0],shape,scale);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
