// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// dcoga_approx_DeepState_TestHarness_generation.cpp and dcoga_approx_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector dcoga_approx(NumericVector x, NumericVector shape, NumericVector rate);

TEST(coga_deepstate_test,dcoga_approx_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/dcoga_approx/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector shape  = RcppDeepState_NumericVector();
  qs::c_qsave(shape,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/dcoga_approx/inputs/shape.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape values: "<< shape << std::endl;
  NumericVector rate  = RcppDeepState_NumericVector();
  qs::c_qsave(rate,"/home/akhila/fuzzer_packages/fuzzedpackages/coga/inst/testfiles/dcoga_approx/inputs/rate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rate values: "<< rate << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    dcoga_approx(x,shape,rate);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
