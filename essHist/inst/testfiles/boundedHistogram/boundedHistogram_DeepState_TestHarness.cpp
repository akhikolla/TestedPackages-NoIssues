// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// boundedHistogram_DeepState_TestHarness_generation.cpp and boundedHistogram_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

DataFrame boundedHistogram(NumericVector orderedData, NumericVector cumCount, IntegerVector start, IntegerVector rightIndex, NumericVector lower, NumericVector upper);

TEST(essHist_deepstate_test,boundedHistogram_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector orderedData  = RcppDeepState_NumericVector();
  qs::c_qsave(orderedData,"/home/akhila/fuzzer_packages/fuzzedpackages/essHist/inst/testfiles/boundedHistogram/inputs/orderedData.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "orderedData values: "<< orderedData << std::endl;
  NumericVector cumCount  = RcppDeepState_NumericVector();
  qs::c_qsave(cumCount,"/home/akhila/fuzzer_packages/fuzzedpackages/essHist/inst/testfiles/boundedHistogram/inputs/cumCount.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cumCount values: "<< cumCount << std::endl;
  IntegerVector start  = RcppDeepState_IntegerVector();
  qs::c_qsave(start,"/home/akhila/fuzzer_packages/fuzzedpackages/essHist/inst/testfiles/boundedHistogram/inputs/start.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "start values: "<< start << std::endl;
  IntegerVector rightIndex  = RcppDeepState_IntegerVector();
  qs::c_qsave(rightIndex,"/home/akhila/fuzzer_packages/fuzzedpackages/essHist/inst/testfiles/boundedHistogram/inputs/rightIndex.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rightIndex values: "<< rightIndex << std::endl;
  NumericVector lower  = RcppDeepState_NumericVector();
  qs::c_qsave(lower,"/home/akhila/fuzzer_packages/fuzzedpackages/essHist/inst/testfiles/boundedHistogram/inputs/lower.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lower values: "<< lower << std::endl;
  NumericVector upper  = RcppDeepState_NumericVector();
  qs::c_qsave(upper,"/home/akhila/fuzzer_packages/fuzzedpackages/essHist/inst/testfiles/boundedHistogram/inputs/upper.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "upper values: "<< upper << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    boundedHistogram(orderedData,cumCount,start,rightIndex,lower,upper);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
