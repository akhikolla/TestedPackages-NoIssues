// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// do_rpln_DeepState_TestHarness_generation.cpp and do_rpln_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

long do_rpln(double mu, double sig);

TEST(ztpln_deepstate_test,do_rpln_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector mu(1);
  mu[0]  = RcppDeepState_double();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ztpln/inst/testfiles/do_rpln/AFL_do_rpln/afl_inputs/" + std::to_string(t) + "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector sig(1);
  sig[0]  = RcppDeepState_double();
  std::string sig_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ztpln/inst/testfiles/do_rpln/AFL_do_rpln/afl_inputs/" + std::to_string(t) + "_sig.qs";
  qs::c_qsave(sig,sig_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sig values: "<< sig << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    do_rpln(mu[0],sig[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
