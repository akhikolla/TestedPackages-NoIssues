// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// do_dztpln2_DeepState_TestHarness_generation.cpp and do_dztpln2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector do_dztpln2(Rcpp::IntegerVector x, double mu, double sig);

TEST(ztpln_deepstate_test,do_dztpln2_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector x  = RcppDeepState_IntegerVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/ztpln/inst/testfiles/do_dztpln2/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector mu(1);
  mu[0]  = RcppDeepState_double();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/ztpln/inst/testfiles/do_dztpln2/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector sig(1);
  sig[0]  = RcppDeepState_double();
  qs::c_qsave(sig,"/home/akhila/fuzzer_packages/fuzzedpackages/ztpln/inst/testfiles/do_dztpln2/inputs/sig.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sig values: "<< sig << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    do_dztpln2(x,mu[0],sig[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
