// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sigma2Boot_DeepState_TestHarness_generation.cpp and sigma2Boot_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP sigma2Boot(NumericVector coeff, NumericVector e, double S, NumericVector r, double k);

TEST(RobGARCHBoot_deepstate_test,sigma2Boot_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector coeff  = RcppDeepState_NumericVector();
  qs::c_qsave(coeff,"/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/sigma2Boot/inputs/coeff.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "coeff values: "<< coeff << std::endl;
  NumericVector e  = RcppDeepState_NumericVector();
  qs::c_qsave(e,"/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/sigma2Boot/inputs/e.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "e values: "<< e << std::endl;
  NumericVector S(1);
  S[0]  = RcppDeepState_double();
  qs::c_qsave(S,"/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/sigma2Boot/inputs/S.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "S values: "<< S << std::endl;
  NumericVector r  = RcppDeepState_NumericVector();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/sigma2Boot/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  NumericVector k(1);
  k[0]  = RcppDeepState_double();
  qs::c_qsave(k,"/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/sigma2Boot/inputs/k.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sigma2Boot(coeff,e,S[0],r,k[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
