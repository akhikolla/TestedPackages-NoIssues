// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ROBUSTGARCHloss_RCPP_DeepState_TestHarness_generation.cpp and ROBUSTGARCHloss_RCPP_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP ROBUSTGARCHloss_RCPP(NumericVector theta, NumericVector r, double sigma2);

TEST(RobGARCHBoot_deepstate_test,ROBUSTGARCHloss_RCPP_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector theta  = RcppDeepState_NumericVector();
  std::string theta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/ROBUSTGARCHloss_RCPP/libFuzzer_ROBUSTGARCHloss_RCPP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_theta.qs";
  qs::c_qsave(theta,theta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericVector r  = RcppDeepState_NumericVector();
  std::string r_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/ROBUSTGARCHloss_RCPP/libFuzzer_ROBUSTGARCHloss_RCPP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_r.qs";
  qs::c_qsave(r,r_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  NumericVector sigma2(1);
  sigma2[0]  = RcppDeepState_double();
  std::string sigma2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RobGARCHBoot/inst/testfiles/ROBUSTGARCHloss_RCPP/libFuzzer_ROBUSTGARCHloss_RCPP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sigma2.qs";
  qs::c_qsave(sigma2,sigma2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma2 values: "<< sigma2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ROBUSTGARCHloss_RCPP(theta,r,sigma2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
