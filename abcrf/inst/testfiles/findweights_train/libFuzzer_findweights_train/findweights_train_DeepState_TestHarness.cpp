// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// findweights_train_DeepState_TestHarness_generation.cpp and findweights_train_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix findweights_train(NumericMatrix trainingNodeID, NumericMatrix inbag, int ntrain, int trainIdx, int ntree);

TEST(abcrf_deepstate_test,findweights_train_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix trainingNodeID  = RcppDeepState_NumericMatrix();
  std::string trainingNodeID_t = "/home/akhila/fuzzer_packages/fuzzedpackages/abcrf/inst/testfiles/findweights_train/libFuzzer_findweights_train/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_trainingNodeID.qs";
  qs::c_qsave(trainingNodeID,trainingNodeID_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "trainingNodeID values: "<< trainingNodeID << std::endl;
  NumericMatrix inbag  = RcppDeepState_NumericMatrix();
  std::string inbag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/abcrf/inst/testfiles/findweights_train/libFuzzer_findweights_train/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_inbag.qs";
  qs::c_qsave(inbag,inbag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "inbag values: "<< inbag << std::endl;
  IntegerVector ntrain(1);
  ntrain[0]  = RcppDeepState_int();
  std::string ntrain_t = "/home/akhila/fuzzer_packages/fuzzedpackages/abcrf/inst/testfiles/findweights_train/libFuzzer_findweights_train/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ntrain.qs";
  qs::c_qsave(ntrain,ntrain_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntrain values: "<< ntrain << std::endl;
  IntegerVector trainIdx(1);
  trainIdx[0]  = RcppDeepState_int();
  std::string trainIdx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/abcrf/inst/testfiles/findweights_train/libFuzzer_findweights_train/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_trainIdx.qs";
  qs::c_qsave(trainIdx,trainIdx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "trainIdx values: "<< trainIdx << std::endl;
  IntegerVector ntree(1);
  ntree[0]  = RcppDeepState_int();
  std::string ntree_t = "/home/akhila/fuzzer_packages/fuzzedpackages/abcrf/inst/testfiles/findweights_train/libFuzzer_findweights_train/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ntree.qs";
  qs::c_qsave(ntree,ntree_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntree values: "<< ntree << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    findweights_train(trainingNodeID,inbag,ntrain[0],trainIdx[0],ntree[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
