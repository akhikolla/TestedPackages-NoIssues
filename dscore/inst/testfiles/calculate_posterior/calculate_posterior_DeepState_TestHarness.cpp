// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calculate_posterior_DeepState_TestHarness_generation.cpp and calculate_posterior_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List calculate_posterior(NumericVector scores, NumericVector tau, NumericVector qp, double mu, double sd);

TEST(dscore_deepstate_test,calculate_posterior_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector scores  = RcppDeepState_NumericVector();
  qs::c_qsave(scores,"/home/akhila/fuzzer_packages/fuzzedpackages/dscore/inst/testfiles/calculate_posterior/inputs/scores.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "scores values: "<< scores << std::endl;
  NumericVector tau  = RcppDeepState_NumericVector();
  qs::c_qsave(tau,"/home/akhila/fuzzer_packages/fuzzedpackages/dscore/inst/testfiles/calculate_posterior/inputs/tau.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau values: "<< tau << std::endl;
  NumericVector qp  = RcppDeepState_NumericVector();
  qs::c_qsave(qp,"/home/akhila/fuzzer_packages/fuzzedpackages/dscore/inst/testfiles/calculate_posterior/inputs/qp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "qp values: "<< qp << std::endl;
  NumericVector mu(1);
  mu[0]  = RcppDeepState_double();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/dscore/inst/testfiles/calculate_posterior/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector sd(1);
  sd[0]  = RcppDeepState_double();
  qs::c_qsave(sd,"/home/akhila/fuzzer_packages/fuzzedpackages/dscore/inst/testfiles/calculate_posterior/inputs/sd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sd values: "<< sd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calculate_posterior(scores,tau,qp,mu[0],sd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
