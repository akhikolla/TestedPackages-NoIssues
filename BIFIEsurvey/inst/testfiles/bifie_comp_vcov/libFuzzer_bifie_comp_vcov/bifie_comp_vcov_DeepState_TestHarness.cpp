// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bifie_comp_vcov_DeepState_TestHarness_generation.cpp and bifie_comp_vcov_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List bifie_comp_vcov(Rcpp::NumericMatrix parsM, Rcpp::NumericMatrix parsrepM, Rcpp::NumericMatrix Cdes, Rcpp::NumericVector rdes, Rcpp::NumericVector Ccols, Rcpp::NumericVector fayfac);

TEST(BIFIEsurvey_deepstate_test,bifie_comp_vcov_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix parsM  = RcppDeepState_NumericMatrix();
  std::string parsM_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifie_comp_vcov/libFuzzer_bifie_comp_vcov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_parsM.qs";
  qs::c_qsave(parsM,parsM_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parsM values: "<< parsM << std::endl;
  NumericMatrix parsrepM  = RcppDeepState_NumericMatrix();
  std::string parsrepM_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifie_comp_vcov/libFuzzer_bifie_comp_vcov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_parsrepM.qs";
  qs::c_qsave(parsrepM,parsrepM_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parsrepM values: "<< parsrepM << std::endl;
  NumericMatrix Cdes  = RcppDeepState_NumericMatrix();
  std::string Cdes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifie_comp_vcov/libFuzzer_bifie_comp_vcov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Cdes.qs";
  qs::c_qsave(Cdes,Cdes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Cdes values: "<< Cdes << std::endl;
  NumericVector rdes  = RcppDeepState_NumericVector();
  std::string rdes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifie_comp_vcov/libFuzzer_bifie_comp_vcov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rdes.qs";
  qs::c_qsave(rdes,rdes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rdes values: "<< rdes << std::endl;
  NumericVector Ccols  = RcppDeepState_NumericVector();
  std::string Ccols_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifie_comp_vcov/libFuzzer_bifie_comp_vcov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Ccols.qs";
  qs::c_qsave(Ccols,Ccols_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ccols values: "<< Ccols << std::endl;
  NumericVector fayfac  = RcppDeepState_NumericVector();
  std::string fayfac_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifie_comp_vcov/libFuzzer_bifie_comp_vcov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fayfac.qs";
  qs::c_qsave(fayfac,fayfac_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fayfac values: "<< fayfac << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    bifie_comp_vcov(parsM,parsrepM,Cdes,rdes,Ccols,fayfac);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
