// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bifiesurvey_rcpp_replication_variance_DeepState_TestHarness_generation.cpp and bifiesurvey_rcpp_replication_variance_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector bifiesurvey_rcpp_replication_variance(Rcpp::NumericVector pars, Rcpp::NumericMatrix pars_repl, Rcpp::NumericVector fay_factor);

TEST(BIFIEsurvey_deepstate_test,bifiesurvey_rcpp_replication_variance_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector pars  = RcppDeepState_NumericVector();
  std::string pars_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_replication_variance/AFL_bifiesurvey_rcpp_replication_variance/afl_inputs/" + std::to_string(t) + "_pars.qs";
  qs::c_qsave(pars,pars_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pars values: "<< pars << std::endl;
  NumericMatrix pars_repl  = RcppDeepState_NumericMatrix();
  std::string pars_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_replication_variance/AFL_bifiesurvey_rcpp_replication_variance/afl_inputs/" + std::to_string(t) + "_pars.qs";
  std::string pars_repl_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_replication_variance/AFL_bifiesurvey_rcpp_replication_variance/afl_inputs/" + std::to_string(t) + "_pars_repl.qs";
  qs::c_qsave(pars_repl,pars_repl_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pars_repl values: "<< pars_repl << std::endl;
  NumericVector fay_factor  = RcppDeepState_NumericVector();
  std::string fay_factor_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_replication_variance/AFL_bifiesurvey_rcpp_replication_variance/afl_inputs/" + std::to_string(t) + "_fay_factor.qs";
  qs::c_qsave(fay_factor,fay_factor_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fay_factor values: "<< fay_factor << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    bifiesurvey_rcpp_replication_variance(pars,pars_repl,fay_factor);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
