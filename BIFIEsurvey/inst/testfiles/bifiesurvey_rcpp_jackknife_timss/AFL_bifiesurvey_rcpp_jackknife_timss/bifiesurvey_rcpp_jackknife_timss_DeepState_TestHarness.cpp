// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bifiesurvey_rcpp_jackknife_timss_DeepState_TestHarness_generation.cpp and bifiesurvey_rcpp_jackknife_timss_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix bifiesurvey_rcpp_jackknife_timss(Rcpp::NumericVector wgt, Rcpp::NumericVector jkzone, Rcpp::NumericVector jkrep, int RR, double jkfac, Rcpp::NumericVector prbar);

TEST(BIFIEsurvey_deepstate_test,bifiesurvey_rcpp_jackknife_timss_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector wgt  = RcppDeepState_NumericVector();
  std::string wgt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_jackknife_timss/AFL_bifiesurvey_rcpp_jackknife_timss/afl_inputs/" + std::to_string(t) + "_wgt.qs";
  qs::c_qsave(wgt,wgt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wgt values: "<< wgt << std::endl;
  NumericVector jkzone  = RcppDeepState_NumericVector();
  std::string jkzone_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_jackknife_timss/AFL_bifiesurvey_rcpp_jackknife_timss/afl_inputs/" + std::to_string(t) + "_jkzone.qs";
  qs::c_qsave(jkzone,jkzone_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jkzone values: "<< jkzone << std::endl;
  NumericVector jkrep  = RcppDeepState_NumericVector();
  std::string jkrep_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_jackknife_timss/AFL_bifiesurvey_rcpp_jackknife_timss/afl_inputs/" + std::to_string(t) + "_jkrep.qs";
  qs::c_qsave(jkrep,jkrep_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jkrep values: "<< jkrep << std::endl;
  IntegerVector RR(1);
  RR[0]  = RcppDeepState_int();
  std::string RR_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_jackknife_timss/AFL_bifiesurvey_rcpp_jackknife_timss/afl_inputs/" + std::to_string(t) + "_RR.qs";
  qs::c_qsave(RR,RR_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RR values: "<< RR << std::endl;
  NumericVector jkfac(1);
  jkfac[0]  = RcppDeepState_double();
  std::string jkfac_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_jackknife_timss/AFL_bifiesurvey_rcpp_jackknife_timss/afl_inputs/" + std::to_string(t) + "_jkfac.qs";
  qs::c_qsave(jkfac,jkfac_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jkfac values: "<< jkfac << std::endl;
  NumericVector prbar  = RcppDeepState_NumericVector();
  std::string prbar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BIFIEsurvey/inst/testfiles/bifiesurvey_rcpp_jackknife_timss/AFL_bifiesurvey_rcpp_jackknife_timss/afl_inputs/" + std::to_string(t) + "_prbar.qs";
  qs::c_qsave(prbar,prbar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prbar values: "<< prbar << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    bifiesurvey_rcpp_jackknife_timss(wgt,jkzone,jkrep,RR[0],jkfac[0],prbar);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
