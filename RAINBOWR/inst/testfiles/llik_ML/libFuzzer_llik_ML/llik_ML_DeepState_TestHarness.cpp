// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// llik_ML_DeepState_TestHarness_generation.cpp and llik_ML_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double llik_ML(double n, double yPy, double lnHinv);

TEST(RAINBOWR_deepstate_test,llik_ML_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector n(1);
  n[0]  = RcppDeepState_double();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/llik_ML/libFuzzer_llik_ML/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector yPy(1);
  yPy[0]  = RcppDeepState_double();
  std::string yPy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/llik_ML/libFuzzer_llik_ML/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_yPy.qs";
  qs::c_qsave(yPy,yPy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yPy values: "<< yPy << std::endl;
  NumericVector lnHinv(1);
  lnHinv[0]  = RcppDeepState_double();
  std::string lnHinv_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/llik_ML/libFuzzer_llik_ML/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lnHinv.qs";
  qs::c_qsave(lnHinv,lnHinv_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lnHinv values: "<< lnHinv << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    llik_ML(n[0],yPy[0],lnHinv[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
