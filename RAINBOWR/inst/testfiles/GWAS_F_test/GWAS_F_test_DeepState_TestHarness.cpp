// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// GWAS_F_test_DeepState_TestHarness_generation.cpp and GWAS_F_test_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double GWAS_F_test(Rcpp::NumericMatrix y, Rcpp::NumericMatrix x, Rcpp::NumericMatrix hinv, int v1, int v2, int p);

TEST(RAINBOWR_deepstate_test,GWAS_F_test_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/GWAS_F_test/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericMatrix x  = RcppDeepState_NumericMatrix();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/GWAS_F_test/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericMatrix hinv  = RcppDeepState_NumericMatrix();
  qs::c_qsave(hinv,"/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/GWAS_F_test/inputs/hinv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "hinv values: "<< hinv << std::endl;
  IntegerVector v1(1);
  v1[0]  = RcppDeepState_int();
  qs::c_qsave(v1,"/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/GWAS_F_test/inputs/v1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v1 values: "<< v1 << std::endl;
  IntegerVector v2(1);
  v2[0]  = RcppDeepState_int();
  qs::c_qsave(v2,"/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/GWAS_F_test/inputs/v2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v2 values: "<< v2 << std::endl;
  IntegerVector p(1);
  p[0]  = RcppDeepState_int();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/RAINBOWR/inst/testfiles/GWAS_F_test/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    GWAS_F_test(y,x,hinv,v1[0],v2[0],p[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
