// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// v_size_DeepState_TestHarness_generation.cpp and v_size_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double v_size(double n, int element_size);

TEST(lobstr_deepstate_test,v_size_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector n(1);
  n[0]  = RcppDeepState_double();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/lobstr/inst/testfiles/v_size/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector element_size(1);
  element_size[0]  = RcppDeepState_int();
  qs::c_qsave(element_size,"/home/akhila/fuzzer_packages/fuzzedpackages/lobstr/inst/testfiles/v_size/inputs/element_size.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "element_size values: "<< element_size << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    v_size(n[0],element_size[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
