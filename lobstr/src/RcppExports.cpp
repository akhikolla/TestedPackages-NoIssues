// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// obj_addr_
std::string obj_addr_(SEXP name, Environment env);
RcppExport SEXP _lobstr_obj_addr_(SEXP nameSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_addr_(name, env));
    return rcpp_result_gen;
END_RCPP
}
// obj_addrs_
std::vector<std::string> obj_addrs_(SEXP x);
RcppExport SEXP _lobstr_obj_addrs_(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_addrs_(x));
    return rcpp_result_gen;
END_RCPP
}
// obj_inspect_
Rcpp::List obj_inspect_(SEXP x, double max_depth, bool expand_char, bool expand_altrep, bool expand_env, bool expand_call, bool expand_bytecode);
RcppExport SEXP _lobstr_obj_inspect_(SEXP xSEXP, SEXP max_depthSEXP, SEXP expand_charSEXP, SEXP expand_altrepSEXP, SEXP expand_envSEXP, SEXP expand_callSEXP, SEXP expand_bytecodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type max_depth(max_depthSEXP);
    Rcpp::traits::input_parameter< bool >::type expand_char(expand_charSEXP);
    Rcpp::traits::input_parameter< bool >::type expand_altrep(expand_altrepSEXP);
    Rcpp::traits::input_parameter< bool >::type expand_env(expand_envSEXP);
    Rcpp::traits::input_parameter< bool >::type expand_call(expand_callSEXP);
    Rcpp::traits::input_parameter< bool >::type expand_bytecode(expand_bytecodeSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_inspect_(x, max_depth, expand_char, expand_altrep, expand_env, expand_call, expand_bytecode));
    return rcpp_result_gen;
END_RCPP
}
// v_size
double v_size(double n, int element_size);
RcppExport SEXP _lobstr_v_size(SEXP nSEXP, SEXP element_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type element_size(element_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(v_size(n, element_size));
    return rcpp_result_gen;
END_RCPP
}
// obj_size_
double obj_size_(List objects, Environment base_env, int sizeof_node, int sizeof_vector);
RcppExport SEXP _lobstr_obj_size_(SEXP objectsSEXP, SEXP base_envSEXP, SEXP sizeof_nodeSEXP, SEXP sizeof_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type objects(objectsSEXP);
    Rcpp::traits::input_parameter< Environment >::type base_env(base_envSEXP);
    Rcpp::traits::input_parameter< int >::type sizeof_node(sizeof_nodeSEXP);
    Rcpp::traits::input_parameter< int >::type sizeof_vector(sizeof_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_size_(objects, base_env, sizeof_node, sizeof_vector));
    return rcpp_result_gen;
END_RCPP
}
// obj_csize_
IntegerVector obj_csize_(List objects, Environment base_env, int sizeof_node, int sizeof_vector);
RcppExport SEXP _lobstr_obj_csize_(SEXP objectsSEXP, SEXP base_envSEXP, SEXP sizeof_nodeSEXP, SEXP sizeof_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type objects(objectsSEXP);
    Rcpp::traits::input_parameter< Environment >::type base_env(base_envSEXP);
    Rcpp::traits::input_parameter< int >::type sizeof_node(sizeof_nodeSEXP);
    Rcpp::traits::input_parameter< int >::type sizeof_vector(sizeof_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_csize_(objects, base_env, sizeof_node, sizeof_vector));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lobstr_obj_addr_", (DL_FUNC) &_lobstr_obj_addr_, 2},
    {"_lobstr_obj_addrs_", (DL_FUNC) &_lobstr_obj_addrs_, 1},
    {"_lobstr_obj_inspect_", (DL_FUNC) &_lobstr_obj_inspect_, 7},
    {"_lobstr_v_size", (DL_FUNC) &_lobstr_v_size, 2},
    {"_lobstr_obj_size_", (DL_FUNC) &_lobstr_obj_size_, 4},
    {"_lobstr_obj_csize_", (DL_FUNC) &_lobstr_obj_csize_, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_lobstr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
