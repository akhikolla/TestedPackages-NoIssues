// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_prior_normal_density_unequal_means_DeepState_TestHarness_generation.cpp and tam_rcpp_prior_normal_density_unequal_means_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix tam_rcpp_prior_normal_density_unequal_means(Rcpp::NumericMatrix theta, Rcpp::NumericMatrix mu, Rcpp::NumericMatrix varInverse, Rcpp::NumericVector COEFF);

TEST(TAM_deepstate_test,tam_rcpp_prior_normal_density_unequal_means_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix theta  = RcppDeepState_NumericMatrix();
  std::string theta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_prior_normal_density_unequal_means/AFL_tam_rcpp_prior_normal_density_unequal_means/afl_inputs/" + std::to_string(t) + "_theta.qs";
  qs::c_qsave(theta,theta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericMatrix mu  = RcppDeepState_NumericMatrix();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_prior_normal_density_unequal_means/AFL_tam_rcpp_prior_normal_density_unequal_means/afl_inputs/" + std::to_string(t) + "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericMatrix varInverse  = RcppDeepState_NumericMatrix();
  std::string varInverse_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_prior_normal_density_unequal_means/AFL_tam_rcpp_prior_normal_density_unequal_means/afl_inputs/" + std::to_string(t) + "_varInverse.qs";
  qs::c_qsave(varInverse,varInverse_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "varInverse values: "<< varInverse << std::endl;
  NumericVector COEFF  = RcppDeepState_NumericVector();
  std::string COEFF_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_prior_normal_density_unequal_means/AFL_tam_rcpp_prior_normal_density_unequal_means/afl_inputs/" + std::to_string(t) + "_COEFF.qs";
  qs::c_qsave(COEFF,COEFF_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "COEFF values: "<< COEFF << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_prior_normal_density_unequal_means(theta,mu,varInverse,COEFF);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
