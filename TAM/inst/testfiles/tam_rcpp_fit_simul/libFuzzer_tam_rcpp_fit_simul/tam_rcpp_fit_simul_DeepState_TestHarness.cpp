// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_fit_simul_DeepState_TestHarness_generation.cpp and tam_rcpp_fit_simul_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_fit_simul(Rcpp::NumericMatrix rn1M, Rcpp::NumericMatrix c_hwt, Rcpp::NumericMatrix Ax, Rcpp::NumericMatrix xbar, Rcpp::NumericMatrix var1, Rcpp::NumericMatrix Uz2, Rcpp::NumericMatrix Vz2, Rcpp::NumericVector nstud_ip, Rcpp::NumericVector pweights);

TEST(TAM_deepstate_test,tam_rcpp_fit_simul_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix rn1M  = RcppDeepState_NumericMatrix();
  std::string rn1M_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rn1M.qs";
  qs::c_qsave(rn1M,rn1M_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rn1M values: "<< rn1M << std::endl;
  NumericMatrix c_hwt  = RcppDeepState_NumericMatrix();
  std::string c_hwt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_c_hwt.qs";
  qs::c_qsave(c_hwt,c_hwt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "c_hwt values: "<< c_hwt << std::endl;
  NumericMatrix Ax  = RcppDeepState_NumericMatrix();
  std::string Ax_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Ax.qs";
  qs::c_qsave(Ax,Ax_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ax values: "<< Ax << std::endl;
  NumericMatrix xbar  = RcppDeepState_NumericMatrix();
  std::string xbar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xbar.qs";
  qs::c_qsave(xbar,xbar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xbar values: "<< xbar << std::endl;
  NumericMatrix var1  = RcppDeepState_NumericMatrix();
  std::string var1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_var1.qs";
  qs::c_qsave(var1,var1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "var1 values: "<< var1 << std::endl;
  NumericMatrix Uz2  = RcppDeepState_NumericMatrix();
  std::string Uz2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Uz2.qs";
  qs::c_qsave(Uz2,Uz2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Uz2 values: "<< Uz2 << std::endl;
  NumericMatrix Vz2  = RcppDeepState_NumericMatrix();
  std::string Vz2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Vz2.qs";
  qs::c_qsave(Vz2,Vz2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Vz2 values: "<< Vz2 << std::endl;
  NumericVector nstud_ip  = RcppDeepState_NumericVector();
  std::string nstud_ip_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nstud_ip.qs";
  qs::c_qsave(nstud_ip,nstud_ip_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nstud_ip values: "<< nstud_ip << std::endl;
  NumericVector pweights  = RcppDeepState_NumericVector();
  std::string pweights_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_fit_simul/libFuzzer_tam_rcpp_fit_simul/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pweights.qs";
  qs::c_qsave(pweights,pweights_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pweights values: "<< pweights << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_fit_simul(rn1M,c_hwt,Ax,xbar,var1,Uz2,Vz2,nstud_ip,pweights);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
