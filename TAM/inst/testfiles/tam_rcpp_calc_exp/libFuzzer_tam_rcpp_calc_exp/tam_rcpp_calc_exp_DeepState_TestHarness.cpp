// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_calc_exp_DeepState_TestHarness_generation.cpp and tam_rcpp_calc_exp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_calc_exp(int NP, Rcpp::NumericVector rprobs, Rcpp::NumericVector A, Rcpp::NumericMatrix INDEXIPNO, Rcpp::NumericVector INDEXIPLIST2, Rcpp::NumericVector ESTXSIINDEX, int C, Rcpp::NumericMatrix ITEMWT, int NR, int TP);

TEST(TAM_deepstate_test,tam_rcpp_calc_exp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector NP(1);
  NP[0]  = RcppDeepState_int();
  std::string NP_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_NP.qs";
  qs::c_qsave(NP,NP_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NP values: "<< NP << std::endl;
  NumericVector rprobs  = RcppDeepState_NumericVector();
  std::string rprobs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rprobs.qs";
  qs::c_qsave(rprobs,rprobs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rprobs values: "<< rprobs << std::endl;
  NumericVector A  = RcppDeepState_NumericVector();
  std::string A_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_A.qs";
  qs::c_qsave(A,A_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericMatrix INDEXIPNO  = RcppDeepState_NumericMatrix();
  std::string INDEXIPNO_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_INDEXIPNO.qs";
  qs::c_qsave(INDEXIPNO,INDEXIPNO_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPNO values: "<< INDEXIPNO << std::endl;
  NumericVector INDEXIPLIST2  = RcppDeepState_NumericVector();
  std::string INDEXIPLIST2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_INDEXIPLIST2.qs";
  qs::c_qsave(INDEXIPLIST2,INDEXIPLIST2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPLIST2 values: "<< INDEXIPLIST2 << std::endl;
  NumericVector ESTXSIINDEX  = RcppDeepState_NumericVector();
  std::string ESTXSIINDEX_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ESTXSIINDEX.qs";
  qs::c_qsave(ESTXSIINDEX,ESTXSIINDEX_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ESTXSIINDEX values: "<< ESTXSIINDEX << std::endl;
  IntegerVector C(1);
  C[0]  = RcppDeepState_int();
  std::string C_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_C.qs";
  qs::c_qsave(C,C_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  NumericMatrix ITEMWT  = RcppDeepState_NumericMatrix();
  std::string ITEMWT_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ITEMWT.qs";
  qs::c_qsave(ITEMWT,ITEMWT_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ITEMWT values: "<< ITEMWT << std::endl;
  IntegerVector NR(1);
  NR[0]  = RcppDeepState_int();
  std::string NR_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_NR.qs";
  qs::c_qsave(NR,NR_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NR values: "<< NR << std::endl;
  IntegerVector TP(1);
  TP[0]  = RcppDeepState_int();
  std::string TP_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/libFuzzer_tam_rcpp_calc_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_TP.qs";
  qs::c_qsave(TP,TP_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "TP values: "<< TP << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_calc_exp(NP[0],rprobs,A,INDEXIPNO,INDEXIPLIST2,ESTXSIINDEX,C[0],ITEMWT,NR[0],TP[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
