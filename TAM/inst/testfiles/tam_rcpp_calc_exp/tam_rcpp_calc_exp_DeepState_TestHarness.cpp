// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_calc_exp_DeepState_TestHarness_generation.cpp and tam_rcpp_calc_exp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_calc_exp(int NP, Rcpp::NumericVector rprobs, Rcpp::NumericVector A, Rcpp::NumericMatrix INDEXIPNO, Rcpp::NumericVector INDEXIPLIST2, Rcpp::NumericVector ESTXSIINDEX, int C, Rcpp::NumericMatrix ITEMWT, int NR, int TP);

TEST(TAM_deepstate_test,tam_rcpp_calc_exp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector NP(1);
  NP[0]  = RcppDeepState_int();
  qs::c_qsave(NP,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/NP.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NP values: "<< NP << std::endl;
  NumericVector rprobs  = RcppDeepState_NumericVector();
  qs::c_qsave(rprobs,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/rprobs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rprobs values: "<< rprobs << std::endl;
  NumericVector A  = RcppDeepState_NumericVector();
  qs::c_qsave(A,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/A.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericMatrix INDEXIPNO  = RcppDeepState_NumericMatrix();
  qs::c_qsave(INDEXIPNO,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/INDEXIPNO.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPNO values: "<< INDEXIPNO << std::endl;
  NumericVector INDEXIPLIST2  = RcppDeepState_NumericVector();
  qs::c_qsave(INDEXIPLIST2,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/INDEXIPLIST2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPLIST2 values: "<< INDEXIPLIST2 << std::endl;
  NumericVector ESTXSIINDEX  = RcppDeepState_NumericVector();
  qs::c_qsave(ESTXSIINDEX,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/ESTXSIINDEX.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ESTXSIINDEX values: "<< ESTXSIINDEX << std::endl;
  IntegerVector C(1);
  C[0]  = RcppDeepState_int();
  qs::c_qsave(C,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/C.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  NumericMatrix ITEMWT  = RcppDeepState_NumericMatrix();
  qs::c_qsave(ITEMWT,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/ITEMWT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ITEMWT values: "<< ITEMWT << std::endl;
  IntegerVector NR(1);
  NR[0]  = RcppDeepState_int();
  qs::c_qsave(NR,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/NR.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NR values: "<< NR << std::endl;
  IntegerVector TP(1);
  TP[0]  = RcppDeepState_int();
  qs::c_qsave(TP,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp/inputs/TP.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "TP values: "<< TP << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_calc_exp(NP[0],rprobs,A,INDEXIPNO,INDEXIPLIST2,ESTXSIINDEX,C[0],ITEMWT,NR[0],TP[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
