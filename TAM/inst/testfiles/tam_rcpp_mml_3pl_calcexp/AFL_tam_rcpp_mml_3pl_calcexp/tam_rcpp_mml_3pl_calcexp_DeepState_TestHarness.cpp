// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_mml_3pl_calcexp_DeepState_TestHarness_generation.cpp and tam_rcpp_mml_3pl_calcexp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_mml_3pl_calcexp(int NP, Rcpp::NumericMatrix rprobs, Rcpp::NumericMatrix A, Rcpp::NumericMatrix INDEXIPNO, Rcpp::NumericVector INDEXIPLIST2, Rcpp::NumericVector ESTXSIINDEX, int C, Rcpp::NumericMatrix ITEMWT, Rcpp::NumericMatrix rprobs0, Rcpp::NumericVector GUESS, Rcpp::NumericVector nik, Rcpp::NumericVector ni);

TEST(TAM_deepstate_test,tam_rcpp_mml_3pl_calcexp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector NP(1);
  NP[0]  = RcppDeepState_int();
  std::string NP_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_NP.qs";
  qs::c_qsave(NP,NP_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NP values: "<< NP << std::endl;
  NumericMatrix rprobs  = RcppDeepState_NumericMatrix();
  std::string rprobs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_rprobs.qs";
  qs::c_qsave(rprobs,rprobs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rprobs values: "<< rprobs << std::endl;
  NumericMatrix A  = RcppDeepState_NumericMatrix();
  std::string A_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_A.qs";
  qs::c_qsave(A,A_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericMatrix INDEXIPNO  = RcppDeepState_NumericMatrix();
  std::string INDEXIPNO_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_INDEXIPNO.qs";
  qs::c_qsave(INDEXIPNO,INDEXIPNO_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPNO values: "<< INDEXIPNO << std::endl;
  NumericVector INDEXIPLIST2  = RcppDeepState_NumericVector();
  std::string INDEXIPLIST2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_INDEXIPLIST2.qs";
  qs::c_qsave(INDEXIPLIST2,INDEXIPLIST2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPLIST2 values: "<< INDEXIPLIST2 << std::endl;
  NumericVector ESTXSIINDEX  = RcppDeepState_NumericVector();
  std::string ESTXSIINDEX_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_ESTXSIINDEX.qs";
  qs::c_qsave(ESTXSIINDEX,ESTXSIINDEX_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ESTXSIINDEX values: "<< ESTXSIINDEX << std::endl;
  IntegerVector C(1);
  C[0]  = RcppDeepState_int();
  std::string C_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_C.qs";
  qs::c_qsave(C,C_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  NumericMatrix ITEMWT  = RcppDeepState_NumericMatrix();
  std::string ITEMWT_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_ITEMWT.qs";
  qs::c_qsave(ITEMWT,ITEMWT_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ITEMWT values: "<< ITEMWT << std::endl;
  NumericMatrix rprobs0  = RcppDeepState_NumericMatrix();
  std::string rprobs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_rprobs.qs";
  std::string rprobs0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_rprobs0.qs";
  qs::c_qsave(rprobs0,rprobs0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rprobs0 values: "<< rprobs0 << std::endl;
  NumericVector GUESS  = RcppDeepState_NumericVector();
  std::string GUESS_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_GUESS.qs";
  qs::c_qsave(GUESS,GUESS_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "GUESS values: "<< GUESS << std::endl;
  NumericVector nik  = RcppDeepState_NumericVector();
  std::string nik_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_nik.qs";
  std::string ni_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_ni.qs";
  qs::c_qsave(nik,nik_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nik values: "<< nik << std::endl;
  NumericVector ni  = RcppDeepState_NumericVector();
  std::string ni_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/AFL_tam_rcpp_mml_3pl_calcexp/afl_inputs/" + std::to_string(t) + "_ni.qs";
  qs::c_qsave(ni,ni_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ni values: "<< ni << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_mml_3pl_calcexp(NP[0],rprobs,A,INDEXIPNO,INDEXIPLIST2,ESTXSIINDEX,C[0],ITEMWT,rprobs0,GUESS,nik,ni);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
