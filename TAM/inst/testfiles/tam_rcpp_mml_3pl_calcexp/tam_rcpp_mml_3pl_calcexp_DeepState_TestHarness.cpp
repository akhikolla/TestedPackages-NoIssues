// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_mml_3pl_calcexp_DeepState_TestHarness_generation.cpp and tam_rcpp_mml_3pl_calcexp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_mml_3pl_calcexp(int NP, Rcpp::NumericMatrix rprobs, Rcpp::NumericMatrix A, Rcpp::NumericMatrix INDEXIPNO, Rcpp::NumericVector INDEXIPLIST2, Rcpp::NumericVector ESTXSIINDEX, int C, Rcpp::NumericMatrix ITEMWT, Rcpp::NumericMatrix rprobs0, Rcpp::NumericVector GUESS, Rcpp::NumericVector nik, Rcpp::NumericVector ni);

TEST(TAM_deepstate_test,tam_rcpp_mml_3pl_calcexp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector NP(1);
  NP[0]  = RcppDeepState_int();
  qs::c_qsave(NP,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/NP.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NP values: "<< NP << std::endl;
  NumericMatrix rprobs  = RcppDeepState_NumericMatrix();
  qs::c_qsave(rprobs,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/rprobs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rprobs values: "<< rprobs << std::endl;
  NumericMatrix A  = RcppDeepState_NumericMatrix();
  qs::c_qsave(A,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/A.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericMatrix INDEXIPNO  = RcppDeepState_NumericMatrix();
  qs::c_qsave(INDEXIPNO,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/INDEXIPNO.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPNO values: "<< INDEXIPNO << std::endl;
  NumericVector INDEXIPLIST2  = RcppDeepState_NumericVector();
  qs::c_qsave(INDEXIPLIST2,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/INDEXIPLIST2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "INDEXIPLIST2 values: "<< INDEXIPLIST2 << std::endl;
  NumericVector ESTXSIINDEX  = RcppDeepState_NumericVector();
  qs::c_qsave(ESTXSIINDEX,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/ESTXSIINDEX.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ESTXSIINDEX values: "<< ESTXSIINDEX << std::endl;
  IntegerVector C(1);
  C[0]  = RcppDeepState_int();
  qs::c_qsave(C,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/C.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  NumericMatrix ITEMWT  = RcppDeepState_NumericMatrix();
  qs::c_qsave(ITEMWT,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/ITEMWT.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ITEMWT values: "<< ITEMWT << std::endl;
  NumericMatrix rprobs0  = RcppDeepState_NumericMatrix();
  qs::c_qsave(rprobs0,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/rprobs0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rprobs0 values: "<< rprobs0 << std::endl;
  NumericVector GUESS  = RcppDeepState_NumericVector();
  qs::c_qsave(GUESS,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/GUESS.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "GUESS values: "<< GUESS << std::endl;
  NumericVector nik  = RcppDeepState_NumericVector();
  qs::c_qsave(nik,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/nik.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nik values: "<< nik << std::endl;
  NumericVector ni  = RcppDeepState_NumericVector();
  qs::c_qsave(ni,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_calcexp/inputs/ni.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ni values: "<< ni << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_mml_3pl_calcexp(NP[0],rprobs,A,INDEXIPNO,INDEXIPLIST2,ESTXSIINDEX,C[0],ITEMWT,rprobs0,GUESS,nik,ni);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
