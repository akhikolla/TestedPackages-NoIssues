// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_calc_exp_redefine_vector_na_DeepState_TestHarness_generation.cpp and tam_rcpp_calc_exp_redefine_vector_na_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector tam_rcpp_calc_exp_redefine_vector_na(Rcpp::NumericVector A, double val);

TEST(TAM_deepstate_test,tam_rcpp_calc_exp_redefine_vector_na_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector A  = RcppDeepState_NumericVector();
  std::string A_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp_redefine_vector_na/AFL_tam_rcpp_calc_exp_redefine_vector_na/afl_inputs/" + std::to_string(t) + "_A.qs";
  qs::c_qsave(A,A_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericVector val(1);
  val[0]  = RcppDeepState_double();
  std::string val_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_calc_exp_redefine_vector_na/AFL_tam_rcpp_calc_exp_redefine_vector_na/afl_inputs/" + std::to_string(t) + "_val.qs";
  qs::c_qsave(val,val_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "val values: "<< val << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_calc_exp_redefine_vector_na(A,val[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
