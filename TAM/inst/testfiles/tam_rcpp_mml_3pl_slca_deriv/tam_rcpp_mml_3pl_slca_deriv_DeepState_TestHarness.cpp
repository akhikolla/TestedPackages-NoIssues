// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_mml_3pl_slca_deriv_DeepState_TestHarness_generation.cpp and tam_rcpp_mml_3pl_slca_deriv_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_mml_3pl_slca_deriv(Rcpp::NumericMatrix XdesM, Rcpp::NumericVector dimXdes, Rcpp::NumericVector Xlambda, Rcpp::NumericVector probs, Rcpp::NumericVector nik, Rcpp::NumericVector Nik, Rcpp::NumericVector guess, Rcpp::NumericVector probs0);

TEST(TAM_deepstate_test,tam_rcpp_mml_3pl_slca_deriv_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix XdesM  = RcppDeepState_NumericMatrix();
  qs::c_qsave(XdesM,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/XdesM.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "XdesM values: "<< XdesM << std::endl;
  NumericVector dimXdes  = RcppDeepState_NumericVector();
  qs::c_qsave(dimXdes,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/dimXdes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dimXdes values: "<< dimXdes << std::endl;
  NumericVector Xlambda  = RcppDeepState_NumericVector();
  qs::c_qsave(Xlambda,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/Xlambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Xlambda values: "<< Xlambda << std::endl;
  NumericVector probs  = RcppDeepState_NumericVector();
  qs::c_qsave(probs,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/probs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  NumericVector nik  = RcppDeepState_NumericVector();
  qs::c_qsave(nik,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/nik.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nik values: "<< nik << std::endl;
  NumericVector Nik  = RcppDeepState_NumericVector();
  qs::c_qsave(Nik,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/Nik.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nik values: "<< Nik << std::endl;
  NumericVector guess  = RcppDeepState_NumericVector();
  qs::c_qsave(guess,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/guess.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "guess values: "<< guess << std::endl;
  NumericVector probs0  = RcppDeepState_NumericVector();
  qs::c_qsave(probs0,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_3pl_slca_deriv/inputs/probs0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs0 values: "<< probs0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_mml_3pl_slca_deriv(XdesM,dimXdes,Xlambda,probs,nik,Nik,guess,probs0);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
