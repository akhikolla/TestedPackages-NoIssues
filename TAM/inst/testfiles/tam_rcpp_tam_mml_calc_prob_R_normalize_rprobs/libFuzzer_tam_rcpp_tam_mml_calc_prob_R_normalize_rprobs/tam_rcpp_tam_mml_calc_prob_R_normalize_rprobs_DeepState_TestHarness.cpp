// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs_DeepState_TestHarness_generation.cpp and tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs(Rcpp::NumericVector rr, Rcpp::IntegerVector dim_rr);

TEST(TAM_deepstate_test,tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector rr  = RcppDeepState_NumericVector();
  std::string rr_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs/libFuzzer_tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rr.qs";
  qs::c_qsave(rr,rr_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rr values: "<< rr << std::endl;
  IntegerVector dim_rr  = RcppDeepState_IntegerVector();
  std::string dim_rr_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs/libFuzzer_tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dim_rr.qs";
  qs::c_qsave(dim_rr,dim_rr_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dim_rr values: "<< dim_rr << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_tam_mml_calc_prob_R_normalize_rprobs(rr,dim_rr);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
