// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tam_rcpp_mml_mfr_a_matrix_cumsum_DeepState_TestHarness_generation.cpp and tam_rcpp_mml_mfr_a_matrix_cumsum_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List tam_rcpp_mml_mfr_a_matrix_cumsum(Rcpp::NumericMatrix index_matr, Rcpp::NumericMatrix mm, int SG);

TEST(TAM_deepstate_test,tam_rcpp_mml_mfr_a_matrix_cumsum_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix index_matr  = RcppDeepState_NumericMatrix();
  qs::c_qsave(index_matr,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_mfr_a_matrix_cumsum/inputs/index_matr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_matr values: "<< index_matr << std::endl;
  NumericMatrix mm  = RcppDeepState_NumericMatrix();
  qs::c_qsave(mm,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_mfr_a_matrix_cumsum/inputs/mm.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mm values: "<< mm << std::endl;
  IntegerVector SG(1);
  SG[0]  = RcppDeepState_int();
  qs::c_qsave(SG,"/home/akhila/fuzzer_packages/fuzzedpackages/TAM/inst/testfiles/tam_rcpp_mml_mfr_a_matrix_cumsum/inputs/SG.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SG values: "<< SG << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tam_rcpp_mml_mfr_a_matrix_cumsum(index_matr,mm,SG[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
