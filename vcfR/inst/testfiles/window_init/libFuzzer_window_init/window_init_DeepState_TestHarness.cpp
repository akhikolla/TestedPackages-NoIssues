// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// window_init_DeepState_TestHarness_generation.cpp and window_init_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DataFrame window_init(int window_size, int max_bp);

TEST(vcfR_deepstate_test,window_init_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector window_size(1);
  window_size[0]  = RcppDeepState_int();
  std::string window_size_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vcfR/inst/testfiles/window_init/libFuzzer_window_init/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_window_size.qs";
  qs::c_qsave(window_size,window_size_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "window_size values: "<< window_size << std::endl;
  IntegerVector max_bp(1);
  max_bp[0]  = RcppDeepState_int();
  std::string max_bp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vcfR/inst/testfiles/window_init/libFuzzer_window_init/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_max_bp.qs";
  qs::c_qsave(max_bp,max_bp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_bp values: "<< max_bp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    window_init(window_size[0],max_bp[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
