// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// interval_index_C_DeepState_TestHarness_generation.cpp and interval_index_C_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector interval_index_C(Rcpp::NumericMatrix MATR, Rcpp::NumericVector RN);

TEST(sirt_deepstate_test,interval_index_C_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix MATR  = RcppDeepState_NumericMatrix();
  qs::c_qsave(MATR,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/interval_index_C/inputs/MATR.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "MATR values: "<< MATR << std::endl;
  NumericVector RN  = RcppDeepState_NumericVector();
  qs::c_qsave(RN,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/interval_index_C/inputs/RN.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RN values: "<< RN << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    interval_index_C(MATR,RN);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
