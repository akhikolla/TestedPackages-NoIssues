// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// probs_pcm_nogroups_C_DeepState_TestHarness_generation.cpp and probs_pcm_nogroups_C_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List probs_pcm_nogroups_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericMatrix probs, int CC, int TP);

TEST(sirt_deepstate_test,probs_pcm_nogroups_C_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix dat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(dat,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/probs_pcm_nogroups_C/inputs/dat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dat values: "<< dat << std::endl;
  NumericMatrix dat_resp  = RcppDeepState_NumericMatrix();
  qs::c_qsave(dat_resp,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/probs_pcm_nogroups_C/inputs/dat_resp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dat_resp values: "<< dat_resp << std::endl;
  NumericMatrix probs  = RcppDeepState_NumericMatrix();
  qs::c_qsave(probs,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/probs_pcm_nogroups_C/inputs/probs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  IntegerVector CC(1);
  CC[0]  = RcppDeepState_int();
  qs::c_qsave(CC,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/probs_pcm_nogroups_C/inputs/CC.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "CC values: "<< CC << std::endl;
  IntegerVector TP(1);
  TP[0]  = RcppDeepState_int();
  qs::c_qsave(TP,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/probs_pcm_nogroups_C/inputs/TP.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "TP values: "<< TP << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    probs_pcm_nogroups_C(dat,dat_resp,probs,CC[0],TP[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
