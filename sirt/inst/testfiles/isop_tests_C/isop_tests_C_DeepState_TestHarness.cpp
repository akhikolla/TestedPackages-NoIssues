// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// isop_tests_C_DeepState_TestHarness_generation.cpp and isop_tests_C_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List isop_tests_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericVector weights, Rcpp::NumericVector jackunits, int JJ);

TEST(sirt_deepstate_test,isop_tests_C_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix dat  = RcppDeepState_NumericMatrix();
  qs::c_qsave(dat,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/isop_tests_C/inputs/dat.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dat values: "<< dat << std::endl;
  NumericMatrix dat_resp  = RcppDeepState_NumericMatrix();
  qs::c_qsave(dat_resp,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/isop_tests_C/inputs/dat_resp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dat_resp values: "<< dat_resp << std::endl;
  NumericVector weights  = RcppDeepState_NumericVector();
  qs::c_qsave(weights,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/isop_tests_C/inputs/weights.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "weights values: "<< weights << std::endl;
  NumericVector jackunits  = RcppDeepState_NumericVector();
  qs::c_qsave(jackunits,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/isop_tests_C/inputs/jackunits.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jackunits values: "<< jackunits << std::endl;
  IntegerVector JJ(1);
  JJ[0]  = RcppDeepState_int();
  qs::c_qsave(JJ,"/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/isop_tests_C/inputs/JJ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "JJ values: "<< JJ << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    isop_tests_C(dat,dat_resp,weights,jackunits,JJ[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
