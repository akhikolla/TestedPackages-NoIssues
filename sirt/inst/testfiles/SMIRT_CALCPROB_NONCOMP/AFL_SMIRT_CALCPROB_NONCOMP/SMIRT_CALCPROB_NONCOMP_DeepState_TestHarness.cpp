// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// SMIRT_CALCPROB_NONCOMP_DeepState_TestHarness_generation.cpp and SMIRT_CALCPROB_NONCOMP_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix SMIRT_CALCPROB_NONCOMP(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix QQ, Rcpp::NumericMatrix THETA, Rcpp::NumericVector CC, Rcpp::NumericVector DD);

TEST(sirt_deepstate_test,SMIRT_CALCPROB_NONCOMP_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix A  = RcppDeepState_NumericMatrix();
  std::string A_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/SMIRT_CALCPROB_NONCOMP/AFL_SMIRT_CALCPROB_NONCOMP/afl_inputs/" + std::to_string(t) + "_A.qs";
  qs::c_qsave(A,A_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "A values: "<< A << std::endl;
  NumericMatrix B  = RcppDeepState_NumericMatrix();
  std::string B_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/SMIRT_CALCPROB_NONCOMP/AFL_SMIRT_CALCPROB_NONCOMP/afl_inputs/" + std::to_string(t) + "_B.qs";
  qs::c_qsave(B,B_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "B values: "<< B << std::endl;
  NumericMatrix QQ  = RcppDeepState_NumericMatrix();
  std::string QQ_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/SMIRT_CALCPROB_NONCOMP/AFL_SMIRT_CALCPROB_NONCOMP/afl_inputs/" + std::to_string(t) + "_QQ.qs";
  qs::c_qsave(QQ,QQ_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "QQ values: "<< QQ << std::endl;
  NumericMatrix THETA  = RcppDeepState_NumericMatrix();
  std::string THETA_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/SMIRT_CALCPROB_NONCOMP/AFL_SMIRT_CALCPROB_NONCOMP/afl_inputs/" + std::to_string(t) + "_THETA.qs";
  qs::c_qsave(THETA,THETA_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "THETA values: "<< THETA << std::endl;
  NumericVector CC  = RcppDeepState_NumericVector();
  std::string CC_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/SMIRT_CALCPROB_NONCOMP/AFL_SMIRT_CALCPROB_NONCOMP/afl_inputs/" + std::to_string(t) + "_CC.qs";
  qs::c_qsave(CC,CC_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "CC values: "<< CC << std::endl;
  NumericVector DD  = RcppDeepState_NumericVector();
  std::string DD_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sirt/inst/testfiles/SMIRT_CALCPROB_NONCOMP/AFL_SMIRT_CALCPROB_NONCOMP/afl_inputs/" + std::to_string(t) + "_DD.qs";
  qs::c_qsave(DD,DD_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "DD values: "<< DD << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    SMIRT_CALCPROB_NONCOMP(A,B,QQ,THETA,CC,DD);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
