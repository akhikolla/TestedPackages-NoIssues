// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// predBMAcpp_DeepState_TestHarness_generation.cpp and predBMAcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix predBMAcpp(NumericMatrix SurvMat, NumericMatrix LpMat, NumericVector WtVec);

TEST(glmBfp_deepstate_test,predBMAcpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix SurvMat  = RcppDeepState_NumericMatrix();
  std::string SurvMat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/glmBfp/inst/testfiles/predBMAcpp/libFuzzer_predBMAcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_SurvMat.qs";
  qs::c_qsave(SurvMat,SurvMat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SurvMat values: "<< SurvMat << std::endl;
  NumericMatrix LpMat  = RcppDeepState_NumericMatrix();
  std::string LpMat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/glmBfp/inst/testfiles/predBMAcpp/libFuzzer_predBMAcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_LpMat.qs";
  qs::c_qsave(LpMat,LpMat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LpMat values: "<< LpMat << std::endl;
  NumericVector WtVec  = RcppDeepState_NumericVector();
  std::string WtVec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/glmBfp/inst/testfiles/predBMAcpp/libFuzzer_predBMAcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_WtVec.qs";
  qs::c_qsave(WtVec,WtVec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "WtVec values: "<< WtVec << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    predBMAcpp(SurvMat,LpMat,WtVec);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
