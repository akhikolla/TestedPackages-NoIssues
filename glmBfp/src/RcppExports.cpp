// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cpp_bfgs
SEXP cpp_bfgs(SEXP r_startval, SEXP r_function, SEXP r_minx, SEXP r_maxx, SEXP r_precision, SEXP r_verbose);
RcppExport SEXP _glmBfp_cpp_bfgs(SEXP r_startvalSEXP, SEXP r_functionSEXP, SEXP r_minxSEXP, SEXP r_maxxSEXP, SEXP r_precisionSEXP, SEXP r_verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_startval(r_startvalSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_function(r_functionSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_minx(r_minxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_maxx(r_maxxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_precision(r_precisionSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_verbose(r_verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_bfgs(r_startval, r_function, r_minx, r_maxx, r_precision, r_verbose));
    return rcpp_result_gen;
END_RCPP
}
// cpp_coxfit
SEXP cpp_coxfit(SEXP R_survTimes, SEXP R_censInd, SEXP R_offsets, SEXP R_X, SEXP R_method);
RcppExport SEXP _glmBfp_cpp_coxfit(SEXP R_survTimesSEXP, SEXP R_censIndSEXP, SEXP R_offsetsSEXP, SEXP R_XSEXP, SEXP R_methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type R_survTimes(R_survTimesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_censInd(R_censIndSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_offsets(R_offsetsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_X(R_XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_method(R_methodSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_coxfit(R_survTimes, R_censInd, R_offsets, R_X, R_method));
    return rcpp_result_gen;
END_RCPP
}
// cpp_evalZdensity
SEXP cpp_evalZdensity(List rcpp_config, List rcpp_data, List rcpp_fpInfos, List rcpp_ucInfos, List rcpp_fixInfos, List rcpp_distribution, List rcpp_options);
RcppExport SEXP _glmBfp_cpp_evalZdensity(SEXP rcpp_configSEXP, SEXP rcpp_dataSEXP, SEXP rcpp_fpInfosSEXP, SEXP rcpp_ucInfosSEXP, SEXP rcpp_fixInfosSEXP, SEXP rcpp_distributionSEXP, SEXP rcpp_optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rcpp_config(rcpp_configSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_data(rcpp_dataSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_fpInfos(rcpp_fpInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_ucInfos(rcpp_ucInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_fixInfos(rcpp_fixInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_distribution(rcpp_distributionSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_options(rcpp_optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_evalZdensity(rcpp_config, rcpp_data, rcpp_fpInfos, rcpp_ucInfos, rcpp_fixInfos, rcpp_distribution, rcpp_options));
    return rcpp_result_gen;
END_RCPP
}
// cpp_glmBayesMfp
SEXP cpp_glmBayesMfp(List rcpp_data, List rcpp_fpInfos, List rcpp_ucInfos, List rcpp_fixInfos, List rcpp_searchConfig, List rcpp_distribution, List rcpp_options);
RcppExport SEXP _glmBfp_cpp_glmBayesMfp(SEXP rcpp_dataSEXP, SEXP rcpp_fpInfosSEXP, SEXP rcpp_ucInfosSEXP, SEXP rcpp_fixInfosSEXP, SEXP rcpp_searchConfigSEXP, SEXP rcpp_distributionSEXP, SEXP rcpp_optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rcpp_data(rcpp_dataSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_fpInfos(rcpp_fpInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_ucInfos(rcpp_ucInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_fixInfos(rcpp_fixInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_searchConfig(rcpp_searchConfigSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_distribution(rcpp_distributionSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_options(rcpp_optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_glmBayesMfp(rcpp_data, rcpp_fpInfos, rcpp_ucInfos, rcpp_fixInfos, rcpp_searchConfig, rcpp_distribution, rcpp_options));
    return rcpp_result_gen;
END_RCPP
}
// cpp_optimize
SEXP cpp_optimize(SEXP R_function, SEXP R_minx, SEXP R_maxx, SEXP R_precision);
RcppExport SEXP _glmBfp_cpp_optimize(SEXP R_functionSEXP, SEXP R_minxSEXP, SEXP R_maxxSEXP, SEXP R_precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type R_function(R_functionSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_minx(R_minxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_maxx(R_maxxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type R_precision(R_precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_optimize(R_function, R_minx, R_maxx, R_precision));
    return rcpp_result_gen;
END_RCPP
}
// predBMAcpp
NumericMatrix predBMAcpp(NumericMatrix SurvMat, NumericMatrix LpMat, NumericVector WtVec);
RcppExport SEXP _glmBfp_predBMAcpp(SEXP SurvMatSEXP, SEXP LpMatSEXP, SEXP WtVecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type SurvMat(SurvMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LpMat(LpMatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type WtVec(WtVecSEXP);
    rcpp_result_gen = Rcpp::wrap(predBMAcpp(SurvMat, LpMat, WtVec));
    return rcpp_result_gen;
END_RCPP
}
// cpp_sampleGlm
SEXP cpp_sampleGlm(List rcpp_model, List rcpp_data, List rcpp_fpInfos, List rcpp_ucInfos, List rcpp_fixInfos, List rcpp_distribution, List rcpp_searchConfig, List rcpp_options, List rcpp_marginalz);
RcppExport SEXP _glmBfp_cpp_sampleGlm(SEXP rcpp_modelSEXP, SEXP rcpp_dataSEXP, SEXP rcpp_fpInfosSEXP, SEXP rcpp_ucInfosSEXP, SEXP rcpp_fixInfosSEXP, SEXP rcpp_distributionSEXP, SEXP rcpp_searchConfigSEXP, SEXP rcpp_optionsSEXP, SEXP rcpp_marginalzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rcpp_model(rcpp_modelSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_data(rcpp_dataSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_fpInfos(rcpp_fpInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_ucInfos(rcpp_ucInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_fixInfos(rcpp_fixInfosSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_distribution(rcpp_distributionSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_searchConfig(rcpp_searchConfigSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_options(rcpp_optionsSEXP);
    Rcpp::traits::input_parameter< List >::type rcpp_marginalz(rcpp_marginalzSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_sampleGlm(rcpp_model, rcpp_data, rcpp_fpInfos, rcpp_ucInfos, rcpp_fixInfos, rcpp_distribution, rcpp_searchConfig, rcpp_options, rcpp_marginalz));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_glmBfp_cpp_bfgs", (DL_FUNC) &_glmBfp_cpp_bfgs, 6},
    {"_glmBfp_cpp_coxfit", (DL_FUNC) &_glmBfp_cpp_coxfit, 5},
    {"_glmBfp_cpp_evalZdensity", (DL_FUNC) &_glmBfp_cpp_evalZdensity, 7},
    {"_glmBfp_cpp_glmBayesMfp", (DL_FUNC) &_glmBfp_cpp_glmBayesMfp, 7},
    {"_glmBfp_cpp_optimize", (DL_FUNC) &_glmBfp_cpp_optimize, 4},
    {"_glmBfp_predBMAcpp", (DL_FUNC) &_glmBfp_predBMAcpp, 3},
    {"_glmBfp_cpp_sampleGlm", (DL_FUNC) &_glmBfp_cpp_sampleGlm, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_glmBfp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
