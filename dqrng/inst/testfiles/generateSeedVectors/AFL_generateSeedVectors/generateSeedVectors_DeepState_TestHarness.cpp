// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// generateSeedVectors_DeepState_TestHarness_generation.cpp and generateSeedVectors_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List generateSeedVectors(int nseeds, int nwords);

TEST(dqrng_deepstate_test,generateSeedVectors_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector nseeds(1);
  nseeds[0]  = RcppDeepState_int();
  std::string nseeds_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dqrng/inst/testfiles/generateSeedVectors/AFL_generateSeedVectors/afl_inputs/" + std::to_string(t) + "_nseeds.qs";
  qs::c_qsave(nseeds,nseeds_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nseeds values: "<< nseeds << std::endl;
  IntegerVector nwords(1);
  nwords[0]  = RcppDeepState_int();
  std::string nwords_t = "/home/akhila/fuzzer_packages/fuzzedpackages/dqrng/inst/testfiles/generateSeedVectors/AFL_generateSeedVectors/afl_inputs/" + std::to_string(t) + "_nwords.qs";
  qs::c_qsave(nwords,nwords_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nwords values: "<< nwords << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    generateSeedVectors(nseeds[0],nwords[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
