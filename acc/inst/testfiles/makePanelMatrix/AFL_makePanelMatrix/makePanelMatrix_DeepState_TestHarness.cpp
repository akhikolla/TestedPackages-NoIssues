// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// makePanelMatrix_DeepState_TestHarness_generation.cpp and makePanelMatrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix makePanelMatrix(NumericVector T, NumericVector M, NumericVector UID, NumericVector TGD, NumericVector C);

TEST(acc_deepstate_test,makePanelMatrix_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector T  = RcppDeepState_NumericVector();
  std::string T_t = "/home/akhila/fuzzer_packages/fuzzedpackages/acc/inst/testfiles/makePanelMatrix/AFL_makePanelMatrix/afl_inputs/" + std::to_string(t) + "_T.qs";
  qs::c_qsave(T,T_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T values: "<< T << std::endl;
  NumericVector M  = RcppDeepState_NumericVector();
  std::string M_t = "/home/akhila/fuzzer_packages/fuzzedpackages/acc/inst/testfiles/makePanelMatrix/AFL_makePanelMatrix/afl_inputs/" + std::to_string(t) + "_M.qs";
  qs::c_qsave(M,M_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  NumericVector UID  = RcppDeepState_NumericVector();
  std::string UID_t = "/home/akhila/fuzzer_packages/fuzzedpackages/acc/inst/testfiles/makePanelMatrix/AFL_makePanelMatrix/afl_inputs/" + std::to_string(t) + "_UID.qs";
  qs::c_qsave(UID,UID_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "UID values: "<< UID << std::endl;
  NumericVector TGD  = RcppDeepState_NumericVector();
  std::string T_t = "/home/akhila/fuzzer_packages/fuzzedpackages/acc/inst/testfiles/makePanelMatrix/AFL_makePanelMatrix/afl_inputs/" + std::to_string(t) + "_T.qs";
  std::string TGD_t = "/home/akhila/fuzzer_packages/fuzzedpackages/acc/inst/testfiles/makePanelMatrix/AFL_makePanelMatrix/afl_inputs/" + std::to_string(t) + "_TGD.qs";
  qs::c_qsave(TGD,TGD_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "TGD values: "<< TGD << std::endl;
  NumericVector C  = RcppDeepState_NumericVector();
  std::string C_t = "/home/akhila/fuzzer_packages/fuzzedpackages/acc/inst/testfiles/makePanelMatrix/AFL_makePanelMatrix/afl_inputs/" + std::to_string(t) + "_C.qs";
  qs::c_qsave(C,C_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C values: "<< C << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    makePanelMatrix(T,M,UID,TGD,C);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
