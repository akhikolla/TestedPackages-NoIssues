// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// juliacall_initialize
bool juliacall_initialize(const std::string& libpath);
RcppExport SEXP _JuliaCall_juliacall_initialize(SEXP libpathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type libpath(libpathSEXP);
    rcpp_result_gen = Rcpp::wrap(juliacall_initialize(libpath));
    return rcpp_result_gen;
END_RCPP
}
// juliacall_cmd
bool juliacall_cmd(const char* libpath);
RcppExport SEXP _JuliaCall_juliacall_cmd(SEXP libpathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type libpath(libpathSEXP);
    rcpp_result_gen = Rcpp::wrap(juliacall_cmd(libpath));
    return rcpp_result_gen;
END_RCPP
}
// juliacall_docall
SEXP juliacall_docall(SEXP jcall);
RcppExport SEXP _JuliaCall_juliacall_docall(SEXP jcallSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type jcall(jcallSEXP);
    rcpp_result_gen = Rcpp::wrap(juliacall_docall(jcall));
    return rcpp_result_gen;
END_RCPP
}
// juliacall_atexit_hook
void juliacall_atexit_hook(int status);
RcppExport SEXP _JuliaCall_juliacall_atexit_hook(SEXP statusSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type status(statusSEXP);
    juliacall_atexit_hook(status);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_JuliaCall_juliacall_initialize", (DL_FUNC) &_JuliaCall_juliacall_initialize, 1},
    {"_JuliaCall_juliacall_cmd", (DL_FUNC) &_JuliaCall_juliacall_cmd, 1},
    {"_JuliaCall_juliacall_docall", (DL_FUNC) &_JuliaCall_juliacall_docall, 1},
    {"_JuliaCall_juliacall_atexit_hook", (DL_FUNC) &_JuliaCall_juliacall_atexit_hook, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_JuliaCall(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
