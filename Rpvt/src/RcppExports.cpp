// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// PVT_GAS_PROPERTIES
NumericMatrix PVT_GAS_PROPERTIES(Rcpp::List lst);
RcppExport SEXP _Rpvt_PVT_GAS_PROPERTIES(SEXP lstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type lst(lstSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_GAS_PROPERTIES(lst));
    return rcpp_result_gen;
END_RCPP
}
// PVT_OIL_PROPERTIES
NumericMatrix PVT_OIL_PROPERTIES(Rcpp::List lst);
RcppExport SEXP _Rpvt_PVT_OIL_PROPERTIES(SEXP lstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type lst(lstSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_OIL_PROPERTIES(lst));
    return rcpp_result_gen;
END_RCPP
}
// PVT_WATER_PROPERTIES
NumericMatrix PVT_WATER_PROPERTIES(Rcpp::List lst);
RcppExport SEXP _Rpvt_PVT_WATER_PROPERTIES(SEXP lstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type lst(lstSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_WATER_PROPERTIES(lst));
    return rcpp_result_gen;
END_RCPP
}
// PB_STANDING
double PB_STANDING(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_PB_STANDING(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(PB_STANDING(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// RSi_STANDING
arma::vec RSi_STANDING(double t, const double pb, const double api, const double spgr);
RcppExport SEXP _Rpvt_RSi_STANDING(SEXP tSEXP, SEXP pbSEXP, SEXP apiSEXP, SEXP spgrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    rcpp_result_gen = Rcpp::wrap(RSi_STANDING(t, pb, api, spgr));
    return rcpp_result_gen;
END_RCPP
}
// RS_STANDING
arma::vec RS_STANDING(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_RS_STANDING(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(RS_STANDING(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BOB_STANDING
arma::vec BOB_STANDING(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BOB_STANDING(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BOB_STANDING(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_UNDERSAT_STANDING
double CO_UNDERSAT_STANDING(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_CO_UNDERSAT_STANDING(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_UNDERSAT_STANDING(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_UNDERSAT_SPIVEY
double CO_UNDERSAT_SPIVEY(double t, const double p, const double pb, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_CO_UNDERSAT_SPIVEY(SEXP tSEXP, SEXP pSEXP, SEXP pbSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_UNDERSAT_SPIVEY(t, p, pb, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BO_STANDING
arma::vec BO_STANDING(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BO_STANDING(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BO_STANDING(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_STANDING
double CO_STANDING(double t, const double p, const double api, const double spgr, const double rsi, const double tsc, const double psca, const double tpc, const double ppc);
RcppExport SEXP _Rpvt_CO_STANDING(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP, SEXP tscSEXP, SEXP pscaSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< const double >::type tsc(tscSEXP);
    Rcpp::traits::input_parameter< const double >::type psca(pscaSEXP);
    Rcpp::traits::input_parameter< const double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< const double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_STANDING(t, p, api, spgr, rsi, tsc, psca, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// DENSITY_STANDING
double DENSITY_STANDING(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_DENSITY_STANDING(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(DENSITY_STANDING(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// PB_VASQUEZ_BEGGS
double PB_VASQUEZ_BEGGS(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_PB_VASQUEZ_BEGGS(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(PB_VASQUEZ_BEGGS(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// RSi_VASQUEZ_BEGGS
arma::vec RSi_VASQUEZ_BEGGS(double t, const double pb, const double api, const double spgr);
RcppExport SEXP _Rpvt_RSi_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pbSEXP, SEXP apiSEXP, SEXP spgrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    rcpp_result_gen = Rcpp::wrap(RSi_VASQUEZ_BEGGS(t, pb, api, spgr));
    return rcpp_result_gen;
END_RCPP
}
// RS_VASQUEZ_BEGGS
arma::vec RS_VASQUEZ_BEGGS(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_RS_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(RS_VASQUEZ_BEGGS(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BOB_VASQUEZ_BEGGS
arma::vec BOB_VASQUEZ_BEGGS(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BOB_VASQUEZ_BEGGS(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BOB_VASQUEZ_BEGGS(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_UNDERSAT_VASQUEZ_BEGGS
double CO_UNDERSAT_VASQUEZ_BEGGS(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_CO_UNDERSAT_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_UNDERSAT_VASQUEZ_BEGGS(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BO_VASQUEZ_BEGGS
arma::vec BO_VASQUEZ_BEGGS(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BO_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BO_VASQUEZ_BEGGS(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_VASQUEZ_BEGGS
double CO_VASQUEZ_BEGGS(double t, const double p, const double api, const double spgr, const double rsi, const double tsc, const double psca, const double tpc, const double ppc);
RcppExport SEXP _Rpvt_CO_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP, SEXP tscSEXP, SEXP pscaSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< const double >::type tsc(tscSEXP);
    Rcpp::traits::input_parameter< const double >::type psca(pscaSEXP);
    Rcpp::traits::input_parameter< const double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< const double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_VASQUEZ_BEGGS(t, p, api, spgr, rsi, tsc, psca, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// DENSITY_VASQUEZ_BEGGS
double DENSITY_VASQUEZ_BEGGS(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_DENSITY_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(DENSITY_VASQUEZ_BEGGS(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// PB_FARSHAD_PETROSKY
double PB_FARSHAD_PETROSKY(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_PB_FARSHAD_PETROSKY(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(PB_FARSHAD_PETROSKY(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// RSi_FARSHAD_PETROSKY
arma::vec RSi_FARSHAD_PETROSKY(double t, const double pb, const double api, const double spgr);
RcppExport SEXP _Rpvt_RSi_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pbSEXP, SEXP apiSEXP, SEXP spgrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    rcpp_result_gen = Rcpp::wrap(RSi_FARSHAD_PETROSKY(t, pb, api, spgr));
    return rcpp_result_gen;
END_RCPP
}
// RS_FARSHAD_PETROSKY
arma::vec RS_FARSHAD_PETROSKY(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_RS_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(RS_FARSHAD_PETROSKY(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BOB_FARSHAD_PETROSKY
arma::vec BOB_FARSHAD_PETROSKY(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BOB_FARSHAD_PETROSKY(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BOB_FARSHAD_PETROSKY(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_UNDERSAT_FARSHAD_PETROSKY
double CO_UNDERSAT_FARSHAD_PETROSKY(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_CO_UNDERSAT_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_UNDERSAT_FARSHAD_PETROSKY(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BO_FARSHAD_PETROSKY
arma::vec BO_FARSHAD_PETROSKY(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BO_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BO_FARSHAD_PETROSKY(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_FARSHAD_PETROSKY
double CO_FARSHAD_PETROSKY(double t, const double p, const double api, const double spgr, const double rsi, const double tsc, const double psca, const double tpc, const double ppc);
RcppExport SEXP _Rpvt_CO_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP, SEXP tscSEXP, SEXP pscaSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< const double >::type tsc(tscSEXP);
    Rcpp::traits::input_parameter< const double >::type psca(pscaSEXP);
    Rcpp::traits::input_parameter< const double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< const double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_FARSHAD_PETROSKY(t, p, api, spgr, rsi, tsc, psca, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// DENSITY_FARSHAD_PETROSKY
double DENSITY_FARSHAD_PETROSKY(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_DENSITY_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(DENSITY_FARSHAD_PETROSKY(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// PB_AL_MARHOUN
double PB_AL_MARHOUN(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_PB_AL_MARHOUN(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(PB_AL_MARHOUN(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// RSi_AL_MARHOUN
arma::vec RSi_AL_MARHOUN(double t, const double pb, const double api, const double spgr);
RcppExport SEXP _Rpvt_RSi_AL_MARHOUN(SEXP tSEXP, SEXP pbSEXP, SEXP apiSEXP, SEXP spgrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    rcpp_result_gen = Rcpp::wrap(RSi_AL_MARHOUN(t, pb, api, spgr));
    return rcpp_result_gen;
END_RCPP
}
// RS_AL_MARHOUN
arma::vec RS_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_RS_AL_MARHOUN(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(RS_AL_MARHOUN(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BOB_AL_MARHOUN
arma::vec BOB_AL_MARHOUN(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BOB_AL_MARHOUN(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BOB_AL_MARHOUN(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_UNDERSAT_AL_MARHOUN
double CO_UNDERSAT_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_CO_UNDERSAT_AL_MARHOUN(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_UNDERSAT_AL_MARHOUN(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BO_AL_MARHOUN
arma::vec BO_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BO_AL_MARHOUN(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BO_AL_MARHOUN(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_AL_MARHOUN
double CO_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi, const double tsc, const double psca, const double tpc, const double ppc);
RcppExport SEXP _Rpvt_CO_AL_MARHOUN(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP, SEXP tscSEXP, SEXP pscaSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< const double >::type tsc(tscSEXP);
    Rcpp::traits::input_parameter< const double >::type psca(pscaSEXP);
    Rcpp::traits::input_parameter< const double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< const double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_AL_MARHOUN(t, p, api, spgr, rsi, tsc, psca, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// DENSITY_AL_MARHOUN
double DENSITY_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_DENSITY_AL_MARHOUN(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(DENSITY_AL_MARHOUN(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// PB_GLASO
double PB_GLASO(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_PB_GLASO(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(PB_GLASO(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// RSi_GLASO
arma::vec RSi_GLASO(double t, const double pb, const double api, const double spgr);
RcppExport SEXP _Rpvt_RSi_GLASO(SEXP tSEXP, SEXP pbSEXP, SEXP apiSEXP, SEXP spgrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type pb(pbSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    rcpp_result_gen = Rcpp::wrap(RSi_GLASO(t, pb, api, spgr));
    return rcpp_result_gen;
END_RCPP
}
// RS_GLASO
arma::vec RS_GLASO(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_RS_GLASO(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(RS_GLASO(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BOB_GLASO
arma::vec BOB_GLASO(double t, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BOB_GLASO(SEXP tSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BOB_GLASO(t, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_UNDERSAT_GLASO
double CO_UNDERSAT_GLASO(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_CO_UNDERSAT_GLASO(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_UNDERSAT_GLASO(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// BO_GLASO
arma::vec BO_GLASO(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_BO_GLASO(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(BO_GLASO(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// CO_GLASO
double CO_GLASO(double t, const double p, const double api, const double spgr, const double rsi, const double tsc, const double psca, const double tpc, const double ppc);
RcppExport SEXP _Rpvt_CO_GLASO(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP, SEXP tscSEXP, SEXP pscaSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< const double >::type tsc(tscSEXP);
    Rcpp::traits::input_parameter< const double >::type psca(pscaSEXP);
    Rcpp::traits::input_parameter< const double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< const double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(CO_GLASO(t, p, api, spgr, rsi, tsc, psca, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// DENSITY_GLASO
double DENSITY_GLASO(double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_DENSITY_GLASO(SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(DENSITY_GLASO(t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// MUO_BEGGS_ROBINSON
double MUO_BEGGS_ROBINSON(const std::string pvt_model, double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_MUO_BEGGS_ROBINSON(SEXP pvt_modelSEXP, SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type pvt_model(pvt_modelSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(MUO_BEGGS_ROBINSON(pvt_model, t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// MUO_AL_MARHOUN
double MUO_AL_MARHOUN(const std::string pvt_model, double t, const double p, const double api, const double spgr, const double rsi);
RcppExport SEXP _Rpvt_MUO_AL_MARHOUN(SEXP pvt_modelSEXP, SEXP tSEXP, SEXP pSEXP, SEXP apiSEXP, SEXP spgrSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type pvt_model(pvt_modelSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const double >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< const double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< const double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(MUO_AL_MARHOUN(pvt_model, t, p, api, spgr, rsi));
    return rcpp_result_gen;
END_RCPP
}
// PVT_OIL_PROPERTIES_STANDING
arma::mat PVT_OIL_PROPERTIES_STANDING(double t, arma::vec p, double spgr, double api, double rsi, double tpc, double ppc);
RcppExport SEXP _Rpvt_PVT_OIL_PROPERTIES_STANDING(SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_OIL_PROPERTIES_STANDING(t, p, spgr, api, rsi, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// PVT_OIL_PROPERTIES_VASQUEZ_BEGGS
arma::mat PVT_OIL_PROPERTIES_VASQUEZ_BEGGS(double t, arma::vec p, double spgr, double api, double rsi, double tpc, double ppc);
RcppExport SEXP _Rpvt_PVT_OIL_PROPERTIES_VASQUEZ_BEGGS(SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_OIL_PROPERTIES_VASQUEZ_BEGGS(t, p, spgr, api, rsi, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// PVT_OIL_PROPERTIES_FARSHAD_PETROSKY
arma::mat PVT_OIL_PROPERTIES_FARSHAD_PETROSKY(double t, arma::vec p, double spgr, double api, double rsi, double tpc, double ppc);
RcppExport SEXP _Rpvt_PVT_OIL_PROPERTIES_FARSHAD_PETROSKY(SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_OIL_PROPERTIES_FARSHAD_PETROSKY(t, p, spgr, api, rsi, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// PVT_OIL_PROPERTIES_AL_MARHOUN
arma::mat PVT_OIL_PROPERTIES_AL_MARHOUN(double t, arma::vec p, double spgr, double api, double rsi, double tpc, double ppc);
RcppExport SEXP _Rpvt_PVT_OIL_PROPERTIES_AL_MARHOUN(SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_OIL_PROPERTIES_AL_MARHOUN(t, p, spgr, api, rsi, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// PVT_OIL_PROPERTIES_GLASO
arma::mat PVT_OIL_PROPERTIES_GLASO(double t, arma::vec p, double spgr, double api, double rsi, double tpc, double ppc);
RcppExport SEXP _Rpvt_PVT_OIL_PROPERTIES_GLASO(SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP, SEXP tpcSEXP, SEXP ppcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    Rcpp::traits::input_parameter< double >::type tpc(tpcSEXP);
    Rcpp::traits::input_parameter< double >::type ppc(ppcSEXP);
    rcpp_result_gen = Rcpp::wrap(PVT_OIL_PROPERTIES_GLASO(t, p, spgr, api, rsi, tpc, ppc));
    return rcpp_result_gen;
END_RCPP
}
// VISC_OIL_PROPERTIES_BEGGS_ROBINSON
arma::vec VISC_OIL_PROPERTIES_BEGGS_ROBINSON(const std::string pvt_model, double t, arma::vec p, double spgr, double api, double rsi);
RcppExport SEXP _Rpvt_VISC_OIL_PROPERTIES_BEGGS_ROBINSON(SEXP pvt_modelSEXP, SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type pvt_model(pvt_modelSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(VISC_OIL_PROPERTIES_BEGGS_ROBINSON(pvt_model, t, p, spgr, api, rsi));
    return rcpp_result_gen;
END_RCPP
}
// VISC_OIL_PROPERTIES_AL_MARHOUN
arma::vec VISC_OIL_PROPERTIES_AL_MARHOUN(const std::string pvt_model, double t, arma::vec p, double spgr, double api, double rsi);
RcppExport SEXP _Rpvt_VISC_OIL_PROPERTIES_AL_MARHOUN(SEXP pvt_modelSEXP, SEXP tSEXP, SEXP pSEXP, SEXP spgrSEXP, SEXP apiSEXP, SEXP rsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type pvt_model(pvt_modelSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type spgr(spgrSEXP);
    Rcpp::traits::input_parameter< double >::type api(apiSEXP);
    Rcpp::traits::input_parameter< double >::type rsi(rsiSEXP);
    rcpp_result_gen = Rcpp::wrap(VISC_OIL_PROPERTIES_AL_MARHOUN(pvt_model, t, p, spgr, api, rsi));
    return rcpp_result_gen;
END_RCPP
}
// WATER_SPIVEY
arma::vec WATER_SPIVEY(const std::string gas_saturated, double t, double p, double S, double z_factor);
RcppExport SEXP _Rpvt_WATER_SPIVEY(SEXP gas_saturatedSEXP, SEXP tSEXP, SEXP pSEXP, SEXP SSEXP, SEXP z_factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string >::type gas_saturated(gas_saturatedSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type z_factor(z_factorSEXP);
    rcpp_result_gen = Rcpp::wrap(WATER_SPIVEY(gas_saturated, t, p, S, z_factor));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rpvt_PVT_GAS_PROPERTIES", (DL_FUNC) &_Rpvt_PVT_GAS_PROPERTIES, 1},
    {"_Rpvt_PVT_OIL_PROPERTIES", (DL_FUNC) &_Rpvt_PVT_OIL_PROPERTIES, 1},
    {"_Rpvt_PVT_WATER_PROPERTIES", (DL_FUNC) &_Rpvt_PVT_WATER_PROPERTIES, 1},
    {"_Rpvt_PB_STANDING", (DL_FUNC) &_Rpvt_PB_STANDING, 4},
    {"_Rpvt_RSi_STANDING", (DL_FUNC) &_Rpvt_RSi_STANDING, 4},
    {"_Rpvt_RS_STANDING", (DL_FUNC) &_Rpvt_RS_STANDING, 5},
    {"_Rpvt_BOB_STANDING", (DL_FUNC) &_Rpvt_BOB_STANDING, 4},
    {"_Rpvt_CO_UNDERSAT_STANDING", (DL_FUNC) &_Rpvt_CO_UNDERSAT_STANDING, 5},
    {"_Rpvt_CO_UNDERSAT_SPIVEY", (DL_FUNC) &_Rpvt_CO_UNDERSAT_SPIVEY, 6},
    {"_Rpvt_BO_STANDING", (DL_FUNC) &_Rpvt_BO_STANDING, 5},
    {"_Rpvt_CO_STANDING", (DL_FUNC) &_Rpvt_CO_STANDING, 9},
    {"_Rpvt_DENSITY_STANDING", (DL_FUNC) &_Rpvt_DENSITY_STANDING, 5},
    {"_Rpvt_PB_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_PB_VASQUEZ_BEGGS, 4},
    {"_Rpvt_RSi_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_RSi_VASQUEZ_BEGGS, 4},
    {"_Rpvt_RS_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_RS_VASQUEZ_BEGGS, 5},
    {"_Rpvt_BOB_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_BOB_VASQUEZ_BEGGS, 4},
    {"_Rpvt_CO_UNDERSAT_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_CO_UNDERSAT_VASQUEZ_BEGGS, 5},
    {"_Rpvt_BO_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_BO_VASQUEZ_BEGGS, 5},
    {"_Rpvt_CO_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_CO_VASQUEZ_BEGGS, 9},
    {"_Rpvt_DENSITY_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_DENSITY_VASQUEZ_BEGGS, 5},
    {"_Rpvt_PB_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_PB_FARSHAD_PETROSKY, 4},
    {"_Rpvt_RSi_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_RSi_FARSHAD_PETROSKY, 4},
    {"_Rpvt_RS_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_RS_FARSHAD_PETROSKY, 5},
    {"_Rpvt_BOB_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_BOB_FARSHAD_PETROSKY, 4},
    {"_Rpvt_CO_UNDERSAT_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_CO_UNDERSAT_FARSHAD_PETROSKY, 5},
    {"_Rpvt_BO_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_BO_FARSHAD_PETROSKY, 5},
    {"_Rpvt_CO_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_CO_FARSHAD_PETROSKY, 9},
    {"_Rpvt_DENSITY_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_DENSITY_FARSHAD_PETROSKY, 5},
    {"_Rpvt_PB_AL_MARHOUN", (DL_FUNC) &_Rpvt_PB_AL_MARHOUN, 4},
    {"_Rpvt_RSi_AL_MARHOUN", (DL_FUNC) &_Rpvt_RSi_AL_MARHOUN, 4},
    {"_Rpvt_RS_AL_MARHOUN", (DL_FUNC) &_Rpvt_RS_AL_MARHOUN, 5},
    {"_Rpvt_BOB_AL_MARHOUN", (DL_FUNC) &_Rpvt_BOB_AL_MARHOUN, 4},
    {"_Rpvt_CO_UNDERSAT_AL_MARHOUN", (DL_FUNC) &_Rpvt_CO_UNDERSAT_AL_MARHOUN, 5},
    {"_Rpvt_BO_AL_MARHOUN", (DL_FUNC) &_Rpvt_BO_AL_MARHOUN, 5},
    {"_Rpvt_CO_AL_MARHOUN", (DL_FUNC) &_Rpvt_CO_AL_MARHOUN, 9},
    {"_Rpvt_DENSITY_AL_MARHOUN", (DL_FUNC) &_Rpvt_DENSITY_AL_MARHOUN, 5},
    {"_Rpvt_PB_GLASO", (DL_FUNC) &_Rpvt_PB_GLASO, 4},
    {"_Rpvt_RSi_GLASO", (DL_FUNC) &_Rpvt_RSi_GLASO, 4},
    {"_Rpvt_RS_GLASO", (DL_FUNC) &_Rpvt_RS_GLASO, 5},
    {"_Rpvt_BOB_GLASO", (DL_FUNC) &_Rpvt_BOB_GLASO, 4},
    {"_Rpvt_CO_UNDERSAT_GLASO", (DL_FUNC) &_Rpvt_CO_UNDERSAT_GLASO, 5},
    {"_Rpvt_BO_GLASO", (DL_FUNC) &_Rpvt_BO_GLASO, 5},
    {"_Rpvt_CO_GLASO", (DL_FUNC) &_Rpvt_CO_GLASO, 9},
    {"_Rpvt_DENSITY_GLASO", (DL_FUNC) &_Rpvt_DENSITY_GLASO, 5},
    {"_Rpvt_MUO_BEGGS_ROBINSON", (DL_FUNC) &_Rpvt_MUO_BEGGS_ROBINSON, 6},
    {"_Rpvt_MUO_AL_MARHOUN", (DL_FUNC) &_Rpvt_MUO_AL_MARHOUN, 6},
    {"_Rpvt_PVT_OIL_PROPERTIES_STANDING", (DL_FUNC) &_Rpvt_PVT_OIL_PROPERTIES_STANDING, 7},
    {"_Rpvt_PVT_OIL_PROPERTIES_VASQUEZ_BEGGS", (DL_FUNC) &_Rpvt_PVT_OIL_PROPERTIES_VASQUEZ_BEGGS, 7},
    {"_Rpvt_PVT_OIL_PROPERTIES_FARSHAD_PETROSKY", (DL_FUNC) &_Rpvt_PVT_OIL_PROPERTIES_FARSHAD_PETROSKY, 7},
    {"_Rpvt_PVT_OIL_PROPERTIES_AL_MARHOUN", (DL_FUNC) &_Rpvt_PVT_OIL_PROPERTIES_AL_MARHOUN, 7},
    {"_Rpvt_PVT_OIL_PROPERTIES_GLASO", (DL_FUNC) &_Rpvt_PVT_OIL_PROPERTIES_GLASO, 7},
    {"_Rpvt_VISC_OIL_PROPERTIES_BEGGS_ROBINSON", (DL_FUNC) &_Rpvt_VISC_OIL_PROPERTIES_BEGGS_ROBINSON, 6},
    {"_Rpvt_VISC_OIL_PROPERTIES_AL_MARHOUN", (DL_FUNC) &_Rpvt_VISC_OIL_PROPERTIES_AL_MARHOUN, 6},
    {"_Rpvt_WATER_SPIVEY", (DL_FUNC) &_Rpvt_WATER_SPIVEY, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rpvt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
