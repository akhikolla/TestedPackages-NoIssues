// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// BO_AL_MARHOUN_DeepState_TestHarness_generation.cpp and BO_AL_MARHOUN_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::vec BO_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi);

TEST(Rpvt_deepstate_test,BO_AL_MARHOUN_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector t(1);
  t[0]  = RcppDeepState_double();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/BO_AL_MARHOUN/AFL_BO_AL_MARHOUN/afl_inputs/" + std::to_string(t) + "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/BO_AL_MARHOUN/AFL_BO_AL_MARHOUN/afl_inputs/" + std::to_string(t) + "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector api(1);
  api[0]  = RcppDeepState_double();
  std::string api_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/BO_AL_MARHOUN/AFL_BO_AL_MARHOUN/afl_inputs/" + std::to_string(t) + "_api.qs";
  qs::c_qsave(api,api_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "api values: "<< api << std::endl;
  NumericVector spgr(1);
  spgr[0]  = RcppDeepState_double();
  std::string spgr_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/BO_AL_MARHOUN/AFL_BO_AL_MARHOUN/afl_inputs/" + std::to_string(t) + "_spgr.qs";
  qs::c_qsave(spgr,spgr_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "spgr values: "<< spgr << std::endl;
  NumericVector rsi(1);
  rsi[0]  = RcppDeepState_double();
  std::string rsi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/BO_AL_MARHOUN/AFL_BO_AL_MARHOUN/afl_inputs/" + std::to_string(t) + "_rsi.qs";
  qs::c_qsave(rsi,rsi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rsi values: "<< rsi << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    BO_AL_MARHOUN(t[0],p[0],api[0],spgr[0],rsi[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
