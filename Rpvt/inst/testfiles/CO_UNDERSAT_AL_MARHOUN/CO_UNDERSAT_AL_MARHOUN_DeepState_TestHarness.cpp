// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// CO_UNDERSAT_AL_MARHOUN_DeepState_TestHarness_generation.cpp and CO_UNDERSAT_AL_MARHOUN_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double CO_UNDERSAT_AL_MARHOUN(double t, const double p, const double api, const double spgr, const double rsi);

TEST(Rpvt_deepstate_test,CO_UNDERSAT_AL_MARHOUN_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector t(1);
  t[0]  = RcppDeepState_double();
  qs::c_qsave(t,"/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/CO_UNDERSAT_AL_MARHOUN/inputs/t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/CO_UNDERSAT_AL_MARHOUN/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector api(1);
  api[0]  = RcppDeepState_double();
  qs::c_qsave(api,"/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/CO_UNDERSAT_AL_MARHOUN/inputs/api.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "api values: "<< api << std::endl;
  NumericVector spgr(1);
  spgr[0]  = RcppDeepState_double();
  qs::c_qsave(spgr,"/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/CO_UNDERSAT_AL_MARHOUN/inputs/spgr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "spgr values: "<< spgr << std::endl;
  NumericVector rsi(1);
  rsi[0]  = RcppDeepState_double();
  qs::c_qsave(rsi,"/home/akhila/fuzzer_packages/fuzzedpackages/Rpvt/inst/testfiles/CO_UNDERSAT_AL_MARHOUN/inputs/rsi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rsi values: "<< rsi << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    CO_UNDERSAT_AL_MARHOUN(t[0],p[0],api[0],spgr[0],rsi[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
