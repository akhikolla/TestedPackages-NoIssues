// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rTruncNorm_DeepState_TestHarness_generation.cpp and rTruncNorm_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double rTruncNorm(double mean, double sd, double w);

TEST(errum_deepstate_test,rTruncNorm_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector mean(1);
  mean[0]  = RcppDeepState_double();
  qs::c_qsave(mean,"/home/akhila/fuzzer_packages/fuzzedpackages/errum/inst/testfiles/rTruncNorm/inputs/mean.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mean values: "<< mean << std::endl;
  NumericVector sd(1);
  sd[0]  = RcppDeepState_double();
  qs::c_qsave(sd,"/home/akhila/fuzzer_packages/fuzzedpackages/errum/inst/testfiles/rTruncNorm/inputs/sd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sd values: "<< sd << std::endl;
  NumericVector w(1);
  w[0]  = RcppDeepState_double();
  qs::c_qsave(w,"/home/akhila/fuzzer_packages/fuzzedpackages/errum/inst/testfiles/rTruncNorm/inputs/w.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rTruncNorm(mean[0],sd[0],w[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
