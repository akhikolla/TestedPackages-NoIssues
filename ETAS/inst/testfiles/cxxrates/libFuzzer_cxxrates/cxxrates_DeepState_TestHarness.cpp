// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cxxrates_DeepState_TestHarness_generation.cpp and cxxrates_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List cxxrates(NumericVector param, NumericMatrix revents, NumericVector bwd, NumericVector tperiod, NumericVector gx, NumericVector gy);

TEST(ETAS_deepstate_test,cxxrates_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector param  = RcppDeepState_NumericVector();
  std::string param_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxrates/libFuzzer_cxxrates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_param.qs";
  qs::c_qsave(param,param_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "param values: "<< param << std::endl;
  NumericMatrix revents  = RcppDeepState_NumericMatrix();
  std::string revents_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxrates/libFuzzer_cxxrates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_revents.qs";
  qs::c_qsave(revents,revents_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "revents values: "<< revents << std::endl;
  NumericVector bwd  = RcppDeepState_NumericVector();
  std::string bwd_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxrates/libFuzzer_cxxrates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_bwd.qs";
  qs::c_qsave(bwd,bwd_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bwd values: "<< bwd << std::endl;
  NumericVector tperiod  = RcppDeepState_NumericVector();
  std::string tperiod_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxrates/libFuzzer_cxxrates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tperiod.qs";
  qs::c_qsave(tperiod,tperiod_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tperiod values: "<< tperiod << std::endl;
  NumericVector gx  = RcppDeepState_NumericVector();
  std::string gx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxrates/libFuzzer_cxxrates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gx.qs";
  qs::c_qsave(gx,gx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gx values: "<< gx << std::endl;
  NumericVector gy  = RcppDeepState_NumericVector();
  std::string gy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxrates/libFuzzer_cxxrates/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gy.qs";
  qs::c_qsave(gy,gy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gy values: "<< gy << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cxxrates(param,revents,bwd,tperiod,gx,gy);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
