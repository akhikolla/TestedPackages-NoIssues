// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cxxstpoisstestMP_DeepState_TestHarness_generation.cpp and cxxstpoisstestMP_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double cxxstpoisstestMP(NumericVector xrank, NumericVector yrank, NumericMatrix M, int nthreads);

TEST(ETAS_deepstate_test,cxxstpoisstestMP_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector xrank  = RcppDeepState_NumericVector();
  qs::c_qsave(xrank,"/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxstpoisstestMP/inputs/xrank.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xrank values: "<< xrank << std::endl;
  NumericVector yrank  = RcppDeepState_NumericVector();
  qs::c_qsave(yrank,"/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxstpoisstestMP/inputs/yrank.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yrank values: "<< yrank << std::endl;
  NumericMatrix M  = RcppDeepState_NumericMatrix();
  qs::c_qsave(M,"/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxstpoisstestMP/inputs/M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  IntegerVector nthreads(1);
  nthreads[0]  = RcppDeepState_int();
  qs::c_qsave(nthreads,"/home/akhila/fuzzer_packages/fuzzedpackages/ETAS/inst/testfiles/cxxstpoisstestMP/inputs/nthreads.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nthreads values: "<< nthreads << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cxxstpoisstestMP(xrank,yrank,M,nthreads[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
