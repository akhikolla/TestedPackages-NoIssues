// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// DisC2_Crossprod_DeepState_TestHarness_generation.cpp and DisC2_Crossprod_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double DisC2_Crossprod(NumericVector X, int d);

TEST(sensitivity_deepstate_test,DisC2_Crossprod_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector X  = RcppDeepState_NumericVector();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sensitivity/inst/testfiles/DisC2_Crossprod/AFL_DisC2_Crossprod/afl_inputs/" + std::to_string(t) + "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector d(1);
  d[0]  = RcppDeepState_int();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sensitivity/inst/testfiles/DisC2_Crossprod/AFL_DisC2_Crossprod/afl_inputs/" + std::to_string(t) + "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    DisC2_Crossprod(X,d[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
