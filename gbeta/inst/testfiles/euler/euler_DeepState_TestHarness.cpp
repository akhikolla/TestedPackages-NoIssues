// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// euler_DeepState_TestHarness_generation.cpp and euler_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector euler(const double c, const double d, const double kappa, const double tau, const Rcpp::NumericVector q, const int subdiv, const double eps_abs, const double eps_rel);

TEST(gbeta_deepstate_test,euler_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector c(1);
  c[0]  = RcppDeepState_double();
  qs::c_qsave(c,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/c.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "c values: "<< c << std::endl;
  NumericVector d(1);
  d[0]  = RcppDeepState_double();
  qs::c_qsave(d,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/d.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  NumericVector kappa(1);
  kappa[0]  = RcppDeepState_double();
  qs::c_qsave(kappa,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/kappa.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kappa values: "<< kappa << std::endl;
  NumericVector tau(1);
  tau[0]  = RcppDeepState_double();
  qs::c_qsave(tau,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/tau.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau values: "<< tau << std::endl;
  NumericVector q  = RcppDeepState_NumericVector();
  qs::c_qsave(q,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  IntegerVector subdiv(1);
  subdiv[0]  = RcppDeepState_int();
  qs::c_qsave(subdiv,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/subdiv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "subdiv values: "<< subdiv << std::endl;
  NumericVector eps_abs(1);
  eps_abs[0]  = RcppDeepState_double();
  qs::c_qsave(eps_abs,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/eps_abs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps_abs values: "<< eps_abs << std::endl;
  NumericVector eps_rel(1);
  eps_rel[0]  = RcppDeepState_double();
  qs::c_qsave(eps_rel,"/home/akhila/fuzzer_packages/fuzzedpackages/gbeta/inst/testfiles/euler/inputs/eps_rel.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps_rel values: "<< eps_rel << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    euler(c[0],d[0],kappa[0],tau[0],q,subdiv[0],eps_abs[0],eps_rel[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
