// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CorrMat_Sym
arma::mat CorrMat_Sym(arma::mat X, std::string CorrType, arma::rowvec Omega);
RcppExport SEXP _GPM_CorrMat_Sym(SEXP XSEXP, SEXP CorrTypeSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::string >::type CorrType(CorrTypeSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(CorrMat_Sym(X, CorrType, Omega));
    return rcpp_result_gen;
END_RCPP
}
// CorrMat_Vec
arma::mat CorrMat_Vec(arma::mat X1, arma::mat X2, std::string CorrType, arma::rowvec Omega);
RcppExport SEXP _GPM_CorrMat_Vec(SEXP X1SEXP, SEXP X2SEXP, SEXP CorrTypeSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< std::string >::type CorrType(CorrTypeSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(CorrMat_Vec(X1, X2, CorrType, Omega));
    return rcpp_result_gen;
END_RCPP
}
// Eigen
double Eigen(arma::mat A);
RcppExport SEXP _GPM_Eigen(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(Eigen(A));
    return rcpp_result_gen;
END_RCPP
}
// CppSolve
arma::mat CppSolve(arma::mat A, arma::mat B);
RcppExport SEXP _GPM_CppSolve(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(CppSolve(A, B));
    return rcpp_result_gen;
END_RCPP
}
// LowerChol
arma::mat LowerChol(arma::mat A);
RcppExport SEXP _GPM_LowerChol(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(LowerChol(A));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GPM_CorrMat_Sym", (DL_FUNC) &_GPM_CorrMat_Sym, 3},
    {"_GPM_CorrMat_Vec", (DL_FUNC) &_GPM_CorrMat_Vec, 4},
    {"_GPM_Eigen", (DL_FUNC) &_GPM_Eigen, 1},
    {"_GPM_CppSolve", (DL_FUNC) &_GPM_CppSolve, 2},
    {"_GPM_LowerChol", (DL_FUNC) &_GPM_LowerChol, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_GPM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
