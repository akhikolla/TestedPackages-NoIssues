// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mad_rcpp_DeepState_TestHarness_generation.cpp and mad_rcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double mad_rcpp(NumericVector r, double scale_factor);

TEST(robustreg_deepstate_test,mad_rcpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector r  = RcppDeepState_NumericVector();
  std::string r_t = "/home/akhila/fuzzer_packages/fuzzedpackages/robustreg/inst/testfiles/mad_rcpp/AFL_mad_rcpp/afl_inputs/" + std::to_string(t) + "_r.qs";
  qs::c_qsave(r,r_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  NumericVector scale_factor(1);
  scale_factor[0]  = RcppDeepState_double();
  std::string scale_factor_t = "/home/akhila/fuzzer_packages/fuzzedpackages/robustreg/inst/testfiles/mad_rcpp/AFL_mad_rcpp/afl_inputs/" + std::to_string(t) + "_scale_factor.qs";
  qs::c_qsave(scale_factor,scale_factor_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "scale_factor values: "<< scale_factor << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mad_rcpp(r,scale_factor[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
