// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// insertMinReqRem
NumericMatrix insertMinReqRem(IntegerVector anHs, IntegerVector anHt);
RcppExport SEXP _satellite_insertMinReqRem(SEXP anHsSEXP, SEXP anHtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type anHs(anHsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type anHt(anHtSEXP);
    rcpp_result_gen = Rcpp::wrap(insertMinReqRem(anHs, anHt));
    return rcpp_result_gen;
END_RCPP
}
// seqC
Rcpp::NumericVector seqC(double from_, double to_, double by_);
RcppExport SEXP _satellite_seqC(SEXP from_SEXP, SEXP to_SEXP, SEXP by_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type from_(from_SEXP);
    Rcpp::traits::input_parameter< double >::type to_(to_SEXP);
    Rcpp::traits::input_parameter< double >::type by_(by_SEXP);
    rcpp_result_gen = Rcpp::wrap(seqC(from_, to_, by_));
    return rcpp_result_gen;
END_RCPP
}
// ScatteringModel
NumericVector ScatteringModel(NumericMatrix mnBandWls, double dScatCoef);
RcppExport SEXP _satellite_ScatteringModel(SEXP mnBandWlsSEXP, SEXP dScatCoefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mnBandWls(mnBandWlsSEXP);
    Rcpp::traits::input_parameter< double >::type dScatCoef(dScatCoefSEXP);
    rcpp_result_gen = Rcpp::wrap(ScatteringModel(mnBandWls, dScatCoef));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_satellite_insertMinReqRem", (DL_FUNC) &_satellite_insertMinReqRem, 2},
    {"_satellite_seqC", (DL_FUNC) &_satellite_seqC, 3},
    {"_satellite_ScatteringModel", (DL_FUNC) &_satellite_ScatteringModel, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_satellite(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
