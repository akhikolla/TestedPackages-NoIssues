// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ScatteringModel_DeepState_TestHarness_generation.cpp and ScatteringModel_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector ScatteringModel(NumericMatrix mnBandWls, double dScatCoef);

TEST(satellite_deepstate_test,ScatteringModel_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix mnBandWls  = RcppDeepState_NumericMatrix();
  std::string mnBandWls_t = "/home/akhila/fuzzer_packages/fuzzedpackages/satellite/inst/testfiles/ScatteringModel/libFuzzer_ScatteringModel/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mnBandWls.qs";
  qs::c_qsave(mnBandWls,mnBandWls_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mnBandWls values: "<< mnBandWls << std::endl;
  NumericVector dScatCoef(1);
  dScatCoef[0]  = RcppDeepState_double();
  std::string dScatCoef_t = "/home/akhila/fuzzer_packages/fuzzedpackages/satellite/inst/testfiles/ScatteringModel/libFuzzer_ScatteringModel/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dScatCoef.qs";
  qs::c_qsave(dScatCoef,dScatCoef_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dScatCoef values: "<< dScatCoef << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ScatteringModel(mnBandWls,dScatCoef[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
