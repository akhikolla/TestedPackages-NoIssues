// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// seqC_DeepState_TestHarness_generation.cpp and seqC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector seqC(double from_, double to_, double by_);

TEST(satellite_deepstate_test,seqC_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector from_(1);
  from_[0]  = RcppDeepState_double();
  std::string from__t = "/home/akhila/fuzzer_packages/fuzzedpackages/satellite/inst/testfiles/seqC/AFL_seqC/afl_inputs/" + std::to_string(t) + "_from_.qs";
  qs::c_qsave(from_,from__t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "from_ values: "<< from_ << std::endl;
  NumericVector to_(1);
  to_[0]  = RcppDeepState_double();
  std::string to__t = "/home/akhila/fuzzer_packages/fuzzedpackages/satellite/inst/testfiles/seqC/AFL_seqC/afl_inputs/" + std::to_string(t) + "_to_.qs";
  qs::c_qsave(to_,to__t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "to_ values: "<< to_ << std::endl;
  NumericVector by_(1);
  by_[0]  = RcppDeepState_double();
  std::string by__t = "/home/akhila/fuzzer_packages/fuzzedpackages/satellite/inst/testfiles/seqC/AFL_seqC/afl_inputs/" + std::to_string(t) + "_by_.qs";
  qs::c_qsave(by_,by__t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "by_ values: "<< by_ << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    seqC(from_[0],to_[0],by_[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
