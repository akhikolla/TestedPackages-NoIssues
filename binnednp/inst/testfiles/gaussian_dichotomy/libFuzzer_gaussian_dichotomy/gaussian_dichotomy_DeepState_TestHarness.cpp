// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gaussian_dichotomy_DeepState_TestHarness_generation.cpp and gaussian_dichotomy_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double gaussian_dichotomy(int hn, NumericVector t);

TEST(binnednp_deepstate_test,gaussian_dichotomy_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector hn(1);
  hn[0]  = RcppDeepState_int();
  std::string hn_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/gaussian_dichotomy/libFuzzer_gaussian_dichotomy/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_hn.qs";
  qs::c_qsave(hn,hn_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "hn values: "<< hn << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/gaussian_dichotomy/libFuzzer_gaussian_dichotomy/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gaussian_dichotomy(hn[0],t);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
