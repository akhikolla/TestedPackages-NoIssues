// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gaussian_mise_loop_DeepState_TestHarness_generation.cpp and gaussian_mise_loop_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double gaussian_mise_loop(int hn, NumericVector seq, double rho);

TEST(binnednp_deepstate_test,gaussian_mise_loop_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector hn(1);
  hn[0]  = RcppDeepState_int();
  qs::c_qsave(hn,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/gaussian_mise_loop/inputs/hn.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "hn values: "<< hn << std::endl;
  NumericVector seq  = RcppDeepState_NumericVector();
  qs::c_qsave(seq,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/gaussian_mise_loop/inputs/seq.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seq values: "<< seq << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  qs::c_qsave(rho,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/gaussian_mise_loop/inputs/rho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gaussian_mise_loop(hn[0],seq,rho[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
