// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// zeta_hist_p_dist_DeepState_TestHarness_generation.cpp and zeta_hist_p_dist_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double zeta_hist_p_dist(NumericVector emp, NumericVector combt, NumericVector comby, NumericVector combw, double Af1_mixt, double l0, double l1, double h0, double h1, double lrho, double rho, int nitlambda, int nith, double lim1, double lim2);

TEST(binnednp_deepstate_test,zeta_hist_p_dist_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector emp  = RcppDeepState_NumericVector();
  qs::c_qsave(emp,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/emp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "emp values: "<< emp << std::endl;
  NumericVector combt  = RcppDeepState_NumericVector();
  qs::c_qsave(combt,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/combt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "combt values: "<< combt << std::endl;
  NumericVector comby  = RcppDeepState_NumericVector();
  qs::c_qsave(comby,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/comby.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "comby values: "<< comby << std::endl;
  NumericVector combw  = RcppDeepState_NumericVector();
  qs::c_qsave(combw,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/combw.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "combw values: "<< combw << std::endl;
  NumericVector Af1_mixt(1);
  Af1_mixt[0]  = RcppDeepState_double();
  qs::c_qsave(Af1_mixt,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/Af1_mixt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Af1_mixt values: "<< Af1_mixt << std::endl;
  NumericVector l0(1);
  l0[0]  = RcppDeepState_double();
  qs::c_qsave(l0,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/l0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l0 values: "<< l0 << std::endl;
  NumericVector l1(1);
  l1[0]  = RcppDeepState_double();
  qs::c_qsave(l1,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/l1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l1 values: "<< l1 << std::endl;
  NumericVector h0(1);
  h0[0]  = RcppDeepState_double();
  qs::c_qsave(h0,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/h0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h0 values: "<< h0 << std::endl;
  NumericVector h1(1);
  h1[0]  = RcppDeepState_double();
  qs::c_qsave(h1,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/h1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h1 values: "<< h1 << std::endl;
  NumericVector lrho(1);
  lrho[0]  = RcppDeepState_double();
  qs::c_qsave(lrho,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/lrho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lrho values: "<< lrho << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  qs::c_qsave(rho,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/rho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  IntegerVector nitlambda(1);
  nitlambda[0]  = RcppDeepState_int();
  qs::c_qsave(nitlambda,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/nitlambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nitlambda values: "<< nitlambda << std::endl;
  IntegerVector nith(1);
  nith[0]  = RcppDeepState_int();
  qs::c_qsave(nith,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/nith.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nith values: "<< nith << std::endl;
  NumericVector lim1(1);
  lim1[0]  = RcppDeepState_double();
  qs::c_qsave(lim1,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/lim1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lim1 values: "<< lim1 << std::endl;
  NumericVector lim2(1);
  lim2[0]  = RcppDeepState_double();
  qs::c_qsave(lim2,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/inputs/lim2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lim2 values: "<< lim2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    zeta_hist_p_dist(emp,combt,comby,combw,Af1_mixt[0],l0[0],l1[0],h0[0],h1[0],lrho[0],rho[0],nitlambda[0],nith[0],lim1[0],lim2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
