// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// zeta_hist_p_dist_DeepState_TestHarness_generation.cpp and zeta_hist_p_dist_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double zeta_hist_p_dist(NumericVector emp, NumericVector combt, NumericVector comby, NumericVector combw, double Af1_mixt, double l0, double l1, double h0, double h1, double lrho, double rho, int nitlambda, int nith, double lim1, double lim2);

TEST(binnednp_deepstate_test,zeta_hist_p_dist_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector emp  = RcppDeepState_NumericVector();
  std::string emp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_emp.qs";
  qs::c_qsave(emp,emp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "emp values: "<< emp << std::endl;
  NumericVector combt  = RcppDeepState_NumericVector();
  std::string combt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_combt.qs";
  qs::c_qsave(combt,combt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "combt values: "<< combt << std::endl;
  NumericVector comby  = RcppDeepState_NumericVector();
  std::string comby_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_comby.qs";
  qs::c_qsave(comby,comby_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "comby values: "<< comby << std::endl;
  NumericVector combw  = RcppDeepState_NumericVector();
  std::string combw_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_combw.qs";
  qs::c_qsave(combw,combw_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "combw values: "<< combw << std::endl;
  NumericVector Af1_mixt(1);
  Af1_mixt[0]  = RcppDeepState_double();
  std::string Af1_mixt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Af1_mixt.qs";
  qs::c_qsave(Af1_mixt,Af1_mixt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Af1_mixt values: "<< Af1_mixt << std::endl;
  NumericVector l0(1);
  l0[0]  = RcppDeepState_double();
  std::string l0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_l0.qs";
  qs::c_qsave(l0,l0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l0 values: "<< l0 << std::endl;
  NumericVector l1(1);
  l1[0]  = RcppDeepState_double();
  std::string l1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_l1.qs";
  qs::c_qsave(l1,l1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l1 values: "<< l1 << std::endl;
  NumericVector h0(1);
  h0[0]  = RcppDeepState_double();
  std::string h0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_h0.qs";
  qs::c_qsave(h0,h0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h0 values: "<< h0 << std::endl;
  NumericVector h1(1);
  h1[0]  = RcppDeepState_double();
  std::string h1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_h1.qs";
  qs::c_qsave(h1,h1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h1 values: "<< h1 << std::endl;
  NumericVector lrho(1);
  lrho[0]  = RcppDeepState_double();
  std::string lrho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lrho.qs";
  qs::c_qsave(lrho,lrho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lrho values: "<< lrho << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  IntegerVector nitlambda(1);
  nitlambda[0]  = RcppDeepState_int();
  std::string nitlambda_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nitlambda.qs";
  qs::c_qsave(nitlambda,nitlambda_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nitlambda values: "<< nitlambda << std::endl;
  IntegerVector nith(1);
  nith[0]  = RcppDeepState_int();
  std::string nith_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nith.qs";
  qs::c_qsave(nith,nith_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nith values: "<< nith << std::endl;
  NumericVector lim1(1);
  lim1[0]  = RcppDeepState_double();
  std::string lim1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lim1.qs";
  qs::c_qsave(lim1,lim1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lim1 values: "<< lim1 << std::endl;
  NumericVector lim2(1);
  lim2[0]  = RcppDeepState_double();
  std::string lim2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/zeta_hist_p_dist/libFuzzer_zeta_hist_p_dist/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lim2.qs";
  qs::c_qsave(lim2,lim2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lim2 values: "<< lim2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    zeta_hist_p_dist(emp,combt,comby,combw,Af1_mixt[0],l0[0],l1[0],h0[0],h1[0],lrho[0],rho[0],nitlambda[0],nith[0],lim1[0],lim2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
