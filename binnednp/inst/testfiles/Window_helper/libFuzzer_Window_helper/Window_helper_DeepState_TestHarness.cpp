// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Window_helper_DeepState_TestHarness_generation.cpp and Window_helper_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double Window_helper(int b, NumericVector xb, NumericVector y, NumericVector t, NumericVector Lfactors, NumericVector J1_b, NumericVector J2_b);

TEST(binnednp_deepstate_test,Window_helper_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector b(1);
  b[0]  = RcppDeepState_int();
  std::string b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_b.qs";
  qs::c_qsave(b,b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector xb  = RcppDeepState_NumericVector();
  std::string xb_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xb.qs";
  qs::c_qsave(xb,xb_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xb values: "<< xb << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector Lfactors  = RcppDeepState_NumericVector();
  std::string Lfactors_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Lfactors.qs";
  qs::c_qsave(Lfactors,Lfactors_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Lfactors values: "<< Lfactors << std::endl;
  NumericVector J1_b  = RcppDeepState_NumericVector();
  std::string J1_b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_J1_b.qs";
  qs::c_qsave(J1_b,J1_b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "J1_b values: "<< J1_b << std::endl;
  NumericVector J2_b  = RcppDeepState_NumericVector();
  std::string J2_b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/Window_helper/libFuzzer_Window_helper/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_J2_b.qs";
  qs::c_qsave(J2_b,J2_b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "J2_b values: "<< J2_b << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Window_helper(b[0],xb,y,t,Lfactors,J1_b,J2_b);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
