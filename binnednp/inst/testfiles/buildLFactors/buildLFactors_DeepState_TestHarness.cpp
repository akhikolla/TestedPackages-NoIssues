// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// buildLFactors_DeepState_TestHarness_generation.cpp and buildLFactors_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector buildLFactors(NumericVector t, double h1, double h2);

TEST(binnednp_deepstate_test,buildLFactors_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  qs::c_qsave(t,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/buildLFactors/inputs/t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector h1(1);
  h1[0]  = RcppDeepState_double();
  qs::c_qsave(h1,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/buildLFactors/inputs/h1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h1 values: "<< h1 << std::endl;
  NumericVector h2(1);
  h2[0]  = RcppDeepState_double();
  qs::c_qsave(h2,"/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/buildLFactors/inputs/h2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h2 values: "<< h2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    buildLFactors(t,h1[0],h2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
