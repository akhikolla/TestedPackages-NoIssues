// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// boot_bw_dist_DeepState_TestHarness_generation.cpp and boot_bw_dist_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double boot_bw_dist(int nit, double h0, double h1, double rho, int n, NumericVector t, NumericVector w, NumericVector p, double g, int lgrid, double lim1, double lim2);

TEST(binnednp_deepstate_test,boot_bw_dist_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector nit(1);
  nit[0]  = RcppDeepState_int();
  std::string nit_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_nit.qs";
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_n.qs";
  qs::c_qsave(nit,nit_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nit values: "<< nit << std::endl;
  NumericVector h0(1);
  h0[0]  = RcppDeepState_double();
  std::string h0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_h0.qs";
  qs::c_qsave(h0,h0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h0 values: "<< h0 << std::endl;
  NumericVector h1(1);
  h1[0]  = RcppDeepState_double();
  std::string h1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_h1.qs";
  qs::c_qsave(h1,h1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h1 values: "<< h1 << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector w  = RcppDeepState_NumericVector();
  std::string w_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_w.qs";
  qs::c_qsave(w,w_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  NumericVector p  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector g(1);
  g[0]  = RcppDeepState_double();
  std::string g_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_g.qs";
  qs::c_qsave(g,g_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g values: "<< g << std::endl;
  IntegerVector lgrid(1);
  lgrid[0]  = RcppDeepState_int();
  std::string lgrid_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_lgrid.qs";
  qs::c_qsave(lgrid,lgrid_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lgrid values: "<< lgrid << std::endl;
  NumericVector lim1(1);
  lim1[0]  = RcppDeepState_double();
  std::string lim1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_lim1.qs";
  qs::c_qsave(lim1,lim1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lim1 values: "<< lim1 << std::endl;
  NumericVector lim2(1);
  lim2[0]  = RcppDeepState_double();
  std::string lim2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/binnednp/inst/testfiles/boot_bw_dist/AFL_boot_bw_dist/afl_inputs/" + std::to_string(t) + "_lim2.qs";
  qs::c_qsave(lim2,lim2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lim2 values: "<< lim2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    boot_bw_dist(nit[0],h0[0],h1[0],rho[0],n[0],t,w,p,g[0],lgrid[0],lim1[0],lim2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
