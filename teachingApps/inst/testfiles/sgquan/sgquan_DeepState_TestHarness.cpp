// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sgquan_DeepState_TestHarness_generation.cpp and sgquan_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector sgquan(Rcpp::NumericVector pvec, Rcpp::NumericMatrix gamme, int maxlen, Rcpp::NumericVector answer);

TEST(teachingApps_deepstate_test,sgquan_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector pvec  = RcppDeepState_NumericVector();
  qs::c_qsave(pvec,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/sgquan/inputs/pvec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pvec values: "<< pvec << std::endl;
  NumericMatrix gamme  = RcppDeepState_NumericMatrix();
  qs::c_qsave(gamme,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/sgquan/inputs/gamme.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamme values: "<< gamme << std::endl;
  IntegerVector maxlen(1);
  maxlen[0]  = RcppDeepState_int();
  qs::c_qsave(maxlen,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/sgquan/inputs/maxlen.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxlen values: "<< maxlen << std::endl;
  NumericVector answer  = RcppDeepState_NumericVector();
  qs::c_qsave(answer,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/sgquan/inputs/answer.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "answer values: "<< answer << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sgquan(pvec,gamme,maxlen[0],answer);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
