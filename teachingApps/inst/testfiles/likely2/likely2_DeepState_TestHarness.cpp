// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// likely2_DeepState_TestHarness_generation.cpp and likely2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

LogicalVector likely2(NumericVector times, NumericVector cens, NumericVector params, const double maxll);

TEST(teachingApps_deepstate_test,likely2_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector times  = RcppDeepState_NumericVector();
  qs::c_qsave(times,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/likely2/inputs/times.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "times values: "<< times << std::endl;
  NumericVector cens  = RcppDeepState_NumericVector();
  qs::c_qsave(cens,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/likely2/inputs/cens.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cens values: "<< cens << std::endl;
  NumericVector params  = RcppDeepState_NumericVector();
  qs::c_qsave(params,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/likely2/inputs/params.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "params values: "<< params << std::endl;
  NumericVector maxll(1);
  maxll[0]  = RcppDeepState_double();
  qs::c_qsave(maxll,"/home/akhila/fuzzer_packages/fuzzedpackages/teachingApps/inst/testfiles/likely2/inputs/maxll.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxll values: "<< maxll << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    likely2(times,cens,params,maxll[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
