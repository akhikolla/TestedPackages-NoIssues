// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// dgpb_dftcf_DeepState_TestHarness_generation.cpp and dgpb_dftcf_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector dgpb_dftcf(const IntegerVector obs, const NumericVector probs, const IntegerVector val_p, const IntegerVector val_q);

TEST(PoissonBinomial_deepstate_test,dgpb_dftcf_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector obs  = RcppDeepState_IntegerVector();
  qs::c_qsave(obs,"/home/akhila/fuzzer_packages/fuzzedpackages/PoissonBinomial/inst/testfiles/dgpb_dftcf/inputs/obs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "obs values: "<< obs << std::endl;
  NumericVector probs  = RcppDeepState_NumericVector();
  qs::c_qsave(probs,"/home/akhila/fuzzer_packages/fuzzedpackages/PoissonBinomial/inst/testfiles/dgpb_dftcf/inputs/probs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  IntegerVector val_p  = RcppDeepState_IntegerVector();
  qs::c_qsave(val_p,"/home/akhila/fuzzer_packages/fuzzedpackages/PoissonBinomial/inst/testfiles/dgpb_dftcf/inputs/val_p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "val_p values: "<< val_p << std::endl;
  IntegerVector val_q  = RcppDeepState_IntegerVector();
  qs::c_qsave(val_q,"/home/akhila/fuzzer_packages/fuzzedpackages/PoissonBinomial/inst/testfiles/dgpb_dftcf/inputs/val_q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "val_q values: "<< val_q << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    dgpb_dftcf(obs,probs,val_p,val_q);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
