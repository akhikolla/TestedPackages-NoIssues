// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// sample_rcpp
NumericVector sample_rcpp(int N, int nsamp);
RcppExport SEXP _perccal_sample_rcpp(SEXP NSEXP, SEXP nsampSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_rcpp(N, nsamp));
    return rcpp_result_gen;
END_RCPP
}
// Cquantile
NumericVector Cquantile(NumericVector xx, NumericVector p);
RcppExport SEXP _perccal_Cquantile(SEXP xxSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xx(xxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Cquantile(xx, p));
    return rcpp_result_gen;
END_RCPP
}
// Cdboot_multi
List Cdboot_multi(NumericMatrix xxyy, NumericVector lgridlo, NumericVector lgridhi, int B, int B2, int G);
RcppExport SEXP _perccal_Cdboot_multi(SEXP xxyySEXP, SEXP lgridloSEXP, SEXP lgridhiSEXP, SEXP BSEXP, SEXP B2SEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xxyy(xxyySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lgridlo(lgridloSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lgridhi(lgridhiSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type B2(B2SEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(Cdboot_multi(xxyy, lgridlo, lgridhi, B, B2, G));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP perccal_Cdboot_multi(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP perccal_Cquantile(SEXP, SEXP);
RcppExport SEXP perccal_sample_rcpp(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_perccal_sample_rcpp", (DL_FUNC) &_perccal_sample_rcpp, 2},
    {"_perccal_Cquantile", (DL_FUNC) &_perccal_Cquantile, 2},
    {"_perccal_Cdboot_multi", (DL_FUNC) &_perccal_Cdboot_multi, 6},
    {"perccal_Cdboot_multi", (DL_FUNC) &perccal_Cdboot_multi, 6},
    {"perccal_Cquantile",    (DL_FUNC) &perccal_Cquantile,    2},
    {"perccal_sample_rcpp",  (DL_FUNC) &perccal_sample_rcpp,  2},
    {NULL, NULL, 0}
};

RcppExport void R_init_perccal(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
