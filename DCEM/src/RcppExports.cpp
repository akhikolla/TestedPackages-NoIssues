// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// max_heapify
NumericMatrix max_heapify(NumericMatrix data, int index, int num_data);
RcppExport SEXP _DCEM_max_heapify(SEXP dataSEXP, SEXP indexSEXP, SEXP num_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type index(indexSEXP);
    Rcpp::traits::input_parameter< int >::type num_data(num_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(max_heapify(data, index, num_data));
    return rcpp_result_gen;
END_RCPP
}
// build_heap
NumericMatrix build_heap(NumericMatrix data);
RcppExport SEXP _DCEM_build_heap(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(build_heap(data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DCEM_max_heapify", (DL_FUNC) &_DCEM_max_heapify, 3},
    {"_DCEM_build_heap", (DL_FUNC) &_DCEM_build_heap, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_DCEM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
