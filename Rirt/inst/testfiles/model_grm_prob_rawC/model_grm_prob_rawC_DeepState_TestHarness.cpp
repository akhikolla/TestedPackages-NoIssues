// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// model_grm_prob_rawC_DeepState_TestHarness_generation.cpp and model_grm_prob_rawC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List model_grm_prob_rawC(NumericVector t, NumericVector a, NumericMatrix b, double D);

TEST(Rirt_deepstate_test,model_grm_prob_rawC_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  qs::c_qsave(t,"/home/akhila/fuzzer_packages/fuzzedpackages/Rirt/inst/testfiles/model_grm_prob_rawC/inputs/t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector a  = RcppDeepState_NumericVector();
  qs::c_qsave(a,"/home/akhila/fuzzer_packages/fuzzedpackages/Rirt/inst/testfiles/model_grm_prob_rawC/inputs/a.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericMatrix b  = RcppDeepState_NumericMatrix();
  qs::c_qsave(b,"/home/akhila/fuzzer_packages/fuzzedpackages/Rirt/inst/testfiles/model_grm_prob_rawC/inputs/b.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector D(1);
  D[0]  = RcppDeepState_double();
  qs::c_qsave(D,"/home/akhila/fuzzer_packages/fuzzedpackages/Rirt/inst/testfiles/model_grm_prob_rawC/inputs/D.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "D values: "<< D << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    model_grm_prob_rawC(t,a,b,D[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
