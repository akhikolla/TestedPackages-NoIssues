// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// A_optimal_cat
int A_optimal_cat(arma::mat X, arma::mat beta, arma::mat W, arma::colvec unlabeledIDs);
RcppExport SEXP _seqest_A_optimal_cat(SEXP XSEXP, SEXP betaSEXP, SEXP WSEXP, SEXP unlabeledIDsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type unlabeledIDs(unlabeledIDsSEXP);
    rcpp_result_gen = Rcpp::wrap(A_optimal_cat(X, beta, W, unlabeledIDs));
    return rcpp_result_gen;
END_RCPP
}
// A_optimal_ord
int A_optimal_ord(arma::mat X, arma::mat beta, arma::mat W, arma::colvec unlabeledIDs);
RcppExport SEXP _seqest_A_optimal_ord(SEXP XSEXP, SEXP betaSEXP, SEXP WSEXP, SEXP unlabeledIDsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type unlabeledIDs(unlabeledIDsSEXP);
    rcpp_result_gen = Rcpp::wrap(A_optimal_ord(X, beta, W, unlabeledIDs));
    return rcpp_result_gen;
END_RCPP
}
// D_optimal
int D_optimal(arma::mat& X, arma::uvec& id, arma::vec& beta, arma::uvec& nonZeroSet, arma::mat& M, double& rho, int& linkv, int& corstrv);
RcppExport SEXP _seqest_D_optimal(SEXP XSEXP, SEXP idSEXP, SEXP betaSEXP, SEXP nonZeroSetSEXP, SEXP MSEXP, SEXP rhoSEXP, SEXP linkvSEXP, SEXP corstrvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type nonZeroSet(nonZeroSetSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int& >::type linkv(linkvSEXP);
    Rcpp::traits::input_parameter< int& >::type corstrv(corstrvSEXP);
    rcpp_result_gen = Rcpp::wrap(D_optimal(X, id, beta, nonZeroSet, M, rho, linkv, corstrv));
    return rcpp_result_gen;
END_RCPP
}
// QIC
double QIC(arma::vec& y, arma::mat& X, arma::uvec& id, arma::vec& beta, arma::uvec& nonZeroSet, double& rho, int& linkv, int& corstrv);
RcppExport SEXP _seqest_QIC(SEXP ySEXP, SEXP XSEXP, SEXP idSEXP, SEXP betaSEXP, SEXP nonZeroSetSEXP, SEXP rhoSEXP, SEXP linkvSEXP, SEXP corstrvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type nonZeroSet(nonZeroSetSEXP);
    Rcpp::traits::input_parameter< double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int& >::type linkv(linkvSEXP);
    Rcpp::traits::input_parameter< int& >::type corstrv(corstrvSEXP);
    rcpp_result_gen = Rcpp::wrap(QIC(y, X, id, beta, nonZeroSet, rho, linkv, corstrv));
    return rcpp_result_gen;
END_RCPP
}
// getMH
List getMH(arma::vec& y, arma::mat& X, arma::uvec& id, arma::colvec& beta, double& rho, int& linkv, int& corstrv);
RcppExport SEXP _seqest_getMH(SEXP ySEXP, SEXP XSEXP, SEXP idSEXP, SEXP betaSEXP, SEXP rhoSEXP, SEXP linkvSEXP, SEXP corstrvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int& >::type linkv(linkvSEXP);
    Rcpp::traits::input_parameter< int& >::type corstrv(corstrvSEXP);
    rcpp_result_gen = Rcpp::wrap(getMH(y, X, id, beta, rho, linkv, corstrv));
    return rcpp_result_gen;
END_RCPP
}
// getWH
List getWH(arma::mat data, arma::mat beta);
RcppExport SEXP _seqest_getWH(SEXP dataSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(getWH(data, beta));
    return rcpp_result_gen;
END_RCPP
}
// getWH_ord
List getWH_ord(arma::mat data, arma::mat beta);
RcppExport SEXP _seqest_getWH_ord(SEXP dataSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(getWH_ord(data, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_seqest_A_optimal_cat", (DL_FUNC) &_seqest_A_optimal_cat, 4},
    {"_seqest_A_optimal_ord", (DL_FUNC) &_seqest_A_optimal_ord, 4},
    {"_seqest_D_optimal", (DL_FUNC) &_seqest_D_optimal, 8},
    {"_seqest_QIC", (DL_FUNC) &_seqest_QIC, 8},
    {"_seqest_getMH", (DL_FUNC) &_seqest_getMH, 7},
    {"_seqest_getWH", (DL_FUNC) &_seqest_getWH, 2},
    {"_seqest_getWH_ord", (DL_FUNC) &_seqest_getWH_ord, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_seqest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
