// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pen_bias_DeepState_TestHarness_generation.cpp and pen_bias_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double pen_bias(double h, double mu_h, double sigma2_h);

TEST(updog_deepstate_test,pen_bias_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector h(1);
  h[0]  = RcppDeepState_double();
  std::string h_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/pen_bias/AFL_pen_bias/afl_inputs/" + std::to_string(t) + "_h.qs";
  qs::c_qsave(h,h_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h values: "<< h << std::endl;
  NumericVector mu_h(1);
  mu_h[0]  = RcppDeepState_double();
  std::string mu_h_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/pen_bias/AFL_pen_bias/afl_inputs/" + std::to_string(t) + "_mu_h.qs";
  qs::c_qsave(mu_h,mu_h_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu_h values: "<< mu_h << std::endl;
  NumericVector sigma2_h(1);
  sigma2_h[0]  = RcppDeepState_double();
  std::string sigma2_h_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/pen_bias/AFL_pen_bias/afl_inputs/" + std::to_string(t) + "_sigma2_h.qs";
  qs::c_qsave(sigma2_h,sigma2_h_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma2_h values: "<< sigma2_h << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pen_bias(h[0],mu_h[0],sigma2_h[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
