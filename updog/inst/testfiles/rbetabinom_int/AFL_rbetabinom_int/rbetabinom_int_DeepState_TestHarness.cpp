// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rbetabinom_int_DeepState_TestHarness_generation.cpp and rbetabinom_int_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int rbetabinom_int(int size, double mu, double rho);

TEST(updog_deepstate_test,rbetabinom_int_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector size(1);
  size[0]  = RcppDeepState_int();
  std::string size_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom_int/AFL_rbetabinom_int/afl_inputs/" + std::to_string(t) + "_size.qs";
  qs::c_qsave(size,size_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "size values: "<< size << std::endl;
  NumericVector mu(1);
  mu[0]  = RcppDeepState_double();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom_int/AFL_rbetabinom_int/afl_inputs/" + std::to_string(t) + "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom_int/AFL_rbetabinom_int/afl_inputs/" + std::to_string(t) + "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rbetabinom_int(size[0],mu[0],rho[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
