// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rbetabinom_DeepState_TestHarness_generation.cpp and rbetabinom_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector rbetabinom(int n, IntegerVector size, NumericVector mu, NumericVector rho);

TEST(updog_deepstate_test,rbetabinom_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/AFL_rbetabinom/afl_inputs/" + std::to_string(t) + "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector size  = RcppDeepState_IntegerVector();
  std::string size_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/AFL_rbetabinom/afl_inputs/" + std::to_string(t) + "_size.qs";
  qs::c_qsave(size,size_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "size values: "<< size << std::endl;
  NumericVector mu  = RcppDeepState_NumericVector();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/AFL_rbetabinom/afl_inputs/" + std::to_string(t) + "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector rho  = RcppDeepState_NumericVector();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/AFL_rbetabinom/afl_inputs/" + std::to_string(t) + "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rbetabinom(n[0],size,mu,rho);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
