// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rbetabinom_DeepState_TestHarness_generation.cpp and rbetabinom_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector rbetabinom(int n, IntegerVector size, NumericVector mu, NumericVector rho);

TEST(updog_deepstate_test,rbetabinom_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  IntegerVector size  = RcppDeepState_IntegerVector();
  qs::c_qsave(size,"/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/inputs/size.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "size values: "<< size << std::endl;
  NumericVector mu  = RcppDeepState_NumericVector();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector rho  = RcppDeepState_NumericVector();
  qs::c_qsave(rho,"/home/akhila/fuzzer_packages/fuzzedpackages/updog/inst/testfiles/rbetabinom/inputs/rho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rbetabinom(n[0],size,mu,rho);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
