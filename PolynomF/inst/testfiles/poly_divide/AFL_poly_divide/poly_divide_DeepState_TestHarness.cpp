// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// poly_divide_DeepState_TestHarness_generation.cpp and poly_divide_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List poly_divide(NumericVector Num0, NumericVector Den);

TEST(PolynomF_deepstate_test,poly_divide_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Num0  = RcppDeepState_NumericVector();
  std::string Num0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/PolynomF/inst/testfiles/poly_divide/AFL_poly_divide/afl_inputs/" + std::to_string(t) + "_Num0.qs";
  qs::c_qsave(Num0,Num0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Num0 values: "<< Num0 << std::endl;
  NumericVector Den  = RcppDeepState_NumericVector();
  std::string Den_t = "/home/akhila/fuzzer_packages/fuzzedpackages/PolynomF/inst/testfiles/poly_divide/AFL_poly_divide/afl_inputs/" + std::to_string(t) + "_Den.qs";
  qs::c_qsave(Den,Den_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Den values: "<< Den << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    poly_divide(Num0,Den);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
