// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// poly_product_DeepState_TestHarness_generation.cpp and poly_product_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector poly_product(NumericVector P, NumericVector Q);

TEST(PolynomF_deepstate_test,poly_product_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector P  = RcppDeepState_NumericVector();
  qs::c_qsave(P,"/home/akhila/fuzzer_packages/fuzzedpackages/PolynomF/inst/testfiles/poly_product/inputs/P.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "P values: "<< P << std::endl;
  NumericVector Q  = RcppDeepState_NumericVector();
  qs::c_qsave(Q,"/home/akhila/fuzzer_packages/fuzzedpackages/PolynomF/inst/testfiles/poly_product/inputs/Q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Q values: "<< Q << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    poly_product(P,Q);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
