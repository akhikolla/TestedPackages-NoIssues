// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// IDHeatwavesCPP_DeepState_TestHarness_generation.cpp and IDHeatwavesCPP_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DataFrame IDHeatwavesCPP(int heatwaveLength, Rcpp::NumericVector tempsExceedingCutoff);

TEST(futureheatwaves_deepstate_test,IDHeatwavesCPP_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector heatwaveLength(1);
  heatwaveLength[0]  = RcppDeepState_int();
  std::string heatwaveLength_t = "/home/akhila/fuzzer_packages/fuzzedpackages/futureheatwaves/inst/testfiles/IDHeatwavesCPP/libFuzzer_IDHeatwavesCPP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_heatwaveLength.qs";
  qs::c_qsave(heatwaveLength,heatwaveLength_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "heatwaveLength values: "<< heatwaveLength << std::endl;
  NumericVector tempsExceedingCutoff  = RcppDeepState_NumericVector();
  std::string tempsExceedingCutoff_t = "/home/akhila/fuzzer_packages/fuzzedpackages/futureheatwaves/inst/testfiles/IDHeatwavesCPP/libFuzzer_IDHeatwavesCPP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tempsExceedingCutoff.qs";
  qs::c_qsave(tempsExceedingCutoff,tempsExceedingCutoff_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tempsExceedingCutoff values: "<< tempsExceedingCutoff << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    IDHeatwavesCPP(heatwaveLength[0],tempsExceedingCutoff);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
