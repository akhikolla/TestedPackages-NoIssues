// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// unstructured_pop_DeepState_TestHarness_generation.cpp and unstructured_pop_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DataFrame unstructured_pop(int start, int timesteps, double survPhi, double fecundPhi, double survMean, double survSd, double fecundMean, double fecundSd);

TEST(colorednoise_deepstate_test,unstructured_pop_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector start(1);
  start[0]  = RcppDeepState_int();
  qs::c_qsave(start,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/start.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "start values: "<< start << std::endl;
  IntegerVector timesteps(1);
  timesteps[0]  = RcppDeepState_int();
  qs::c_qsave(timesteps,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/timesteps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timesteps values: "<< timesteps << std::endl;
  NumericVector survPhi(1);
  survPhi[0]  = RcppDeepState_double();
  qs::c_qsave(survPhi,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/survPhi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "survPhi values: "<< survPhi << std::endl;
  NumericVector fecundPhi(1);
  fecundPhi[0]  = RcppDeepState_double();
  qs::c_qsave(fecundPhi,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/fecundPhi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fecundPhi values: "<< fecundPhi << std::endl;
  NumericVector survMean(1);
  survMean[0]  = RcppDeepState_double();
  qs::c_qsave(survMean,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/survMean.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "survMean values: "<< survMean << std::endl;
  NumericVector survSd(1);
  survSd[0]  = RcppDeepState_double();
  qs::c_qsave(survSd,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/survSd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "survSd values: "<< survSd << std::endl;
  NumericVector fecundMean(1);
  fecundMean[0]  = RcppDeepState_double();
  qs::c_qsave(fecundMean,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/fecundMean.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fecundMean values: "<< fecundMean << std::endl;
  NumericVector fecundSd(1);
  fecundSd[0]  = RcppDeepState_double();
  qs::c_qsave(fecundSd,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/unstructured_pop/inputs/fecundSd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fecundSd values: "<< fecundSd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    unstructured_pop(start[0],timesteps[0],survPhi[0],fecundPhi[0],survMean[0],survSd[0],fecundMean[0],fecundSd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
