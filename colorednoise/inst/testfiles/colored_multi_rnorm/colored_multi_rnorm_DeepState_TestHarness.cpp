// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// colored_multi_rnorm_DeepState_TestHarness_generation.cpp and colored_multi_rnorm_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix colored_multi_rnorm(int timesteps, Rcpp::NumericVector mean, Rcpp::NumericVector sd, Rcpp::NumericVector phi, Rcpp::NumericMatrix covMatrix);

TEST(colorednoise_deepstate_test,colored_multi_rnorm_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector timesteps(1);
  timesteps[0]  = RcppDeepState_int();
  qs::c_qsave(timesteps,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/colored_multi_rnorm/inputs/timesteps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timesteps values: "<< timesteps << std::endl;
  NumericVector mean  = RcppDeepState_NumericVector();
  qs::c_qsave(mean,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/colored_multi_rnorm/inputs/mean.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mean values: "<< mean << std::endl;
  NumericVector sd  = RcppDeepState_NumericVector();
  qs::c_qsave(sd,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/colored_multi_rnorm/inputs/sd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sd values: "<< sd << std::endl;
  NumericVector phi  = RcppDeepState_NumericVector();
  qs::c_qsave(phi,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/colored_multi_rnorm/inputs/phi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericMatrix covMatrix  = RcppDeepState_NumericMatrix();
  qs::c_qsave(covMatrix,"/home/akhila/fuzzer_packages/fuzzedpackages/colorednoise/inst/testfiles/colored_multi_rnorm/inputs/covMatrix.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "covMatrix values: "<< covMatrix << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    colored_multi_rnorm(timesteps[0],mean,sd,phi,covMatrix);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
