// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// btm_biterms_text_DeepState_TestHarness_generation.cpp and btm_biterms_text_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List btm_biterms_text(Rcpp::CharacterVector x, int W, int win);

TEST(BTM_deepstate_test,btm_biterms_text_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector x  = RcppDeepState_CharacterVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTM/inst/testfiles/btm_biterms_text/AFL_btm_biterms_text/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector W(1);
  W[0]  = RcppDeepState_int();
  std::string W_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTM/inst/testfiles/btm_biterms_text/AFL_btm_biterms_text/afl_inputs/" + std::to_string(t) + "_W.qs";
  qs::c_qsave(W,W_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  IntegerVector win(1);
  win[0]  = RcppDeepState_int();
  std::string win_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTM/inst/testfiles/btm_biterms_text/AFL_btm_biterms_text/afl_inputs/" + std::to_string(t) + "_win.qs";
  qs::c_qsave(win,win_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "win values: "<< win << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    btm_biterms_text(x,W[0],win[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
