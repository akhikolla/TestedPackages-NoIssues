// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// seq_int_ordered_DeepState_TestHarness_generation.cpp and seq_int_ordered_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::IntegerVector seq_int_ordered(double from, double to);

TEST(stcos_deepstate_test,seq_int_ordered_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector from(1);
  from[0]  = RcppDeepState_double();
  std::string from_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stcos/inst/testfiles/seq_int_ordered/libFuzzer_seq_int_ordered/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_from.qs";
  qs::c_qsave(from,from_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "from values: "<< from << std::endl;
  NumericVector to(1);
  to[0]  = RcppDeepState_double();
  std::string to_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stcos/inst/testfiles/seq_int_ordered/libFuzzer_seq_int_ordered/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_to.qs";
  qs::c_qsave(to,to_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "to values: "<< to << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    seq_int_ordered(from[0],to[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
