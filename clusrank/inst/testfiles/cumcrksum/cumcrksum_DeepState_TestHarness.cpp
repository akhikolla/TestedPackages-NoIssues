// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cumcrksum_DeepState_TestHarness_generation.cpp and cumcrksum_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix cumcrksum(int rks, int I, IntegerVector Score, int Csize);

TEST(clusrank_deepstate_test,cumcrksum_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector rks(1);
  rks[0]  = RcppDeepState_int();
  qs::c_qsave(rks,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/inputs/rks.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rks values: "<< rks << std::endl;
  IntegerVector I(1);
  I[0]  = RcppDeepState_int();
  qs::c_qsave(I,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/inputs/I.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "I values: "<< I << std::endl;
  IntegerVector Score  = RcppDeepState_IntegerVector();
  qs::c_qsave(Score,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/inputs/Score.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Score values: "<< Score << std::endl;
  IntegerVector Csize(1);
  Csize[0]  = RcppDeepState_int();
  qs::c_qsave(Csize,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/inputs/Csize.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Csize values: "<< Csize << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cumcrksum(rks[0],I[0],Score,Csize[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
