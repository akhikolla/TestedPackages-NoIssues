// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cumcrksum_DeepState_TestHarness_generation.cpp and cumcrksum_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix cumcrksum(int rks, int I, IntegerVector Score, int Csize);

TEST(clusrank_deepstate_test,cumcrksum_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector rks(1);
  rks[0]  = RcppDeepState_int();
  std::string rks_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/AFL_cumcrksum/afl_inputs/" + std::to_string(t) + "_rks.qs";
  qs::c_qsave(rks,rks_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rks values: "<< rks << std::endl;
  IntegerVector I(1);
  I[0]  = RcppDeepState_int();
  std::string I_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/AFL_cumcrksum/afl_inputs/" + std::to_string(t) + "_I.qs";
  qs::c_qsave(I,I_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "I values: "<< I << std::endl;
  IntegerVector Score  = RcppDeepState_IntegerVector();
  std::string Score_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/AFL_cumcrksum/afl_inputs/" + std::to_string(t) + "_Score.qs";
  qs::c_qsave(Score,Score_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Score values: "<< Score << std::endl;
  IntegerVector Csize(1);
  Csize[0]  = RcppDeepState_int();
  std::string Csize_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/cumcrksum/AFL_cumcrksum/afl_inputs/" + std::to_string(t) + "_Csize.qs";
  qs::c_qsave(Csize,Csize_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Csize values: "<< Csize << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cumcrksum(rks[0],I[0],Score,Csize[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
