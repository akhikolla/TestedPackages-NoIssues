// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Fi_vec_DeepState_TestHarness_generation.cpp and Fi_vec_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Fi_vec(NumericVector x, IntegerVector clus, IntegerVector nvec, int N, int M);

TEST(clusrank_deepstate_test,Fi_vec_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi_vec/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector clus  = RcppDeepState_IntegerVector();
  qs::c_qsave(clus,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi_vec/inputs/clus.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "clus values: "<< clus << std::endl;
  IntegerVector nvec  = RcppDeepState_IntegerVector();
  qs::c_qsave(nvec,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi_vec/inputs/nvec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nvec values: "<< nvec << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi_vec/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  IntegerVector M(1);
  M[0]  = RcppDeepState_int();
  qs::c_qsave(M,"/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi_vec/inputs/M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Fi_vec(x,clus,nvec,N[0],M[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
