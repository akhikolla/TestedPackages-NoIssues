// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Fi_DeepState_TestHarness_generation.cpp and Fi_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double Fi(double X, int I, NumericVector x, IntegerVector clus, IntegerVector nvec, int N);

TEST(clusrank_deepstate_test,Fi_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector X(1);
  X[0]  = RcppDeepState_double();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi/libFuzzer_Fi/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector I(1);
  I[0]  = RcppDeepState_int();
  std::string I_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi/libFuzzer_Fi/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_I.qs";
  qs::c_qsave(I,I_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "I values: "<< I << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi/libFuzzer_Fi/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector clus  = RcppDeepState_IntegerVector();
  std::string clus_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi/libFuzzer_Fi/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_clus.qs";
  qs::c_qsave(clus,clus_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "clus values: "<< clus << std::endl;
  IntegerVector nvec  = RcppDeepState_IntegerVector();
  std::string nvec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi/libFuzzer_Fi/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nvec.qs";
  qs::c_qsave(nvec,nvec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nvec values: "<< nvec << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  std::string N_t = "/home/akhila/fuzzer_packages/fuzzedpackages/clusrank/inst/testfiles/Fi/libFuzzer_Fi/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_N.qs";
  qs::c_qsave(N,N_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Fi(X[0],I[0],x,clus,nvec,N[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
