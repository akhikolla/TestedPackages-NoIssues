// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// _synthesis_DeepState_TestHarness_generation.cpp and _synthesis_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List _synthesis(int sample, int site, int evolutionSteps, double mutationRate, double advantageIncreaseRatio, double advantageDecreaseRatio, double advantageKeepRatio, double advantageIncreaseStep, double advantageDecreaseStep, double mvRate, double fpRate, double fnRate, int seed);

TEST(RScelestial_deepstate_test,_synthesis_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector sample(1);
  sample[0]  = RcppDeepState_int();
  std::string sample_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sample.qs";
  qs::c_qsave(sample,sample_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sample values: "<< sample << std::endl;
  IntegerVector site(1);
  site[0]  = RcppDeepState_int();
  std::string site_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_site.qs";
  qs::c_qsave(site,site_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "site values: "<< site << std::endl;
  IntegerVector evolutionSteps(1);
  evolutionSteps[0]  = RcppDeepState_int();
  std::string evolutionSteps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_evolutionSteps.qs";
  qs::c_qsave(evolutionSteps,evolutionSteps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "evolutionSteps values: "<< evolutionSteps << std::endl;
  NumericVector mutationRate(1);
  mutationRate[0]  = RcppDeepState_double();
  std::string mutationRate_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mutationRate.qs";
  qs::c_qsave(mutationRate,mutationRate_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mutationRate values: "<< mutationRate << std::endl;
  NumericVector advantageIncreaseRatio(1);
  advantageIncreaseRatio[0]  = RcppDeepState_double();
  std::string advantageIncreaseRatio_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_advantageIncreaseRatio.qs";
  qs::c_qsave(advantageIncreaseRatio,advantageIncreaseRatio_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageIncreaseRatio values: "<< advantageIncreaseRatio << std::endl;
  NumericVector advantageDecreaseRatio(1);
  advantageDecreaseRatio[0]  = RcppDeepState_double();
  std::string advantageDecreaseRatio_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_advantageDecreaseRatio.qs";
  qs::c_qsave(advantageDecreaseRatio,advantageDecreaseRatio_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageDecreaseRatio values: "<< advantageDecreaseRatio << std::endl;
  NumericVector advantageKeepRatio(1);
  advantageKeepRatio[0]  = RcppDeepState_double();
  std::string advantageKeepRatio_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_advantageKeepRatio.qs";
  qs::c_qsave(advantageKeepRatio,advantageKeepRatio_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageKeepRatio values: "<< advantageKeepRatio << std::endl;
  NumericVector advantageIncreaseStep(1);
  advantageIncreaseStep[0]  = RcppDeepState_double();
  std::string advantageIncreaseStep_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_advantageIncreaseStep.qs";
  qs::c_qsave(advantageIncreaseStep,advantageIncreaseStep_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageIncreaseStep values: "<< advantageIncreaseStep << std::endl;
  NumericVector advantageDecreaseStep(1);
  advantageDecreaseStep[0]  = RcppDeepState_double();
  std::string advantageDecreaseStep_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_advantageDecreaseStep.qs";
  qs::c_qsave(advantageDecreaseStep,advantageDecreaseStep_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageDecreaseStep values: "<< advantageDecreaseStep << std::endl;
  NumericVector mvRate(1);
  mvRate[0]  = RcppDeepState_double();
  std::string mvRate_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mvRate.qs";
  qs::c_qsave(mvRate,mvRate_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mvRate values: "<< mvRate << std::endl;
  NumericVector fpRate(1);
  fpRate[0]  = RcppDeepState_double();
  std::string fpRate_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fpRate.qs";
  qs::c_qsave(fpRate,fpRate_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fpRate values: "<< fpRate << std::endl;
  NumericVector fnRate(1);
  fnRate[0]  = RcppDeepState_double();
  std::string fnRate_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fnRate.qs";
  qs::c_qsave(fnRate,fnRate_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fnRate values: "<< fnRate << std::endl;
  IntegerVector seed(1);
  seed[0]  = RcppDeepState_int();
  std::string seed_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/libFuzzer__synthesis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_seed.qs";
  qs::c_qsave(seed,seed_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seed values: "<< seed << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    _synthesis(sample[0],site[0],evolutionSteps[0],mutationRate[0],advantageIncreaseRatio[0],advantageDecreaseRatio[0],advantageKeepRatio[0],advantageIncreaseStep[0],advantageDecreaseStep[0],mvRate[0],fpRate[0],fnRate[0],seed[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
