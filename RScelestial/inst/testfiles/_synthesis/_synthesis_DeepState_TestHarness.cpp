// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// _synthesis_DeepState_TestHarness_generation.cpp and _synthesis_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List _synthesis(int sample, int site, int evolutionSteps, double mutationRate, double advantageIncreaseRatio, double advantageDecreaseRatio, double advantageKeepRatio, double advantageIncreaseStep, double advantageDecreaseStep, double mvRate, double fpRate, double fnRate, int seed);

TEST(RScelestial_deepstate_test,_synthesis_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector sample(1);
  sample[0]  = RcppDeepState_int();
  qs::c_qsave(sample,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/sample.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sample values: "<< sample << std::endl;
  IntegerVector site(1);
  site[0]  = RcppDeepState_int();
  qs::c_qsave(site,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/site.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "site values: "<< site << std::endl;
  IntegerVector evolutionSteps(1);
  evolutionSteps[0]  = RcppDeepState_int();
  qs::c_qsave(evolutionSteps,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/evolutionSteps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "evolutionSteps values: "<< evolutionSteps << std::endl;
  NumericVector mutationRate(1);
  mutationRate[0]  = RcppDeepState_double();
  qs::c_qsave(mutationRate,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/mutationRate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mutationRate values: "<< mutationRate << std::endl;
  NumericVector advantageIncreaseRatio(1);
  advantageIncreaseRatio[0]  = RcppDeepState_double();
  qs::c_qsave(advantageIncreaseRatio,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/advantageIncreaseRatio.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageIncreaseRatio values: "<< advantageIncreaseRatio << std::endl;
  NumericVector advantageDecreaseRatio(1);
  advantageDecreaseRatio[0]  = RcppDeepState_double();
  qs::c_qsave(advantageDecreaseRatio,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/advantageDecreaseRatio.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageDecreaseRatio values: "<< advantageDecreaseRatio << std::endl;
  NumericVector advantageKeepRatio(1);
  advantageKeepRatio[0]  = RcppDeepState_double();
  qs::c_qsave(advantageKeepRatio,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/advantageKeepRatio.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageKeepRatio values: "<< advantageKeepRatio << std::endl;
  NumericVector advantageIncreaseStep(1);
  advantageIncreaseStep[0]  = RcppDeepState_double();
  qs::c_qsave(advantageIncreaseStep,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/advantageIncreaseStep.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageIncreaseStep values: "<< advantageIncreaseStep << std::endl;
  NumericVector advantageDecreaseStep(1);
  advantageDecreaseStep[0]  = RcppDeepState_double();
  qs::c_qsave(advantageDecreaseStep,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/advantageDecreaseStep.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "advantageDecreaseStep values: "<< advantageDecreaseStep << std::endl;
  NumericVector mvRate(1);
  mvRate[0]  = RcppDeepState_double();
  qs::c_qsave(mvRate,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/mvRate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mvRate values: "<< mvRate << std::endl;
  NumericVector fpRate(1);
  fpRate[0]  = RcppDeepState_double();
  qs::c_qsave(fpRate,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/fpRate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fpRate values: "<< fpRate << std::endl;
  NumericVector fnRate(1);
  fnRate[0]  = RcppDeepState_double();
  qs::c_qsave(fnRate,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/fnRate.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fnRate values: "<< fnRate << std::endl;
  IntegerVector seed(1);
  seed[0]  = RcppDeepState_int();
  qs::c_qsave(seed,"/home/akhila/fuzzer_packages/fuzzedpackages/RScelestial/inst/testfiles/_synthesis/inputs/seed.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seed values: "<< seed << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    _synthesis(sample[0],site[0],evolutionSteps[0],mutationRate[0],advantageIncreaseRatio[0],advantageDecreaseRatio[0],advantageKeepRatio[0],advantageIncreaseStep[0],advantageDecreaseStep[0],mvRate[0],fpRate[0],fnRate[0],seed[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
