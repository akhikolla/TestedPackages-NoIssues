// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// binaryIndexCpp_DeepState_TestHarness_generation.cpp and binaryIndexCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix binaryIndexCpp(NumericMatrix M, NumericMatrix xy, NumericVector radius, int k, double yuan, double xuan, int num);

TEST(vennplot_deepstate_test,binaryIndexCpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix M  = RcppDeepState_NumericMatrix();
  std::string M_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_M.qs";
  qs::c_qsave(M,M_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  NumericMatrix xy  = RcppDeepState_NumericMatrix();
  std::string xy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xy.qs";
  qs::c_qsave(xy,xy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xy values: "<< xy << std::endl;
  NumericVector radius  = RcppDeepState_NumericVector();
  std::string radius_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_radius.qs";
  qs::c_qsave(radius,radius_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius values: "<< radius << std::endl;
  IntegerVector k(1);
  k[0]  = RcppDeepState_int();
  std::string k_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_k.qs";
  qs::c_qsave(k,k_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  NumericVector yuan(1);
  yuan[0]  = RcppDeepState_double();
  std::string yuan_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_yuan.qs";
  qs::c_qsave(yuan,yuan_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yuan values: "<< yuan << std::endl;
  NumericVector xuan(1);
  xuan[0]  = RcppDeepState_double();
  std::string xuan_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xuan.qs";
  qs::c_qsave(xuan,xuan_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xuan values: "<< xuan << std::endl;
  IntegerVector num(1);
  num[0]  = RcppDeepState_int();
  std::string num_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/binaryIndexCpp/libFuzzer_binaryIndexCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_num.qs";
  qs::c_qsave(num,num_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "num values: "<< num << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    binaryIndexCpp(M,xy,radius,k[0],yuan[0],xuan[0],num[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
