// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// close_R_DeepState_TestHarness_generation.cpp and close_R_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List close_R(NumericMatrix xy1, NumericMatrix xy2, NumericVector radius1, NumericVector radius2, double delta, NumericVector direc);

TEST(vennplot_deepstate_test,close_R_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix xy1  = RcppDeepState_NumericMatrix();
  std::string xy1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/close_R/libFuzzer_close_R/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xy1.qs";
  qs::c_qsave(xy1,xy1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xy1 values: "<< xy1 << std::endl;
  NumericMatrix xy2  = RcppDeepState_NumericMatrix();
  std::string xy2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/close_R/libFuzzer_close_R/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xy2.qs";
  qs::c_qsave(xy2,xy2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xy2 values: "<< xy2 << std::endl;
  NumericVector radius1  = RcppDeepState_NumericVector();
  std::string radius1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/close_R/libFuzzer_close_R/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_radius1.qs";
  qs::c_qsave(radius1,radius1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius1 values: "<< radius1 << std::endl;
  NumericVector radius2  = RcppDeepState_NumericVector();
  std::string radius2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/close_R/libFuzzer_close_R/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_radius2.qs";
  qs::c_qsave(radius2,radius2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius2 values: "<< radius2 << std::endl;
  NumericVector delta(1);
  delta[0]  = RcppDeepState_double();
  std::string delta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/close_R/libFuzzer_close_R/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_delta.qs";
  qs::c_qsave(delta,delta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta values: "<< delta << std::endl;
  NumericVector direc  = RcppDeepState_NumericVector();
  std::string direc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/close_R/libFuzzer_close_R/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_direc.qs";
  qs::c_qsave(direc,direc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "direc values: "<< direc << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    close_R(xy1,xy2,radius1,radius2,delta[0],direc);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
