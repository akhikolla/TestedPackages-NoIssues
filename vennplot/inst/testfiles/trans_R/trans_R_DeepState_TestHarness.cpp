// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// trans_R_DeepState_TestHarness_generation.cpp and trans_R_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector trans_R(NumericMatrix xy, NumericVector radius, double radiusvec, NumericVector radiusall);

TEST(vennplot_deepstate_test,trans_R_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix xy  = RcppDeepState_NumericMatrix();
  qs::c_qsave(xy,"/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/trans_R/inputs/xy.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xy values: "<< xy << std::endl;
  NumericVector radius  = RcppDeepState_NumericVector();
  qs::c_qsave(radius,"/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/trans_R/inputs/radius.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius values: "<< radius << std::endl;
  NumericVector radiusvec(1);
  radiusvec[0]  = RcppDeepState_double();
  qs::c_qsave(radiusvec,"/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/trans_R/inputs/radiusvec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radiusvec values: "<< radiusvec << std::endl;
  NumericVector radiusall  = RcppDeepState_NumericVector();
  qs::c_qsave(radiusall,"/home/akhila/fuzzer_packages/fuzzedpackages/vennplot/inst/testfiles/trans_R/inputs/radiusall.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radiusall values: "<< radiusall << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    trans_R(xy,radius,radiusvec[0],radiusall);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
