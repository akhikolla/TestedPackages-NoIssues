// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// numSmaller_DeepState_TestHarness_generation.cpp and numSmaller_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::IntegerVector numSmaller(Rcpp::NumericVector values, Rcpp::NumericVector reference);

TEST(diversityForest_deepstate_test,numSmaller_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector values  = RcppDeepState_NumericVector();
  std::string values_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diversityForest/inst/testfiles/numSmaller/libFuzzer_numSmaller/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_values.qs";
  qs::c_qsave(values,values_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "values values: "<< values << std::endl;
  NumericVector reference  = RcppDeepState_NumericVector();
  std::string reference_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diversityForest/inst/testfiles/numSmaller/libFuzzer_numSmaller/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_reference.qs";
  qs::c_qsave(reference,reference_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "reference values: "<< reference << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    numSmaller(values,reference);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
