// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// z_which64intAndSize_DeepState_TestHarness_generation.cpp and z_which64intAndSize_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List z_which64intAndSize(IntegerVector largestSubsetSum);

TEST(FLSSS_deepstate_test,z_which64intAndSize_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector largestSubsetSum  = RcppDeepState_IntegerVector();
  std::string largestSubsetSum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FLSSS/inst/testfiles/z_which64intAndSize/AFL_z_which64intAndSize/afl_inputs/" + std::to_string(t) + "_largestSubsetSum.qs";
  qs::c_qsave(largestSubsetSum,largestSubsetSum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "largestSubsetSum values: "<< largestSubsetSum << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    z_which64intAndSize(largestSubsetSum);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
