// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// testFindBound003GAP2_DeepState_TestHarness_generation.cpp and testFindBound003GAP2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List testFindBound003GAP2(NumericMatrix dividedV, NumericVector targetMAX);

TEST(FLSSS_deepstate_test,testFindBound003GAP2_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix dividedV  = RcppDeepState_NumericMatrix();
  std::string dividedV_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FLSSS/inst/testfiles/testFindBound003GAP2/AFL_testFindBound003GAP2/afl_inputs/" + std::to_string(t) + "_dividedV.qs";
  qs::c_qsave(dividedV,dividedV_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dividedV values: "<< dividedV << std::endl;
  NumericVector targetMAX  = RcppDeepState_NumericVector();
  std::string targetMAX_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FLSSS/inst/testfiles/testFindBound003GAP2/AFL_testFindBound003GAP2/afl_inputs/" + std::to_string(t) + "_targetMAX.qs";
  qs::c_qsave(targetMAX,targetMAX_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "targetMAX values: "<< targetMAX << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    testFindBound003GAP2(dividedV,targetMAX);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
