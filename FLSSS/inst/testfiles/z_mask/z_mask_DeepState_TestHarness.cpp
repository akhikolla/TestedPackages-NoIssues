// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// z_mask_DeepState_TestHarness_generation.cpp and z_mask_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector z_mask(IntegerVector which64int, IntegerVector bitSize);

TEST(FLSSS_deepstate_test,z_mask_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector which64int  = RcppDeepState_IntegerVector();
  qs::c_qsave(which64int,"/home/akhila/fuzzer_packages/fuzzedpackages/FLSSS/inst/testfiles/z_mask/inputs/which64int.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "which64int values: "<< which64int << std::endl;
  IntegerVector bitSize  = RcppDeepState_IntegerVector();
  qs::c_qsave(bitSize,"/home/akhila/fuzzer_packages/fuzzedpackages/FLSSS/inst/testfiles/z_mask/inputs/bitSize.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bitSize values: "<< bitSize << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    z_mask(which64int,bitSize);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
