// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// m2_drift_DeepState_TestHarness_generation.cpp and m2_drift_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::vec m2_drift(double omega, int n_ts);

TEST(simts_deepstate_test,m2_drift_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector omega(1);
  omega[0]  = RcppDeepState_double();
  std::string omega_t = "/home/akhila/fuzzer_packages/fuzzedpackages/simts/inst/testfiles/m2_drift/libFuzzer_m2_drift/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_omega.qs";
  qs::c_qsave(omega,omega_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "omega values: "<< omega << std::endl;
  IntegerVector n_ts(1);
  n_ts[0]  = RcppDeepState_int();
  std::string n_ts_t = "/home/akhila/fuzzer_packages/fuzzedpackages/simts/inst/testfiles/m2_drift/libFuzzer_m2_drift/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_ts.qs";
  qs::c_qsave(n_ts,n_ts_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_ts values: "<< n_ts << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    m2_drift(omega[0],n_ts[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
