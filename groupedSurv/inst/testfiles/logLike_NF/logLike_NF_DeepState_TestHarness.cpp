// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// logLike_NF_DeepState_TestHarness_generation.cpp and logLike_NF_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double logLike_NF(Rcpp::NumericVector Params, Rcpp::NumericMatrix Xmatrix, Rcpp::NumericVector Kivec, Rcpp::NumericVector Deltavec, int ntps);

TEST(groupedSurv_deepstate_test,logLike_NF_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Params  = RcppDeepState_NumericVector();
  qs::c_qsave(Params,"/home/akhila/fuzzer_packages/fuzzedpackages/groupedSurv/inst/testfiles/logLike_NF/inputs/Params.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Params values: "<< Params << std::endl;
  NumericMatrix Xmatrix  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Xmatrix,"/home/akhila/fuzzer_packages/fuzzedpackages/groupedSurv/inst/testfiles/logLike_NF/inputs/Xmatrix.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Xmatrix values: "<< Xmatrix << std::endl;
  NumericVector Kivec  = RcppDeepState_NumericVector();
  qs::c_qsave(Kivec,"/home/akhila/fuzzer_packages/fuzzedpackages/groupedSurv/inst/testfiles/logLike_NF/inputs/Kivec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Kivec values: "<< Kivec << std::endl;
  NumericVector Deltavec  = RcppDeepState_NumericVector();
  qs::c_qsave(Deltavec,"/home/akhila/fuzzer_packages/fuzzedpackages/groupedSurv/inst/testfiles/logLike_NF/inputs/Deltavec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Deltavec values: "<< Deltavec << std::endl;
  IntegerVector ntps(1);
  ntps[0]  = RcppDeepState_int();
  qs::c_qsave(ntps,"/home/akhila/fuzzer_packages/fuzzedpackages/groupedSurv/inst/testfiles/logLike_NF/inputs/ntps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntps values: "<< ntps << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    logLike_NF(Params,Xmatrix,Kivec,Deltavec,ntps[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
