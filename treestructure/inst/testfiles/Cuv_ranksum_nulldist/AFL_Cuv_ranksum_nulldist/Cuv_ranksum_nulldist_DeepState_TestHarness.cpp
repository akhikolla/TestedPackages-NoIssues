// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Cuv_ranksum_nulldist_DeepState_TestHarness_generation.cpp and Cuv_ranksum_nulldist_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Cuv_ranksum_nulldist(NumericVector x, int nsim, int Ei);

TEST(treestructure_deepstate_test,Cuv_ranksum_nulldist_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/treestructure/inst/testfiles/Cuv_ranksum_nulldist/AFL_Cuv_ranksum_nulldist/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector nsim(1);
  nsim[0]  = RcppDeepState_int();
  std::string nsim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/treestructure/inst/testfiles/Cuv_ranksum_nulldist/AFL_Cuv_ranksum_nulldist/afl_inputs/" + std::to_string(t) + "_nsim.qs";
  qs::c_qsave(nsim,nsim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsim values: "<< nsim << std::endl;
  IntegerVector Ei(1);
  Ei[0]  = RcppDeepState_int();
  std::string Ei_t = "/home/akhila/fuzzer_packages/fuzzedpackages/treestructure/inst/testfiles/Cuv_ranksum_nulldist/AFL_Cuv_ranksum_nulldist/afl_inputs/" + std::to_string(t) + "_Ei.qs";
  qs::c_qsave(Ei,Ei_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ei values: "<< Ei << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Cuv_ranksum_nulldist(x,nsim[0],Ei[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
