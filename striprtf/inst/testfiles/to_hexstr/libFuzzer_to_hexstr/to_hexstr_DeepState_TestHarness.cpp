// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// to_hexstr_DeepState_TestHarness_generation.cpp and to_hexstr_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::string to_hexstr(int x, int pad);

TEST(striprtf_deepstate_test,to_hexstr_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector x(1);
  x[0]  = RcppDeepState_int();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/striprtf/inst/testfiles/to_hexstr/libFuzzer_to_hexstr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector pad(1);
  pad[0]  = RcppDeepState_int();
  std::string pad_t = "/home/akhila/fuzzer_packages/fuzzedpackages/striprtf/inst/testfiles/to_hexstr/libFuzzer_to_hexstr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pad.qs";
  qs::c_qsave(pad,pad_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pad values: "<< pad << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    to_hexstr(x[0],pad[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
