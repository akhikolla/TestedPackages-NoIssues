// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// eloint_DeepState_TestHarness_generation.cpp and eloint_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List eloint(CharacterVector winner, CharacterVector loser, CharacterVector allids, NumericVector kval, NumericVector startvalues, NumericVector runs);

TEST(EloChoice_deepstate_test,eloint_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector winner  = RcppDeepState_CharacterVector();
  std::string winner_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/eloint/AFL_eloint/afl_inputs/" + std::to_string(t) + "_winner.qs";
  qs::c_qsave(winner,winner_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "winner values: "<< winner << std::endl;
  CharacterVector loser  = RcppDeepState_CharacterVector();
  std::string loser_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/eloint/AFL_eloint/afl_inputs/" + std::to_string(t) + "_loser.qs";
  qs::c_qsave(loser,loser_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "loser values: "<< loser << std::endl;
  CharacterVector allids  = RcppDeepState_CharacterVector();
  std::string allids_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/eloint/AFL_eloint/afl_inputs/" + std::to_string(t) + "_allids.qs";
  qs::c_qsave(allids,allids_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "allids values: "<< allids << std::endl;
  NumericVector kval  = RcppDeepState_NumericVector();
  std::string kval_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/eloint/AFL_eloint/afl_inputs/" + std::to_string(t) + "_kval.qs";
  qs::c_qsave(kval,kval_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kval values: "<< kval << std::endl;
  NumericVector startvalues  = RcppDeepState_NumericVector();
  std::string startvalues_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/eloint/AFL_eloint/afl_inputs/" + std::to_string(t) + "_startvalues.qs";
  qs::c_qsave(startvalues,startvalues_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "startvalues values: "<< startvalues << std::endl;
  NumericVector runs  = RcppDeepState_NumericVector();
  std::string runs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/eloint/AFL_eloint/afl_inputs/" + std::to_string(t) + "_runs.qs";
  qs::c_qsave(runs,runs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "runs values: "<< runs << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    eloint(winner,loser,allids,kval,startvalues,runs);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
