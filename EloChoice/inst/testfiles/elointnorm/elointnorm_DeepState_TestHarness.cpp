// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// elointnorm_DeepState_TestHarness_generation.cpp and elointnorm_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List elointnorm(CharacterVector winner, CharacterVector loser, CharacterVector allids, NumericVector kval, NumericVector startvalues, NumericVector runs);

TEST(EloChoice_deepstate_test,elointnorm_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  CharacterVector winner  = RcppDeepState_CharacterVector();
  qs::c_qsave(winner,"/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/elointnorm/inputs/winner.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "winner values: "<< winner << std::endl;
  CharacterVector loser  = RcppDeepState_CharacterVector();
  qs::c_qsave(loser,"/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/elointnorm/inputs/loser.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "loser values: "<< loser << std::endl;
  CharacterVector allids  = RcppDeepState_CharacterVector();
  qs::c_qsave(allids,"/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/elointnorm/inputs/allids.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "allids values: "<< allids << std::endl;
  NumericVector kval  = RcppDeepState_NumericVector();
  qs::c_qsave(kval,"/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/elointnorm/inputs/kval.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kval values: "<< kval << std::endl;
  NumericVector startvalues  = RcppDeepState_NumericVector();
  qs::c_qsave(startvalues,"/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/elointnorm/inputs/startvalues.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "startvalues values: "<< startvalues << std::endl;
  NumericVector runs  = RcppDeepState_NumericVector();
  qs::c_qsave(runs,"/home/akhila/fuzzer_packages/fuzzedpackages/EloChoice/inst/testfiles/elointnorm/inputs/runs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "runs values: "<< runs << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    elointnorm(winner,loser,allids,kval,startvalues,runs);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
