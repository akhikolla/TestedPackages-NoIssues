// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// multiSigma_DeepState_TestHarness_generation.cpp and multiSigma_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector multiSigma(NumericMatrix signal, int deg);

TEST(mwaved_deepstate_test,multiSigma_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix signal  = RcppDeepState_NumericMatrix();
  qs::c_qsave(signal,"/home/akhila/fuzzer_packages/fuzzedpackages/mwaved/inst/testfiles/multiSigma/inputs/signal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "signal values: "<< signal << std::endl;
  IntegerVector deg(1);
  deg[0]  = RcppDeepState_int();
  qs::c_qsave(deg,"/home/akhila/fuzzer_packages/fuzzedpackages/mwaved/inst/testfiles/multiSigma/inputs/deg.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "deg values: "<< deg << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    multiSigma(signal,deg[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
