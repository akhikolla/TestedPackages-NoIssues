// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ismetric_DeepState_TestHarness_generation.cpp and ismetric_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

bool ismetric(NumericMatrix dmat, double tol);

TEST(vegclust_deepstate_test,ismetric_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix dmat  = RcppDeepState_NumericMatrix();
  std::string dmat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vegclust/inst/testfiles/ismetric/AFL_ismetric/afl_inputs/" + std::to_string(t) + "_dmat.qs";
  qs::c_qsave(dmat,dmat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dmat values: "<< dmat << std::endl;
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  std::string tol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vegclust/inst/testfiles/ismetric/AFL_ismetric/afl_inputs/" + std::to_string(t) + "_tol.qs";
  qs::c_qsave(tol,tol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ismetric(dmat,tol[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
