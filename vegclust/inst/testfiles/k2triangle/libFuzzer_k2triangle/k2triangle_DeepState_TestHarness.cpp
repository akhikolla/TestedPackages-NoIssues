// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// k2triangle_DeepState_TestHarness_generation.cpp and k2triangle_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double k2triangle(double d1, double d2, double d3);

TEST(vegclust_deepstate_test,k2triangle_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector d1(1);
  d1[0]  = RcppDeepState_double();
  std::string d1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vegclust/inst/testfiles/k2triangle/libFuzzer_k2triangle/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d1.qs";
  qs::c_qsave(d1,d1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d1 values: "<< d1 << std::endl;
  NumericVector d2(1);
  d2[0]  = RcppDeepState_double();
  std::string d2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vegclust/inst/testfiles/k2triangle/libFuzzer_k2triangle/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d2.qs";
  qs::c_qsave(d2,d2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d2 values: "<< d2 << std::endl;
  NumericVector d3(1);
  d3[0]  = RcppDeepState_double();
  std::string d3_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vegclust/inst/testfiles/k2triangle/libFuzzer_k2triangle/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d3.qs";
  qs::c_qsave(d3,d3_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d3 values: "<< d3 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    k2triangle(d1[0],d2[0],d3[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
