// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// weighted_kaplan_meier_DeepState_TestHarness_generation.cpp and weighted_kaplan_meier_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector weighted_kaplan_meier(Rcpp::NumericMatrix response, Rcpp::NumericVector weights, Rcpp::NumericVector timepoints);

TEST(bnnSurvival_deepstate_test,weighted_kaplan_meier_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix response  = RcppDeepState_NumericMatrix();
  qs::c_qsave(response,"/home/akhila/fuzzer_packages/fuzzedpackages/bnnSurvival/inst/testfiles/weighted_kaplan_meier/inputs/response.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "response values: "<< response << std::endl;
  NumericVector weights  = RcppDeepState_NumericVector();
  qs::c_qsave(weights,"/home/akhila/fuzzer_packages/fuzzedpackages/bnnSurvival/inst/testfiles/weighted_kaplan_meier/inputs/weights.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "weights values: "<< weights << std::endl;
  NumericVector timepoints  = RcppDeepState_NumericVector();
  qs::c_qsave(timepoints,"/home/akhila/fuzzer_packages/fuzzedpackages/bnnSurvival/inst/testfiles/weighted_kaplan_meier/inputs/timepoints.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timepoints values: "<< timepoints << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    weighted_kaplan_meier(response,weights,timepoints);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
