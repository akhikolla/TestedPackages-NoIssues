// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// emNorm_DeepState_TestHarness_generation.cpp and emNorm_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List emNorm(Rcpp::NumericVector outcome, Rcpp::NumericMatrix prediction, Rcpp::NumericMatrix RSQ, Rcpp::NumericVector W, double tol, int maxIter, double wisdom, double sigma2);

TEST(EBMAforecast_deepstate_test,emNorm_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector outcome  = RcppDeepState_NumericVector();
  qs::c_qsave(outcome,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/outcome.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "outcome values: "<< outcome << std::endl;
  NumericMatrix prediction  = RcppDeepState_NumericMatrix();
  qs::c_qsave(prediction,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/prediction.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prediction values: "<< prediction << std::endl;
  NumericMatrix RSQ  = RcppDeepState_NumericMatrix();
  qs::c_qsave(RSQ,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/RSQ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RSQ values: "<< RSQ << std::endl;
  NumericVector W  = RcppDeepState_NumericVector();
  qs::c_qsave(W,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/W.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  qs::c_qsave(tol,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/tol.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  IntegerVector maxIter(1);
  maxIter[0]  = RcppDeepState_int();
  qs::c_qsave(maxIter,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/maxIter.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxIter values: "<< maxIter << std::endl;
  NumericVector wisdom(1);
  wisdom[0]  = RcppDeepState_double();
  qs::c_qsave(wisdom,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/wisdom.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wisdom values: "<< wisdom << std::endl;
  NumericVector sigma2(1);
  sigma2[0]  = RcppDeepState_double();
  qs::c_qsave(sigma2,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/emNorm/inputs/sigma2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma2 values: "<< sigma2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    emNorm(outcome,prediction,RSQ,W,tol[0],maxIter[0],wisdom[0],sigma2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
