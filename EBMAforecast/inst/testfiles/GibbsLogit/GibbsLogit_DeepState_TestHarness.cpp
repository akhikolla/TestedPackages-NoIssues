// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// GibbsLogit_DeepState_TestHarness_generation.cpp and GibbsLogit_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List GibbsLogit(Rcpp::NumericVector outcome, Rcpp::NumericMatrix prediction, Rcpp::NumericVector W, int iterations, int burnin, int thin);

TEST(EBMAforecast_deepstate_test,GibbsLogit_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector outcome  = RcppDeepState_NumericVector();
  qs::c_qsave(outcome,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/GibbsLogit/inputs/outcome.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "outcome values: "<< outcome << std::endl;
  NumericMatrix prediction  = RcppDeepState_NumericMatrix();
  qs::c_qsave(prediction,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/GibbsLogit/inputs/prediction.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prediction values: "<< prediction << std::endl;
  NumericVector W  = RcppDeepState_NumericVector();
  qs::c_qsave(W,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/GibbsLogit/inputs/W.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  IntegerVector iterations(1);
  iterations[0]  = RcppDeepState_int();
  qs::c_qsave(iterations,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/GibbsLogit/inputs/iterations.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iterations values: "<< iterations << std::endl;
  IntegerVector burnin(1);
  burnin[0]  = RcppDeepState_int();
  qs::c_qsave(burnin,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/GibbsLogit/inputs/burnin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "burnin values: "<< burnin << std::endl;
  IntegerVector thin(1);
  thin[0]  = RcppDeepState_int();
  qs::c_qsave(thin,"/home/akhila/fuzzer_packages/fuzzedpackages/EBMAforecast/inst/testfiles/GibbsLogit/inputs/thin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thin values: "<< thin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    GibbsLogit(outcome,prediction,W,iterations[0],burnin[0],thin[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
