// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// compnoreg
List compnoreg(const int burnin, const int iteration, NumericVector t, IntegerVector delta, IntegerVector c, IntegerVector nm, NumericVector alpha1, NumericVector lambda1, NumericVector lambda01, NumericVector alpha2, NumericVector lambda2, NumericVector lambda02, NumericVector p, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, const double gamma0, const double gamma1, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector tplot, int m, int thin);
RcppExport SEXP _DPWeibull_compnoreg(SEXP burninSEXP, SEXP iterationSEXP, SEXP tSEXP, SEXP deltaSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alpha1SEXP, SEXP lambda1SEXP, SEXP lambda01SEXP, SEXP alpha2SEXP, SEXP lambda2SEXP, SEXP lambda02SEXP, SEXP pSEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP gamma0SEXP, SEXP gamma1SEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP tplotSEXP, SEXP mSEXP, SEXP thinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda01(lambda01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda02(lambda02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma0(gamma0SEXP);
    Rcpp::traits::input_parameter< const double >::type gamma1(gamma1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tplot(tplotSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    rcpp_result_gen = Rcpp::wrap(compnoreg(burnin, iteration, t, delta, c, nm, alpha1, lambda1, lambda01, alpha2, lambda2, lambda02, p, alpha00, alpha0, lambda00, alphaalpha, alphalambda, gamma0, gamma1, nu, ngrp, a, b, ymax, tplot, m, thin));
    return rcpp_result_gen;
END_RCPP
}
// compnoreg_resume
List compnoreg_resume(const int burnin, const int iteration, NumericVector t, IntegerVector delta, IntegerVector c, IntegerVector nm, NumericVector alpha1, NumericVector lambda1, NumericVector lambda01, NumericVector alpha2, NumericVector lambda2, NumericVector lambda02, NumericVector p, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, const double gamma0, const double gamma1, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector tplot, int m, int thin, std::vector<int> emptybasket, IntegerVector allbaskets);
RcppExport SEXP _DPWeibull_compnoreg_resume(SEXP burninSEXP, SEXP iterationSEXP, SEXP tSEXP, SEXP deltaSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alpha1SEXP, SEXP lambda1SEXP, SEXP lambda01SEXP, SEXP alpha2SEXP, SEXP lambda2SEXP, SEXP lambda02SEXP, SEXP pSEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP gamma0SEXP, SEXP gamma1SEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP tplotSEXP, SEXP mSEXP, SEXP thinSEXP, SEXP emptybasketSEXP, SEXP allbasketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda01(lambda01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda02(lambda02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma0(gamma0SEXP);
    Rcpp::traits::input_parameter< const double >::type gamma1(gamma1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tplot(tplotSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type emptybasket(emptybasketSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type allbaskets(allbasketsSEXP);
    rcpp_result_gen = Rcpp::wrap(compnoreg_resume(burnin, iteration, t, delta, c, nm, alpha1, lambda1, lambda01, alpha2, lambda2, lambda02, p, alpha00, alpha0, lambda00, alphaalpha, alphalambda, gamma0, gamma1, nu, ngrp, a, b, ymax, tplot, m, thin, emptybasket, allbaskets));
    return rcpp_result_gen;
END_RCPP
}
// compreg
List compreg(const int burnin, const int iteration, NumericVector t, IntegerVector delta, NumericMatrix x, IntegerVector c, IntegerVector nm, NumericVector alpha1, NumericVector lambda1, NumericVector lambda01, NumericVector alpha2, NumericVector lambda2, NumericVector lambda02, NumericMatrix beta1, NumericMatrix beta2, NumericVector p, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, const double gamma0, const double gamma1, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector tplot, int m, int thin, double betasl, NumericVector xplot1, NumericVector xplot2);
RcppExport SEXP _DPWeibull_compreg(SEXP burninSEXP, SEXP iterationSEXP, SEXP tSEXP, SEXP deltaSEXP, SEXP xSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alpha1SEXP, SEXP lambda1SEXP, SEXP lambda01SEXP, SEXP alpha2SEXP, SEXP lambda2SEXP, SEXP lambda02SEXP, SEXP beta1SEXP, SEXP beta2SEXP, SEXP pSEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP gamma0SEXP, SEXP gamma1SEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP tplotSEXP, SEXP mSEXP, SEXP thinSEXP, SEXP betaslSEXP, SEXP xplot1SEXP, SEXP xplot2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda01(lambda01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda02(lambda02SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma0(gamma0SEXP);
    Rcpp::traits::input_parameter< const double >::type gamma1(gamma1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tplot(tplotSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type betasl(betaslSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot1(xplot1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot2(xplot2SEXP);
    rcpp_result_gen = Rcpp::wrap(compreg(burnin, iteration, t, delta, x, c, nm, alpha1, lambda1, lambda01, alpha2, lambda2, lambda02, beta1, beta2, p, alpha00, alpha0, lambda00, alphaalpha, alphalambda, gamma0, gamma1, nu, ngrp, a, b, ymax, tplot, m, thin, betasl, xplot1, xplot2));
    return rcpp_result_gen;
END_RCPP
}
// compreg_resume
List compreg_resume(const int burnin, const int iteration, NumericVector t, IntegerVector delta, NumericMatrix x, IntegerVector c, IntegerVector nm, NumericVector alpha1, NumericVector lambda1, NumericVector lambda01, NumericVector alpha2, NumericVector lambda2, NumericVector lambda02, NumericMatrix beta1, NumericMatrix beta2, NumericVector p, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, const double gamma0, const double gamma1, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector tplot, int m, int thin, double betasl, NumericVector xplot1, NumericVector xplot2, std::vector<int> emptybasket, IntegerVector allbaskets);
RcppExport SEXP _DPWeibull_compreg_resume(SEXP burninSEXP, SEXP iterationSEXP, SEXP tSEXP, SEXP deltaSEXP, SEXP xSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alpha1SEXP, SEXP lambda1SEXP, SEXP lambda01SEXP, SEXP alpha2SEXP, SEXP lambda2SEXP, SEXP lambda02SEXP, SEXP beta1SEXP, SEXP beta2SEXP, SEXP pSEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP gamma0SEXP, SEXP gamma1SEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP tplotSEXP, SEXP mSEXP, SEXP thinSEXP, SEXP betaslSEXP, SEXP xplot1SEXP, SEXP xplot2SEXP, SEXP emptybasketSEXP, SEXP allbasketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda01(lambda01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda02(lambda02SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< const double >::type gamma0(gamma0SEXP);
    Rcpp::traits::input_parameter< const double >::type gamma1(gamma1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tplot(tplotSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type betasl(betaslSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot1(xplot1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot2(xplot2SEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type emptybasket(emptybasketSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type allbaskets(allbasketsSEXP);
    rcpp_result_gen = Rcpp::wrap(compreg_resume(burnin, iteration, t, delta, x, c, nm, alpha1, lambda1, lambda01, alpha2, lambda2, lambda02, beta1, beta2, p, alpha00, alpha0, lambda00, alphaalpha, alphalambda, gamma0, gamma1, nu, ngrp, a, b, ymax, tplot, m, thin, betasl, xplot1, xplot2, emptybasket, allbaskets));
    return rcpp_result_gen;
END_RCPP
}
// predcompreg
List predcompreg(NumericMatrix alpharec1, NumericMatrix lambdarec1, NumericMatrix betarec1, NumericMatrix alpharec2, NumericMatrix lambdarec2, NumericMatrix betarec2, NumericMatrix prec, NumericMatrix xplot, NumericVector tplot, double alpha);
RcppExport SEXP _DPWeibull_predcompreg(SEXP alpharec1SEXP, SEXP lambdarec1SEXP, SEXP betarec1SEXP, SEXP alpharec2SEXP, SEXP lambdarec2SEXP, SEXP betarec2SEXP, SEXP precSEXP, SEXP xplotSEXP, SEXP tplotSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type alpharec1(alpharec1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambdarec1(lambdarec1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type betarec1(betarec1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alpharec2(alpharec2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambdarec2(lambdarec2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type betarec2(betarec2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prec(precSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xplot(xplotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tplot(tplotSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(predcompreg(alpharec1, lambdarec1, betarec1, alpharec2, lambdarec2, betarec2, prec, xplot, tplot, alpha));
    return rcpp_result_gen;
END_RCPP
}
// noreg
List noreg(const int burnin, const int iteration, NumericVector tl, NumericVector tr, IntegerVector delta, IntegerVector pi, IntegerVector c, IntegerVector nm, NumericVector alpha, NumericVector lambda, NumericVector lambda0, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector t, int m, int thin);
RcppExport SEXP _DPWeibull_noreg(SEXP burninSEXP, SEXP iterationSEXP, SEXP tlSEXP, SEXP trSEXP, SEXP deltaSEXP, SEXP piSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP lambda0SEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP tSEXP, SEXP mSEXP, SEXP thinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tl(tlSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tr(trSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type pi(piSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    rcpp_result_gen = Rcpp::wrap(noreg(burnin, iteration, tl, tr, delta, pi, c, nm, alpha, lambda, lambda0, alpha00, alpha0, lambda00, alphaalpha, alphalambda, nu, ngrp, a, b, ymax, t, m, thin));
    return rcpp_result_gen;
END_RCPP
}
// noreg_resume
List noreg_resume(const int burnin, const int iteration, NumericVector tl, NumericVector tr, IntegerVector delta, IntegerVector pi, IntegerVector c, IntegerVector nm, NumericVector alpha, NumericVector lambda, NumericVector lambda0, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector t, int m, int thin, std::vector<int> emptybasket, IntegerVector allbaskets);
RcppExport SEXP _DPWeibull_noreg_resume(SEXP burninSEXP, SEXP iterationSEXP, SEXP tlSEXP, SEXP trSEXP, SEXP deltaSEXP, SEXP piSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP lambda0SEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP tSEXP, SEXP mSEXP, SEXP thinSEXP, SEXP emptybasketSEXP, SEXP allbasketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tl(tlSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tr(trSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type pi(piSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type emptybasket(emptybasketSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type allbaskets(allbasketsSEXP);
    rcpp_result_gen = Rcpp::wrap(noreg_resume(burnin, iteration, tl, tr, delta, pi, c, nm, alpha, lambda, lambda0, alpha00, alpha0, lambda00, alphaalpha, alphalambda, nu, ngrp, a, b, ymax, t, m, thin, emptybasket, allbaskets));
    return rcpp_result_gen;
END_RCPP
}
// reg
List reg(const int burnin, const int iteration, NumericVector tl, NumericVector tr, IntegerVector delta, IntegerVector pi, NumericMatrix x, IntegerVector c, IntegerVector nm, NumericVector alpha, NumericVector lambda, NumericMatrix beta, NumericVector lambda0, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, const int m, double betasl, NumericVector xplot1, NumericVector xplot2, NumericVector time, int thin);
RcppExport SEXP _DPWeibull_reg(SEXP burninSEXP, SEXP iterationSEXP, SEXP tlSEXP, SEXP trSEXP, SEXP deltaSEXP, SEXP piSEXP, SEXP xSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP betaSEXP, SEXP lambda0SEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP mSEXP, SEXP betaslSEXP, SEXP xplot1SEXP, SEXP xplot2SEXP, SEXP timeSEXP, SEXP thinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tl(tlSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tr(trSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< const int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type betasl(betaslSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot1(xplot1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot2(xplot2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    rcpp_result_gen = Rcpp::wrap(reg(burnin, iteration, tl, tr, delta, pi, x, c, nm, alpha, lambda, beta, lambda0, alpha00, alpha0, lambda00, alphaalpha, alphalambda, nu, ngrp, a, b, ymax, m, betasl, xplot1, xplot2, time, thin));
    return rcpp_result_gen;
END_RCPP
}
// reg_resume
List reg_resume(const int burnin, const int iteration, NumericVector tl, NumericVector tr, IntegerVector delta, IntegerVector pi, NumericMatrix x, IntegerVector c, IntegerVector nm, NumericVector alpha, NumericVector lambda, NumericMatrix beta, NumericVector lambda0, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, const int m, double betasl, NumericVector xplot1, NumericVector xplot2, NumericVector time, int thin, std::vector<int> emptybasket, IntegerVector allbaskets);
RcppExport SEXP _DPWeibull_reg_resume(SEXP burninSEXP, SEXP iterationSEXP, SEXP tlSEXP, SEXP trSEXP, SEXP deltaSEXP, SEXP piSEXP, SEXP xSEXP, SEXP cSEXP, SEXP nmSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP betaSEXP, SEXP lambda0SEXP, SEXP alpha00SEXP, SEXP alpha0SEXP, SEXP lambda00SEXP, SEXP alphaalphaSEXP, SEXP alphalambdaSEXP, SEXP nuSEXP, SEXP ngrpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ymaxSEXP, SEXP mSEXP, SEXP betaslSEXP, SEXP xplot1SEXP, SEXP xplot2SEXP, SEXP timeSEXP, SEXP thinSEXP, SEXP emptybasketSEXP, SEXP allbasketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const int >::type iteration(iterationSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tl(tlSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tr(trSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type pi(piSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nm(nmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha00(alpha00SEXP);
    Rcpp::traits::input_parameter< const double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< const double >::type lambda00(lambda00SEXP);
    Rcpp::traits::input_parameter< const double >::type alphaalpha(alphaalphaSEXP);
    Rcpp::traits::input_parameter< const double >::type alphalambda(alphalambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngrp(ngrpSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< const int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type betasl(betaslSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot1(xplot1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xplot2(xplot2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type emptybasket(emptybasketSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type allbaskets(allbasketsSEXP);
    rcpp_result_gen = Rcpp::wrap(reg_resume(burnin, iteration, tl, tr, delta, pi, x, c, nm, alpha, lambda, beta, lambda0, alpha00, alpha0, lambda00, alphaalpha, alphalambda, nu, ngrp, a, b, ymax, m, betasl, xplot1, xplot2, time, thin, emptybasket, allbaskets));
    return rcpp_result_gen;
END_RCPP
}
// predreg
List predreg(NumericMatrix alpharec, NumericMatrix lambdarec, NumericMatrix betarec, NumericMatrix xplot, NumericVector tplot, double alpha);
RcppExport SEXP _DPWeibull_predreg(SEXP alpharecSEXP, SEXP lambdarecSEXP, SEXP betarecSEXP, SEXP xplotSEXP, SEXP tplotSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type alpharec(alpharecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambdarec(lambdarecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type betarec(betarecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xplot(xplotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tplot(tplotSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(predreg(alpharec, lambdarec, betarec, xplot, tplot, alpha));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP DPWeibull_compnoreg(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_compnoreg_resume(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_compreg(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_compreg_resume(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_noreg(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_noreg_resume(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_predcompreg(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_predreg(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_reg(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP DPWeibull_reg_resume(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_DPWeibull_compnoreg", (DL_FUNC) &_DPWeibull_compnoreg, 28},
    {"_DPWeibull_compnoreg_resume", (DL_FUNC) &_DPWeibull_compnoreg_resume, 30},
    {"_DPWeibull_compreg", (DL_FUNC) &_DPWeibull_compreg, 34},
    {"_DPWeibull_compreg_resume", (DL_FUNC) &_DPWeibull_compreg_resume, 36},
    {"_DPWeibull_predcompreg", (DL_FUNC) &_DPWeibull_predcompreg, 10},
    {"_DPWeibull_noreg", (DL_FUNC) &_DPWeibull_noreg, 24},
    {"_DPWeibull_noreg_resume", (DL_FUNC) &_DPWeibull_noreg_resume, 26},
    {"_DPWeibull_reg", (DL_FUNC) &_DPWeibull_reg, 29},
    {"_DPWeibull_reg_resume", (DL_FUNC) &_DPWeibull_reg_resume, 31},
    {"_DPWeibull_predreg", (DL_FUNC) &_DPWeibull_predreg, 6},
    {"DPWeibull_compnoreg",        (DL_FUNC) &DPWeibull_compnoreg,        28},
    {"DPWeibull_compnoreg_resume", (DL_FUNC) &DPWeibull_compnoreg_resume, 30},
    {"DPWeibull_compreg",          (DL_FUNC) &DPWeibull_compreg,          34},
    {"DPWeibull_compreg_resume",   (DL_FUNC) &DPWeibull_compreg_resume,   36},
    {"DPWeibull_noreg",            (DL_FUNC) &DPWeibull_noreg,            24},
    {"DPWeibull_noreg_resume",     (DL_FUNC) &DPWeibull_noreg_resume,     26},
    {"DPWeibull_predcompreg",      (DL_FUNC) &DPWeibull_predcompreg,      10},
    {"DPWeibull_predreg",          (DL_FUNC) &DPWeibull_predreg,           6},
    {"DPWeibull_reg",              (DL_FUNC) &DPWeibull_reg,              29},
    {"DPWeibull_reg_resume",       (DL_FUNC) &DPWeibull_reg_resume,       31},
    {NULL, NULL, 0}
};

RcppExport void R_init_DPWeibull(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
