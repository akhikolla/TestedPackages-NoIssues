// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// compnoreg_DeepState_TestHarness_generation.cpp and compnoreg_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List compnoreg(const int burnin, const int iteration, NumericVector t, IntegerVector delta, IntegerVector c, IntegerVector nm, NumericVector alpha1, NumericVector lambda1, NumericVector lambda01, NumericVector alpha2, NumericVector lambda2, NumericVector lambda02, NumericVector p, const double alpha00, const double alpha0, const double lambda00, const double alphaalpha, const double alphalambda, const double gamma0, const double gamma1, NumericVector nu, NumericVector ngrp, const double a, const double b, const double ymax, NumericVector tplot, int m, int thin);

TEST(DPWeibull_deepstate_test,compnoreg_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector burnin(1);
  burnin[0]  = RcppDeepState_int();
  std::string burnin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_burnin.qs";
  std::string b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_b.qs";
  qs::c_qsave(burnin,burnin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "burnin values: "<< burnin << std::endl;
  IntegerVector iteration(1);
  iteration[0]  = RcppDeepState_int();
  std::string iteration_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_iteration.qs";
  qs::c_qsave(iteration,iteration_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iteration values: "<< iteration << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  IntegerVector delta  = RcppDeepState_IntegerVector();
  std::string delta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_delta.qs";
  qs::c_qsave(delta,delta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta values: "<< delta << std::endl;
  IntegerVector c  = RcppDeepState_IntegerVector();
  std::string c_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_c.qs";
  qs::c_qsave(c,c_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "c values: "<< c << std::endl;
  IntegerVector nm  = RcppDeepState_IntegerVector();
  std::string nm_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nm.qs";
  qs::c_qsave(nm,nm_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nm values: "<< nm << std::endl;
  NumericVector alpha1  = RcppDeepState_NumericVector();
  std::string alpha1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha1.qs";
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(alpha1,alpha1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha1 values: "<< alpha1 << std::endl;
  NumericVector lambda1  = RcppDeepState_NumericVector();
  std::string lambda1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda1.qs";
  qs::c_qsave(lambda1,lambda1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda1 values: "<< lambda1 << std::endl;
  NumericVector lambda01  = RcppDeepState_NumericVector();
  std::string lambda01_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda01.qs";
  qs::c_qsave(lambda01,lambda01_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda01 values: "<< lambda01 << std::endl;
  NumericVector alpha2  = RcppDeepState_NumericVector();
  std::string alpha2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha2.qs";
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(alpha2,alpha2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha2 values: "<< alpha2 << std::endl;
  NumericVector lambda2  = RcppDeepState_NumericVector();
  std::string lambda2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda2.qs";
  qs::c_qsave(lambda2,lambda2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda2 values: "<< lambda2 << std::endl;
  NumericVector lambda02  = RcppDeepState_NumericVector();
  std::string lambda02_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda02.qs";
  qs::c_qsave(lambda02,lambda02_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda02 values: "<< lambda02 << std::endl;
  NumericVector p  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector alpha00(1);
  alpha00[0]  = RcppDeepState_double();
  std::string alpha00_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha00.qs";
  std::string alpha0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha0.qs";
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(alpha00,alpha00_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha00 values: "<< alpha00 << std::endl;
  NumericVector alpha0(1);
  alpha0[0]  = RcppDeepState_double();
  std::string alpha0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha0.qs";
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(alpha0,alpha0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha0 values: "<< alpha0 << std::endl;
  NumericVector lambda00(1);
  lambda00[0]  = RcppDeepState_double();
  std::string lambda00_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda00.qs";
  qs::c_qsave(lambda00,lambda00_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda00 values: "<< lambda00 << std::endl;
  NumericVector alphaalpha(1);
  alphaalpha[0]  = RcppDeepState_double();
  std::string alphaalpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alphaalpha.qs";
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(alphaalpha,alphaalpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alphaalpha values: "<< alphaalpha << std::endl;
  NumericVector alphalambda(1);
  alphalambda[0]  = RcppDeepState_double();
  std::string alphalambda_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alphalambda.qs";
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(alphalambda,alphalambda_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alphalambda values: "<< alphalambda << std::endl;
  NumericVector gamma0(1);
  gamma0[0]  = RcppDeepState_double();
  std::string gamma0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gamma0.qs";
  qs::c_qsave(gamma0,gamma0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma0 values: "<< gamma0 << std::endl;
  NumericVector gamma1(1);
  gamma1[0]  = RcppDeepState_double();
  std::string gamma1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gamma1.qs";
  qs::c_qsave(gamma1,gamma1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma1 values: "<< gamma1 << std::endl;
  NumericVector nu  = RcppDeepState_NumericVector();
  std::string nu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nu.qs";
  qs::c_qsave(nu,nu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nu values: "<< nu << std::endl;
  NumericVector ngrp  = RcppDeepState_NumericVector();
  std::string ngrp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ngrp.qs";
  qs::c_qsave(ngrp,ngrp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ngrp values: "<< ngrp << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector b(1);
  b[0]  = RcppDeepState_double();
  std::string b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_b.qs";
  qs::c_qsave(b,b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector ymax(1);
  ymax[0]  = RcppDeepState_double();
  std::string ymax_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ymax.qs";
  qs::c_qsave(ymax,ymax_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ymax values: "<< ymax << std::endl;
  NumericVector tplot  = RcppDeepState_NumericVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  std::string tplot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tplot.qs";
  qs::c_qsave(tplot,tplot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tplot values: "<< tplot << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_m.qs";
  qs::c_qsave(m,m_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  IntegerVector thin(1);
  thin[0]  = RcppDeepState_int();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  std::string thin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/compnoreg/libFuzzer_compnoreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_thin.qs";
  qs::c_qsave(thin,thin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thin values: "<< thin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    compnoreg(burnin[0],iteration[0],t,delta,c,nm,alpha1,lambda1,lambda01,alpha2,lambda2,lambda02,p,alpha00[0],alpha0[0],lambda00[0],alphaalpha[0],alphalambda[0],gamma0[0],gamma1[0],nu,ngrp,a[0],b[0],ymax[0],tplot,m[0],thin[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
