// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// predcompreg_DeepState_TestHarness_generation.cpp and predcompreg_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List predcompreg(NumericMatrix alpharec1, NumericMatrix lambdarec1, NumericMatrix betarec1, NumericMatrix alpharec2, NumericMatrix lambdarec2, NumericMatrix betarec2, NumericMatrix prec, NumericMatrix xplot, NumericVector tplot, double alpha);

TEST(DPWeibull_deepstate_test,predcompreg_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix alpharec1  = RcppDeepState_NumericMatrix();
  std::string alpharec1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpharec1.qs";
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpharec1,alpharec1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpharec1 values: "<< alpharec1 << std::endl;
  NumericMatrix lambdarec1  = RcppDeepState_NumericMatrix();
  std::string lambdarec1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambdarec1.qs";
  qs::c_qsave(lambdarec1,lambdarec1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambdarec1 values: "<< lambdarec1 << std::endl;
  NumericMatrix betarec1  = RcppDeepState_NumericMatrix();
  std::string betarec1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_betarec1.qs";
  qs::c_qsave(betarec1,betarec1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "betarec1 values: "<< betarec1 << std::endl;
  NumericMatrix alpharec2  = RcppDeepState_NumericMatrix();
  std::string alpharec2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpharec2.qs";
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpharec2,alpharec2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpharec2 values: "<< alpharec2 << std::endl;
  NumericMatrix lambdarec2  = RcppDeepState_NumericMatrix();
  std::string lambdarec2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambdarec2.qs";
  qs::c_qsave(lambdarec2,lambdarec2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambdarec2 values: "<< lambdarec2 << std::endl;
  NumericMatrix betarec2  = RcppDeepState_NumericMatrix();
  std::string betarec2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_betarec2.qs";
  qs::c_qsave(betarec2,betarec2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "betarec2 values: "<< betarec2 << std::endl;
  NumericMatrix prec  = RcppDeepState_NumericMatrix();
  std::string prec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prec.qs";
  qs::c_qsave(prec,prec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prec values: "<< prec << std::endl;
  NumericMatrix xplot  = RcppDeepState_NumericMatrix();
  std::string xplot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xplot.qs";
  qs::c_qsave(xplot,xplot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xplot values: "<< xplot << std::endl;
  NumericVector tplot  = RcppDeepState_NumericVector();
  std::string tplot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tplot.qs";
  qs::c_qsave(tplot,tplot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tplot values: "<< tplot << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predcompreg/libFuzzer_predcompreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpha,alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    predcompreg(alpharec1,lambdarec1,betarec1,alpharec2,lambdarec2,betarec2,prec,xplot,tplot,alpha[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
