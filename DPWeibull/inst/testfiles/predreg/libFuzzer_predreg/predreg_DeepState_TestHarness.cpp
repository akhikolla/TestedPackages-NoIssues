// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// predreg_DeepState_TestHarness_generation.cpp and predreg_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List predreg(NumericMatrix alpharec, NumericMatrix lambdarec, NumericMatrix betarec, NumericMatrix xplot, NumericVector tplot, double alpha);

TEST(DPWeibull_deepstate_test,predreg_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix alpharec  = RcppDeepState_NumericMatrix();
  std::string alpharec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpharec.qs";
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpharec,alpharec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpharec values: "<< alpharec << std::endl;
  NumericMatrix lambdarec  = RcppDeepState_NumericMatrix();
  std::string lambdarec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambdarec.qs";
  qs::c_qsave(lambdarec,lambdarec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambdarec values: "<< lambdarec << std::endl;
  NumericMatrix betarec  = RcppDeepState_NumericMatrix();
  std::string betarec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_betarec.qs";
  qs::c_qsave(betarec,betarec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "betarec values: "<< betarec << std::endl;
  NumericMatrix xplot  = RcppDeepState_NumericMatrix();
  std::string xplot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xplot.qs";
  qs::c_qsave(xplot,xplot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xplot values: "<< xplot << std::endl;
  NumericVector tplot  = RcppDeepState_NumericVector();
  std::string tplot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tplot.qs";
  qs::c_qsave(tplot,tplot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tplot values: "<< tplot << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DPWeibull/inst/testfiles/predreg/libFuzzer_predreg/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpha,alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    predreg(alpharec,lambdarec,betarec,xplot,tplot,alpha[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
