// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// diffuseSteveCpp_DeepState_TestHarness_generation.cpp and diffuseSteveCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void diffuseSteveCpp(Rcpp::NumericMatrix y, double D, double h, double tstep);

TEST(BacArena_deepstate_test,diffuseSteveCpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix y  = RcppDeepState_NumericMatrix();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BacArena/inst/testfiles/diffuseSteveCpp/AFL_diffuseSteveCpp/afl_inputs/" + std::to_string(t) + "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector D(1);
  D[0]  = RcppDeepState_double();
  std::string D_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BacArena/inst/testfiles/diffuseSteveCpp/AFL_diffuseSteveCpp/afl_inputs/" + std::to_string(t) + "_D.qs";
  qs::c_qsave(D,D_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "D values: "<< D << std::endl;
  NumericVector h(1);
  h[0]  = RcppDeepState_double();
  std::string h_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BacArena/inst/testfiles/diffuseSteveCpp/AFL_diffuseSteveCpp/afl_inputs/" + std::to_string(t) + "_h.qs";
  qs::c_qsave(h,h_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h values: "<< h << std::endl;
  NumericVector tstep(1);
  tstep[0]  = RcppDeepState_double();
  std::string tstep_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BacArena/inst/testfiles/diffuseSteveCpp/AFL_diffuseSteveCpp/afl_inputs/" + std::to_string(t) + "_tstep.qs";
  qs::c_qsave(tstep,tstep_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tstep values: "<< tstep << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    diffuseSteveCpp(y,D[0],h[0],tstep[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
