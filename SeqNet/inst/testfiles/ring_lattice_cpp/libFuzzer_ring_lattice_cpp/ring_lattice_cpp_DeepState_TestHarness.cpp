// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ring_lattice_cpp_DeepState_TestHarness_generation.cpp and ring_lattice_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix ring_lattice_cpp(int p, int neig_size);

TEST(SeqNet_deepstate_test,ring_lattice_cpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector p(1);
  p[0]  = RcppDeepState_int();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/SeqNet/inst/testfiles/ring_lattice_cpp/libFuzzer_ring_lattice_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector neig_size(1);
  neig_size[0]  = RcppDeepState_int();
  std::string neig_size_t = "/home/akhila/fuzzer_packages/fuzzedpackages/SeqNet/inst/testfiles/ring_lattice_cpp/libFuzzer_ring_lattice_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_neig_size.qs";
  qs::c_qsave(neig_size,neig_size_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "neig_size values: "<< neig_size << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ring_lattice_cpp(p[0],neig_size[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
