// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// edges_from_adjacency_cpp_DeepState_TestHarness_generation.cpp and edges_from_adjacency_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix edges_from_adjacency_cpp(NumericMatrix adj);

TEST(SeqNet_deepstate_test,edges_from_adjacency_cpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix adj  = RcppDeepState_NumericMatrix();
  std::string adj_t = "/home/akhila/fuzzer_packages/fuzzedpackages/SeqNet/inst/testfiles/edges_from_adjacency_cpp/libFuzzer_edges_from_adjacency_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_adj.qs";
  qs::c_qsave(adj,adj_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "adj values: "<< adj << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    edges_from_adjacency_cpp(adj);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
