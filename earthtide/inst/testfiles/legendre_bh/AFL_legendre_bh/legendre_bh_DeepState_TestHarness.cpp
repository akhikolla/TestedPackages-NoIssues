// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// legendre_bh_DeepState_TestHarness_generation.cpp and legendre_bh_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double legendre_bh(int l, int m, double x, int csphase);

TEST(earthtide_deepstate_test,legendre_bh_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector l(1);
  l[0]  = RcppDeepState_int();
  std::string l_t = "/home/akhila/fuzzer_packages/fuzzedpackages/earthtide/inst/testfiles/legendre_bh/AFL_legendre_bh/afl_inputs/" + std::to_string(t) + "_l.qs";
  qs::c_qsave(l,l_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l values: "<< l << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/earthtide/inst/testfiles/legendre_bh/AFL_legendre_bh/afl_inputs/" + std::to_string(t) + "_m.qs";
  qs::c_qsave(m,m_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  NumericVector x(1);
  x[0]  = RcppDeepState_double();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/earthtide/inst/testfiles/legendre_bh/AFL_legendre_bh/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector csphase(1);
  csphase[0]  = RcppDeepState_int();
  std::string csphase_t = "/home/akhila/fuzzer_packages/fuzzedpackages/earthtide/inst/testfiles/legendre_bh/AFL_legendre_bh/afl_inputs/" + std::to_string(t) + "_csphase.qs";
  qs::c_qsave(csphase,csphase_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "csphase values: "<< csphase << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    legendre_bh(l[0],m[0],x[0],csphase[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
