// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// legendre_DeepState_TestHarness_generation.cpp and legendre_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix legendre(int l_max, double x);

TEST(earthtide_deepstate_test,legendre_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector l_max(1);
  l_max[0]  = RcppDeepState_int();
  qs::c_qsave(l_max,"/home/akhila/fuzzer_packages/fuzzedpackages/earthtide/inst/testfiles/legendre/inputs/l_max.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l_max values: "<< l_max << std::endl;
  NumericVector x(1);
  x[0]  = RcppDeepState_double();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/earthtide/inst/testfiles/legendre/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    legendre(l_max[0],x[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
