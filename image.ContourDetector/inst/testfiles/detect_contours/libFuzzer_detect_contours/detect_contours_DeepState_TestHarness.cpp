// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// detect_contours_DeepState_TestHarness_generation.cpp and detect_contours_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List detect_contours(NumericVector image, int X, int Y, double Q);

TEST(image.ContourDetector_deepstate_test,detect_contours_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector image  = RcppDeepState_NumericVector();
  std::string image_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.ContourDetector/inst/testfiles/detect_contours/libFuzzer_detect_contours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_image.qs";
  qs::c_qsave(image,image_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "image values: "<< image << std::endl;
  IntegerVector X(1);
  X[0]  = RcppDeepState_int();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.ContourDetector/inst/testfiles/detect_contours/libFuzzer_detect_contours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector Y(1);
  Y[0]  = RcppDeepState_int();
  std::string Y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.ContourDetector/inst/testfiles/detect_contours/libFuzzer_detect_contours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Y.qs";
  qs::c_qsave(Y,Y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericVector Q(1);
  Q[0]  = RcppDeepState_double();
  std::string Q_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.ContourDetector/inst/testfiles/detect_contours/libFuzzer_detect_contours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Q.qs";
  qs::c_qsave(Q,Q_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Q values: "<< Q << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    detect_contours(image,X[0],Y[0],Q[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
