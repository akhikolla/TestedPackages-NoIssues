// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mcmc_upp_DeepState_TestHarness_generation.cpp and mcmc_upp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

DataFrame mcmc_upp(const NumericVector x, const int u, const double xi1, const double a_xi1, const double b_xi1, const int N, const int thin, const int burnin, const int print_freq);

TEST(crandep_deepstate_test,mcmc_upp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector u(1);
  u[0]  = RcppDeepState_int();
  std::string u_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_u.qs";
  qs::c_qsave(u,u_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector xi1(1);
  xi1[0]  = RcppDeepState_double();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_x.qs";
  std::string xi1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_xi1.qs";
  qs::c_qsave(xi1,xi1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xi1 values: "<< xi1 << std::endl;
  NumericVector a_xi1(1);
  a_xi1[0]  = RcppDeepState_double();
  std::string a_xi1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_a_xi1.qs";
  qs::c_qsave(a_xi1,a_xi1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a_xi1 values: "<< a_xi1 << std::endl;
  NumericVector b_xi1(1);
  b_xi1[0]  = RcppDeepState_double();
  std::string b_xi1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_b_xi1.qs";
  qs::c_qsave(b_xi1,b_xi1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b_xi1 values: "<< b_xi1 << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  std::string N_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_N.qs";
  qs::c_qsave(N,N_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  IntegerVector thin(1);
  thin[0]  = RcppDeepState_int();
  std::string thin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_thin.qs";
  qs::c_qsave(thin,thin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thin values: "<< thin << std::endl;
  IntegerVector burnin(1);
  burnin[0]  = RcppDeepState_int();
  std::string burnin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_burnin.qs";
  qs::c_qsave(burnin,burnin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "burnin values: "<< burnin << std::endl;
  IntegerVector print_freq(1);
  print_freq[0]  = RcppDeepState_int();
  std::string print_freq_t = "/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/AFL_mcmc_upp/afl_inputs/" + std::to_string(t) + "_print_freq.qs";
  qs::c_qsave(print_freq,print_freq_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "print_freq values: "<< print_freq << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mcmc_upp(x,u[0],xi1[0],a_xi1[0],b_xi1[0],N[0],thin[0],burnin[0],print_freq[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
