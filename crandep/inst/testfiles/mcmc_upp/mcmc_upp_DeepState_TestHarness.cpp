// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mcmc_upp_DeepState_TestHarness_generation.cpp and mcmc_upp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

DataFrame mcmc_upp(const NumericVector x, const int u, const double xi1, const double a_xi1, const double b_xi1, const int N, const int thin, const int burnin, const int print_freq);

TEST(crandep_deepstate_test,mcmc_upp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector u(1);
  u[0]  = RcppDeepState_int();
  qs::c_qsave(u,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/u.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector xi1(1);
  xi1[0]  = RcppDeepState_double();
  qs::c_qsave(xi1,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/xi1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xi1 values: "<< xi1 << std::endl;
  NumericVector a_xi1(1);
  a_xi1[0]  = RcppDeepState_double();
  qs::c_qsave(a_xi1,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/a_xi1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a_xi1 values: "<< a_xi1 << std::endl;
  NumericVector b_xi1(1);
  b_xi1[0]  = RcppDeepState_double();
  qs::c_qsave(b_xi1,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/b_xi1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b_xi1 values: "<< b_xi1 << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  IntegerVector thin(1);
  thin[0]  = RcppDeepState_int();
  qs::c_qsave(thin,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/thin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thin values: "<< thin << std::endl;
  IntegerVector burnin(1);
  burnin[0]  = RcppDeepState_int();
  qs::c_qsave(burnin,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/burnin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "burnin values: "<< burnin << std::endl;
  IntegerVector print_freq(1);
  print_freq[0]  = RcppDeepState_int();
  qs::c_qsave(print_freq,"/home/akhila/fuzzer_packages/fuzzedpackages/crandep/inst/testfiles/mcmc_upp/inputs/print_freq.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "print_freq values: "<< print_freq << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mcmc_upp(x,u[0],xi1[0],a_xi1[0],b_xi1[0],N[0],thin[0],burnin[0],print_freq[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
