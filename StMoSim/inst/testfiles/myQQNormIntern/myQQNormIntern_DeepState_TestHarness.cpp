// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// myQQNormIntern_DeepState_TestHarness_generation.cpp and myQQNormIntern_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix myQQNormIntern(NumericVector mySeq, double myMean, double mySd, double lengthX, int n_sim);

TEST(StMoSim_deepstate_test,myQQNormIntern_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector mySeq  = RcppDeepState_NumericVector();
  qs::c_qsave(mySeq,"/home/akhila/fuzzer_packages/fuzzedpackages/StMoSim/inst/testfiles/myQQNormIntern/inputs/mySeq.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mySeq values: "<< mySeq << std::endl;
  NumericVector myMean(1);
  myMean[0]  = RcppDeepState_double();
  qs::c_qsave(myMean,"/home/akhila/fuzzer_packages/fuzzedpackages/StMoSim/inst/testfiles/myQQNormIntern/inputs/myMean.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "myMean values: "<< myMean << std::endl;
  NumericVector mySd(1);
  mySd[0]  = RcppDeepState_double();
  qs::c_qsave(mySd,"/home/akhila/fuzzer_packages/fuzzedpackages/StMoSim/inst/testfiles/myQQNormIntern/inputs/mySd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mySd values: "<< mySd << std::endl;
  NumericVector lengthX(1);
  lengthX[0]  = RcppDeepState_double();
  qs::c_qsave(lengthX,"/home/akhila/fuzzer_packages/fuzzedpackages/StMoSim/inst/testfiles/myQQNormIntern/inputs/lengthX.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lengthX values: "<< lengthX << std::endl;
  IntegerVector n_sim(1);
  n_sim[0]  = RcppDeepState_int();
  qs::c_qsave(n_sim,"/home/akhila/fuzzer_packages/fuzzedpackages/StMoSim/inst/testfiles/myQQNormIntern/inputs/n_sim.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_sim values: "<< n_sim << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    myQQNormIntern(mySeq,myMean[0],mySd[0],lengthX[0],n_sim[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
