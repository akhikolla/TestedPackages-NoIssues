// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ths_vp12_DeepState_TestHarness_generation.cpp and ths_vp12_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector ths_vp12(NumericVector vs, double t, double lambda0, double lambda1, double lambda2, double p);

TEST(smam_deepstate_test,ths_vp12_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector vs  = RcppDeepState_NumericVector();
  std::string vs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smam/inst/testfiles/ths_vp12/libFuzzer_ths_vp12/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vs.qs";
  qs::c_qsave(vs,vs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vs values: "<< vs << std::endl;
  NumericVector t(1);
  t[0]  = RcppDeepState_double();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smam/inst/testfiles/ths_vp12/libFuzzer_ths_vp12/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector lambda0(1);
  lambda0[0]  = RcppDeepState_double();
  std::string lambda0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smam/inst/testfiles/ths_vp12/libFuzzer_ths_vp12/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda0.qs";
  qs::c_qsave(lambda0,lambda0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda0 values: "<< lambda0 << std::endl;
  NumericVector lambda1(1);
  lambda1[0]  = RcppDeepState_double();
  std::string lambda1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smam/inst/testfiles/ths_vp12/libFuzzer_ths_vp12/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda1.qs";
  qs::c_qsave(lambda1,lambda1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda1 values: "<< lambda1 << std::endl;
  NumericVector lambda2(1);
  lambda2[0]  = RcppDeepState_double();
  std::string lambda2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smam/inst/testfiles/ths_vp12/libFuzzer_ths_vp12/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda2.qs";
  qs::c_qsave(lambda2,lambda2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda2 values: "<< lambda2 << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smam/inst/testfiles/ths_vp12/libFuzzer_ths_vp12/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ths_vp12(vs,t[0],lambda0[0],lambda1[0],lambda2[0],p[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
