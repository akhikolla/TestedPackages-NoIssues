// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_binseg_normal_DeepState_TestHarness_generation.cpp and rcpp_binseg_normal_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List rcpp_binseg_normal(const Rcpp::NumericVector data_vec, const int kmax);

TEST(binsegRcpp_deepstate_test,rcpp_binseg_normal_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector data_vec  = RcppDeepState_NumericVector();
  qs::c_qsave(data_vec,"/home/akhila/fuzzer_packages/fuzzedpackages/binsegRcpp/inst/testfiles/rcpp_binseg_normal/inputs/data_vec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "data_vec values: "<< data_vec << std::endl;
  IntegerVector kmax(1);
  kmax[0]  = RcppDeepState_int();
  qs::c_qsave(kmax,"/home/akhila/fuzzer_packages/fuzzedpackages/binsegRcpp/inst/testfiles/rcpp_binseg_normal/inputs/kmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kmax values: "<< kmax << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_binseg_normal(data_vec,kmax[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
