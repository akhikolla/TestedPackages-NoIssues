// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// length_run_DeepState_TestHarness_generation.cpp and length_run_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector length_run(IntegerVector k, IntegerVector lag, IntegerVector idx);

TEST(runner_deepstate_test,length_run_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector k  = RcppDeepState_IntegerVector();
  std::string k_t = "/home/akhila/fuzzer_packages/fuzzedpackages/runner/inst/testfiles/length_run/libFuzzer_length_run/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_k.qs";
  qs::c_qsave(k,k_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  IntegerVector lag  = RcppDeepState_IntegerVector();
  std::string lag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/runner/inst/testfiles/length_run/libFuzzer_length_run/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lag.qs";
  qs::c_qsave(lag,lag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lag values: "<< lag << std::endl;
  IntegerVector idx  = RcppDeepState_IntegerVector();
  std::string idx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/runner/inst/testfiles/length_run/libFuzzer_length_run/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_idx.qs";
  qs::c_qsave(idx,idx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "idx values: "<< idx << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    length_run(k,lag,idx);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
