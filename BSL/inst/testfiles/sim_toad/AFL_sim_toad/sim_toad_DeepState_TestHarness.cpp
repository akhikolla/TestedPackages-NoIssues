// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sim_toad_DeepState_TestHarness_generation.cpp and sim_toad_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix sim_toad(NumericVector params, int ntoad, int nday, int model, double d0);

TEST(BSL_deepstate_test,sim_toad_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector params  = RcppDeepState_NumericVector();
  std::string params_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BSL/inst/testfiles/sim_toad/AFL_sim_toad/afl_inputs/" + std::to_string(t) + "_params.qs";
  qs::c_qsave(params,params_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "params values: "<< params << std::endl;
  IntegerVector ntoad(1);
  ntoad[0]  = RcppDeepState_int();
  std::string ntoad_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BSL/inst/testfiles/sim_toad/AFL_sim_toad/afl_inputs/" + std::to_string(t) + "_ntoad.qs";
  qs::c_qsave(ntoad,ntoad_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntoad values: "<< ntoad << std::endl;
  IntegerVector nday(1);
  nday[0]  = RcppDeepState_int();
  std::string nday_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BSL/inst/testfiles/sim_toad/AFL_sim_toad/afl_inputs/" + std::to_string(t) + "_nday.qs";
  qs::c_qsave(nday,nday_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nday values: "<< nday << std::endl;
  IntegerVector model(1);
  model[0]  = RcppDeepState_int();
  std::string model_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BSL/inst/testfiles/sim_toad/AFL_sim_toad/afl_inputs/" + std::to_string(t) + "_model.qs";
  qs::c_qsave(model,model_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "model values: "<< model << std::endl;
  NumericVector d0(1);
  d0[0]  = RcppDeepState_double();
  std::string d0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BSL/inst/testfiles/sim_toad/AFL_sim_toad/afl_inputs/" + std::to_string(t) + "_d0.qs";
  qs::c_qsave(d0,d0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d0 values: "<< d0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sim_toad(params,ntoad[0],nday[0],model[0],d0[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
