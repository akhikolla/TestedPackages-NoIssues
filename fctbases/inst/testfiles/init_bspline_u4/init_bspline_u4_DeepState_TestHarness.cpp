// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// init_bspline_u4_DeepState_TestHarness_generation.cpp and init_bspline_u4_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP init_bspline_u4(double e_left, double e_right, int n_intervals);

TEST(fctbases_deepstate_test,init_bspline_u4_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector e_left(1);
  e_left[0]  = RcppDeepState_double();
  qs::c_qsave(e_left,"/home/akhila/fuzzer_packages/fuzzedpackages/fctbases/inst/testfiles/init_bspline_u4/inputs/e_left.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "e_left values: "<< e_left << std::endl;
  NumericVector e_right(1);
  e_right[0]  = RcppDeepState_double();
  qs::c_qsave(e_right,"/home/akhila/fuzzer_packages/fuzzedpackages/fctbases/inst/testfiles/init_bspline_u4/inputs/e_right.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "e_right values: "<< e_right << std::endl;
  IntegerVector n_intervals(1);
  n_intervals[0]  = RcppDeepState_int();
  qs::c_qsave(n_intervals,"/home/akhila/fuzzer_packages/fuzzedpackages/fctbases/inst/testfiles/init_bspline_u4/inputs/n_intervals.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_intervals values: "<< n_intervals << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    init_bspline_u4(e_left[0],e_right[0],n_intervals[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
