// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// init_pol_basis_DeepState_TestHarness_generation.cpp and init_pol_basis_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP init_pol_basis(int pol_order);

TEST(fctbases_deepstate_test,init_pol_basis_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector pol_order(1);
  pol_order[0]  = RcppDeepState_int();
  std::string pol_order_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fctbases/inst/testfiles/init_pol_basis/libFuzzer_init_pol_basis/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pol_order.qs";
  qs::c_qsave(pol_order,pol_order_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pol_order values: "<< pol_order << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    init_pol_basis(pol_order[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
