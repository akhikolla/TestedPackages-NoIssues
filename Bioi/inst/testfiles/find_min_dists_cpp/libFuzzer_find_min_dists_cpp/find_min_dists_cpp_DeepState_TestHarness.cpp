// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// find_min_dists_cpp_DeepState_TestHarness_generation.cpp and find_min_dists_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DataFrame find_min_dists_cpp(NumericMatrix mOne, NumericMatrix mTwo);

TEST(Bioi_deepstate_test,find_min_dists_cpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix mOne  = RcppDeepState_NumericMatrix();
  std::string mOne_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Bioi/inst/testfiles/find_min_dists_cpp/libFuzzer_find_min_dists_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mOne.qs";
  qs::c_qsave(mOne,mOne_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mOne values: "<< mOne << std::endl;
  NumericMatrix mTwo  = RcppDeepState_NumericMatrix();
  std::string mTwo_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Bioi/inst/testfiles/find_min_dists_cpp/libFuzzer_find_min_dists_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mTwo.qs";
  qs::c_qsave(mTwo,mTwo_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mTwo values: "<< mTwo << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    find_min_dists_cpp(mOne,mTwo);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
