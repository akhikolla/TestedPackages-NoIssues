// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// R_ut_scale_DeepState_TestHarness_generation.cpp and R_ut_scale_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void R_ut_scale(CharacterVector nw, CharacterVector old, NumericVector d);

TEST(units_deepstate_test,R_ut_scale_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector nw  = RcppDeepState_CharacterVector();
  std::string nw_t = "/home/akhila/fuzzer_packages/fuzzedpackages/units/inst/testfiles/R_ut_scale/libFuzzer_R_ut_scale/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nw.qs";
  qs::c_qsave(nw,nw_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nw values: "<< nw << std::endl;
  CharacterVector old  = RcppDeepState_CharacterVector();
  std::string old_t = "/home/akhila/fuzzer_packages/fuzzedpackages/units/inst/testfiles/R_ut_scale/libFuzzer_R_ut_scale/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_old.qs";
  qs::c_qsave(old,old_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "old values: "<< old << std::endl;
  NumericVector d  = RcppDeepState_NumericVector();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/units/inst/testfiles/R_ut_scale/libFuzzer_R_ut_scale/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    R_ut_scale(nw,old,d);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
