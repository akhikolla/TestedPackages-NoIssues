// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// CRbinwise_DeepState_TestHarness_generation.cpp and CRbinwise_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix CRbinwise(NumericVector binVar, int quota);

TEST(divDyn_deepstate_test,CRbinwise_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector binVar  = RcppDeepState_NumericVector();
  std::string binVar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/divDyn/inst/testfiles/CRbinwise/libFuzzer_CRbinwise/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_binVar.qs";
  qs::c_qsave(binVar,binVar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "binVar values: "<< binVar << std::endl;
  IntegerVector quota(1);
  quota[0]  = RcppDeepState_int();
  std::string quota_t = "/home/akhila/fuzzer_packages/fuzzedpackages/divDyn/inst/testfiles/CRbinwise/libFuzzer_CRbinwise/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_quota.qs";
  qs::c_qsave(quota,quota_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "quota values: "<< quota << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    CRbinwise(binVar,quota[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
