// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bound2R_cpp_DeepState_TestHarness_generation.cpp and bound2R_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::LogicalVector bound2R_cpp(Rcpp::NumericMatrix X, Rcpp::NumericVector Rk);

TEST(EMbC_deepstate_test,bound2R_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EMbC/inst/testfiles/bound2R_cpp/AFL_bound2R_cpp/afl_inputs/" + std::to_string(t) + "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  NumericVector Rk  = RcppDeepState_NumericVector();
  std::string Rk_t = "/home/akhila/fuzzer_packages/fuzzedpackages/EMbC/inst/testfiles/bound2R_cpp/AFL_bound2R_cpp/afl_inputs/" + std::to_string(t) + "_Rk.qs";
  qs::c_qsave(Rk,Rk_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rk values: "<< Rk << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    bound2R_cpp(X,Rk);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
