// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nbr_DeepState_TestHarness_generation.cpp and nbr_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector nbr(int ii, int nRow, int nCol, int dRow, int dCol);

TEST(stfit_deepstate_test,nbr_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector ii(1);
  ii[0]  = RcppDeepState_int();
  std::string ii_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stfit/inst/testfiles/nbr/AFL_nbr/afl_inputs/" + std::to_string(t) + "_ii.qs";
  qs::c_qsave(ii,ii_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ii values: "<< ii << std::endl;
  IntegerVector nRow(1);
  nRow[0]  = RcppDeepState_int();
  std::string nRow_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stfit/inst/testfiles/nbr/AFL_nbr/afl_inputs/" + std::to_string(t) + "_nRow.qs";
  qs::c_qsave(nRow,nRow_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nRow values: "<< nRow << std::endl;
  IntegerVector nCol(1);
  nCol[0]  = RcppDeepState_int();
  std::string nCol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stfit/inst/testfiles/nbr/AFL_nbr/afl_inputs/" + std::to_string(t) + "_nCol.qs";
  qs::c_qsave(nCol,nCol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nCol values: "<< nCol << std::endl;
  IntegerVector dRow(1);
  dRow[0]  = RcppDeepState_int();
  std::string dRow_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stfit/inst/testfiles/nbr/AFL_nbr/afl_inputs/" + std::to_string(t) + "_dRow.qs";
  qs::c_qsave(dRow,dRow_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dRow values: "<< dRow << std::endl;
  IntegerVector dCol(1);
  dCol[0]  = RcppDeepState_int();
  std::string dCol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/stfit/inst/testfiles/nbr/AFL_nbr/afl_inputs/" + std::to_string(t) + "_dCol.qs";
  qs::c_qsave(dCol,dCol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dCol values: "<< dCol << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nbr(ii[0],nRow[0],nCol[0],dRow[0],dCol[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
