// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// byRcpp_DeepState_TestHarness_generation.cpp and byRcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List byRcpp(const int nr, const arma::mat frommat, arma::mat totmat, arma::mat summat, arma::mat minmat, arma::mat maxmat);

TEST(gjam_deepstate_test,byRcpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector nr(1);
  nr[0]  = RcppDeepState_int();
  qs::c_qsave(nr,"/home/akhila/fuzzer_packages/fuzzedpackages/gjam/inst/testfiles/byRcpp/inputs/nr.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nr values: "<< nr << std::endl;
  std::ofstream frommat_stream;
  IntegerVector nr(1);
  nr[0]  = RcppDeepState_mat();
  frommat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/gjam/inst/testfiles/byRcpp/inputs/frommat");
  frommat_stream << frommat;
  std::cout << "frommat values: "<< frommat << std::endl;
  frommat_stream.close();
  std::ofstream totmat_stream;
  IntegerVector nr(1);
  nr[0]  = RcppDeepState_mat();
  totmat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/gjam/inst/testfiles/byRcpp/inputs/totmat");
  totmat_stream << totmat;
  std::cout << "totmat values: "<< totmat << std::endl;
  totmat_stream.close();
  std::ofstream summat_stream;
  IntegerVector nr(1);
  nr[0]  = RcppDeepState_mat();
  summat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/gjam/inst/testfiles/byRcpp/inputs/summat");
  summat_stream << summat;
  std::cout << "summat values: "<< summat << std::endl;
  summat_stream.close();
  std::ofstream minmat_stream;
  IntegerVector nr(1);
  nr[0]  = RcppDeepState_mat();
  minmat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/gjam/inst/testfiles/byRcpp/inputs/minmat");
  minmat_stream << minmat;
  std::cout << "minmat values: "<< minmat << std::endl;
  minmat_stream.close();
  std::ofstream maxmat_stream;
  IntegerVector nr(1);
  nr[0]  = RcppDeepState_mat();
  maxmat_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/gjam/inst/testfiles/byRcpp/inputs/maxmat");
  maxmat_stream << maxmat;
  std::cout << "maxmat values: "<< maxmat << std::endl;
  maxmat_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    byRcpp(nr[0],frommat,totmat,summat,minmat,maxmat);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
