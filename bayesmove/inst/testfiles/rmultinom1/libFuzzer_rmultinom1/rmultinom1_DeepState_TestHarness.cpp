// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rmultinom1_DeepState_TestHarness_generation.cpp and rmultinom1_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector rmultinom1(NumericMatrix prob, NumericVector randu);

TEST(bayesmove_deepstate_test,rmultinom1_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix prob  = RcppDeepState_NumericMatrix();
  std::string prob_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bayesmove/inst/testfiles/rmultinom1/libFuzzer_rmultinom1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prob.qs";
  qs::c_qsave(prob,prob_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prob values: "<< prob << std::endl;
  NumericVector randu  = RcppDeepState_NumericVector();
  std::string randu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bayesmove/inst/testfiles/rmultinom1/libFuzzer_rmultinom1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_randu.qs";
  qs::c_qsave(randu,randu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "randu values: "<< randu << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rmultinom1(prob,randu);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
