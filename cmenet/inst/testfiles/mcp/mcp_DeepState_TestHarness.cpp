// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mcp_DeepState_TestHarness_generation.cpp and mcp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double mcp(double beta, double lambda, double gamma);

TEST(cmenet_deepstate_test,mcp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector beta(1);
  beta[0]  = RcppDeepState_double();
  qs::c_qsave(beta,"/home/akhila/fuzzer_packages/fuzzedpackages/cmenet/inst/testfiles/mcp/inputs/beta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  NumericVector lambda(1);
  lambda[0]  = RcppDeepState_double();
  qs::c_qsave(lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/cmenet/inst/testfiles/mcp/inputs/lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  NumericVector gamma(1);
  gamma[0]  = RcppDeepState_double();
  qs::c_qsave(gamma,"/home/akhila/fuzzer_packages/fuzzedpackages/cmenet/inst/testfiles/mcp/inputs/gamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma values: "<< gamma << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mcp(beta[0],lambda[0],gamma[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
