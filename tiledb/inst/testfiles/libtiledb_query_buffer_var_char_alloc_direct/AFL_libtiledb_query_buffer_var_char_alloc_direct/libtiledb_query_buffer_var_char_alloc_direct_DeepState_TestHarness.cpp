// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// libtiledb_query_buffer_var_char_alloc_direct_DeepState_TestHarness_generation.cpp and libtiledb_query_buffer_var_char_alloc_direct_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

XPtr<vlc_buf_t> libtiledb_query_buffer_var_char_alloc_direct(int szoffsets, int szdata);

TEST(tiledb_deepstate_test,libtiledb_query_buffer_var_char_alloc_direct_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector szoffsets(1);
  szoffsets[0]  = RcppDeepState_int();
  std::string szoffsets_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tiledb/inst/testfiles/libtiledb_query_buffer_var_char_alloc_direct/AFL_libtiledb_query_buffer_var_char_alloc_direct/afl_inputs/" + std::to_string(t) + "_szoffsets.qs";
  qs::c_qsave(szoffsets,szoffsets_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "szoffsets values: "<< szoffsets << std::endl;
  IntegerVector szdata(1);
  szdata[0]  = RcppDeepState_int();
  std::string szdata_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tiledb/inst/testfiles/libtiledb_query_buffer_var_char_alloc_direct/AFL_libtiledb_query_buffer_var_char_alloc_direct/afl_inputs/" + std::to_string(t) + "_szdata.qs";
  qs::c_qsave(szdata,szdata_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "szdata values: "<< szdata << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    libtiledb_query_buffer_var_char_alloc_direct(szoffsets[0],szdata[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
