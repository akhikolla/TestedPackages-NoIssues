// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// weighted_smooth_DeepState_TestHarness_generation.cpp and weighted_smooth_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector weighted_smooth(NumericVector vec, NumericVector weights);

TEST(detrendr_deepstate_test,weighted_smooth_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector vec  = RcppDeepState_NumericVector();
  std::string vec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/weighted_smooth/AFL_weighted_smooth/afl_inputs/" + std::to_string(t) + "_vec.qs";
  qs::c_qsave(vec,vec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vec values: "<< vec << std::endl;
  NumericVector weights  = RcppDeepState_NumericVector();
  std::string weights_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/weighted_smooth/AFL_weighted_smooth/afl_inputs/" + std::to_string(t) + "_weights.qs";
  qs::c_qsave(weights,weights_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "weights values: "<< weights << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    weighted_smooth(vec,weights);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
