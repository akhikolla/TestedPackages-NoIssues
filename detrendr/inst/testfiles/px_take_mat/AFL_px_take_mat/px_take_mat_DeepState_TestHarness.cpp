// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// px_take_mat_DeepState_TestHarness_generation.cpp and px_take_mat_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector px_take_mat(NumericMatrix mat, NumericMatrix mat_orig, NumericVector frames_losing, int seed);

TEST(detrendr_deepstate_test,px_take_mat_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix mat  = RcppDeepState_NumericMatrix();
  std::string mat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/px_take_mat/AFL_px_take_mat/afl_inputs/" + std::to_string(t) + "_mat.qs";
  qs::c_qsave(mat,mat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mat values: "<< mat << std::endl;
  NumericMatrix mat_orig  = RcppDeepState_NumericMatrix();
  std::string mat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/px_take_mat/AFL_px_take_mat/afl_inputs/" + std::to_string(t) + "_mat.qs";
  std::string mat_orig_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/px_take_mat/AFL_px_take_mat/afl_inputs/" + std::to_string(t) + "_mat_orig.qs";
  qs::c_qsave(mat_orig,mat_orig_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mat_orig values: "<< mat_orig << std::endl;
  NumericVector frames_losing  = RcppDeepState_NumericVector();
  std::string frames_losing_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/px_take_mat/AFL_px_take_mat/afl_inputs/" + std::to_string(t) + "_frames_losing.qs";
  qs::c_qsave(frames_losing,frames_losing_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "frames_losing values: "<< frames_losing << std::endl;
  IntegerVector seed(1);
  seed[0]  = RcppDeepState_int();
  std::string seed_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/px_take_mat/AFL_px_take_mat/afl_inputs/" + std::to_string(t) + "_seed.qs";
  qs::c_qsave(seed,seed_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seed values: "<< seed << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    px_take_mat(mat,mat_orig,frames_losing,seed[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
