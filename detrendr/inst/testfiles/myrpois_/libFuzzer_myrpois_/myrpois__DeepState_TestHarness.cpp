// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// myrpois__DeepState_TestHarness_generation.cpp and myrpois__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector myrpois_(NumericVector means, int seed);

TEST(detrendr_deepstate_test,myrpois__test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector means  = RcppDeepState_NumericVector();
  std::string means_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/myrpois_/libFuzzer_myrpois_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_means.qs";
  qs::c_qsave(means,means_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "means values: "<< means << std::endl;
  IntegerVector seed(1);
  seed[0]  = RcppDeepState_int();
  std::string seed_t = "/home/akhila/fuzzer_packages/fuzzedpackages/detrendr/inst/testfiles/myrpois_/libFuzzer_myrpois_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_seed.qs";
  qs::c_qsave(seed,seed_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seed values: "<< seed << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    myrpois_(means,seed[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
