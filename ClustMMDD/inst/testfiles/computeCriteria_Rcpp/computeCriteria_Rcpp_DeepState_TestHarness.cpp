// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// computeCriteria_Rcpp_DeepState_TestHarness_generation.cpp and computeCriteria_Rcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DoubleVector computeCriteria_Rcpp(double lv, int dim, int N, double entropy, double Cte);

TEST(ClustMMDD_deepstate_test,computeCriteria_Rcpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector lv(1);
  lv[0]  = RcppDeepState_double();
  qs::c_qsave(lv,"/home/akhila/fuzzer_packages/fuzzedpackages/ClustMMDD/inst/testfiles/computeCriteria_Rcpp/inputs/lv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lv values: "<< lv << std::endl;
  IntegerVector dim(1);
  dim[0]  = RcppDeepState_int();
  qs::c_qsave(dim,"/home/akhila/fuzzer_packages/fuzzedpackages/ClustMMDD/inst/testfiles/computeCriteria_Rcpp/inputs/dim.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dim values: "<< dim << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  qs::c_qsave(N,"/home/akhila/fuzzer_packages/fuzzedpackages/ClustMMDD/inst/testfiles/computeCriteria_Rcpp/inputs/N.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  NumericVector entropy(1);
  entropy[0]  = RcppDeepState_double();
  qs::c_qsave(entropy,"/home/akhila/fuzzer_packages/fuzzedpackages/ClustMMDD/inst/testfiles/computeCriteria_Rcpp/inputs/entropy.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "entropy values: "<< entropy << std::endl;
  NumericVector Cte(1);
  Cte[0]  = RcppDeepState_double();
  qs::c_qsave(Cte,"/home/akhila/fuzzer_packages/fuzzedpackages/ClustMMDD/inst/testfiles/computeCriteria_Rcpp/inputs/Cte.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Cte values: "<< Cte << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    computeCriteria_Rcpp(lv[0],dim[0],N[0],entropy[0],Cte[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
