// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// recombine_DeepState_TestHarness_generation.cpp and recombine_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix recombine(NumericMatrix strand1, NumericMatrix strand2, NumericVector cross);

TEST(ibdsim2_deepstate_test,recombine_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix strand1  = RcppDeepState_NumericMatrix();
  qs::c_qsave(strand1,"/home/akhila/fuzzer_packages/fuzzedpackages/ibdsim2/inst/testfiles/recombine/inputs/strand1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "strand1 values: "<< strand1 << std::endl;
  NumericMatrix strand2  = RcppDeepState_NumericMatrix();
  qs::c_qsave(strand2,"/home/akhila/fuzzer_packages/fuzzedpackages/ibdsim2/inst/testfiles/recombine/inputs/strand2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "strand2 values: "<< strand2 << std::endl;
  NumericVector cross  = RcppDeepState_NumericVector();
  qs::c_qsave(cross,"/home/akhila/fuzzer_packages/fuzzedpackages/ibdsim2/inst/testfiles/recombine/inputs/cross.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cross values: "<< cross << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    recombine(strand1,strand2,cross);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
