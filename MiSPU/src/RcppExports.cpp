// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// GUniFracCpp
List GUniFracCpp(arma::mat cum, arma::mat brlen);
RcppExport SEXP _MiSPU_GUniFracCpp(SEXP cumSEXP, SEXP brlenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type cum(cumSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type brlen(brlenSEXP);
    rcpp_result_gen = Rcpp::wrap(GUniFracCpp(cum, brlen));
    return rcpp_result_gen;
END_RCPP
}
// GUniFracCpp2
arma::cube GUniFracCpp2(arma::mat cum, arma::mat brlen, arma::mat powV);
RcppExport SEXP _MiSPU_GUniFracCpp2(SEXP cumSEXP, SEXP brlenSEXP, SEXP powVSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type cum(cumSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type brlen(brlenSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type powV(powVSEXP);
    rcpp_result_gen = Rcpp::wrap(GUniFracCpp2(cum, brlen, powV));
    return rcpp_result_gen;
END_RCPP
}
// MiSPUC
List MiSPUC(arma::mat X1, arma::mat r1, arma::mat X2, arma::mat r2, arma::mat powV, int nperm);
RcppExport SEXP _MiSPU_MiSPUC(SEXP X1SEXP, SEXP r1SEXP, SEXP X2SEXP, SEXP r2SEXP, SEXP powVSEXP, SEXP npermSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type r1(r1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type powV(powVSEXP);
    Rcpp::traits::input_parameter< int >::type nperm(npermSEXP);
    rcpp_result_gen = Rcpp::wrap(MiSPUC(X1, r1, X2, r2, powV, nperm));
    return rcpp_result_gen;
END_RCPP
}
// BCdist
arma::mat BCdist(arma::mat X, arma::mat weight);
RcppExport SEXP _MiSPU_BCdist(SEXP XSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weight(weightSEXP);
    rcpp_result_gen = Rcpp::wrap(BCdist(X, weight));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MiSPU_GUniFracCpp", (DL_FUNC) &_MiSPU_GUniFracCpp, 2},
    {"_MiSPU_GUniFracCpp2", (DL_FUNC) &_MiSPU_GUniFracCpp2, 3},
    {"_MiSPU_MiSPUC", (DL_FUNC) &_MiSPU_MiSPUC, 6},
    {"_MiSPU_BCdist", (DL_FUNC) &_MiSPU_BCdist, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_MiSPU(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
