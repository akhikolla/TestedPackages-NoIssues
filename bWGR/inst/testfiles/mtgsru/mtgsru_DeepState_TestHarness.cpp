// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mtgsru_DeepState_TestHarness_generation.cpp and mtgsru_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP mtgsru(NumericMatrix Y, NumericMatrix X, NumericMatrix b, NumericMatrix vb, NumericVector ve, NumericMatrix iG, int maxit);

TEST(bWGR_deepstate_test,mtgsru_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix Y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Y,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/Y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Y values: "<< Y << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  qs::c_qsave(X,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/X.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  NumericMatrix b  = RcppDeepState_NumericMatrix();
  qs::c_qsave(b,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/b.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericMatrix vb  = RcppDeepState_NumericMatrix();
  qs::c_qsave(vb,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/vb.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vb values: "<< vb << std::endl;
  NumericVector ve  = RcppDeepState_NumericVector();
  qs::c_qsave(ve,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/ve.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ve values: "<< ve << std::endl;
  NumericMatrix iG  = RcppDeepState_NumericMatrix();
  qs::c_qsave(iG,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/iG.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iG values: "<< iG << std::endl;
  IntegerVector maxit(1);
  maxit[0]  = RcppDeepState_int();
  qs::c_qsave(maxit,"/home/akhila/fuzzer_packages/fuzzedpackages/bWGR/inst/testfiles/mtgsru/inputs/maxit.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxit values: "<< maxit << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mtgsru(Y,X,b,vb,ve,iG,maxit[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
