// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// FWT2_DeepState_TestHarness_generation.cpp and FWT2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double FWT2(double w, double RA, double g0, double g1, double shape1, double shape2, double RQ);

TEST(vlad_deepstate_test,FWT2_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector w(1);
  w[0]  = RcppDeepState_double();
  qs::c_qsave(w,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/w.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  NumericVector RA(1);
  RA[0]  = RcppDeepState_double();
  qs::c_qsave(RA,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/RA.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RA values: "<< RA << std::endl;
  NumericVector g0(1);
  g0[0]  = RcppDeepState_double();
  qs::c_qsave(g0,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/g0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g0 values: "<< g0 << std::endl;
  NumericVector g1(1);
  g1[0]  = RcppDeepState_double();
  qs::c_qsave(g1,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/g1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g1 values: "<< g1 << std::endl;
  NumericVector shape1(1);
  shape1[0]  = RcppDeepState_double();
  qs::c_qsave(shape1,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/shape1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape1 values: "<< shape1 << std::endl;
  NumericVector shape2(1);
  shape2[0]  = RcppDeepState_double();
  qs::c_qsave(shape2,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/shape2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape2 values: "<< shape2 << std::endl;
  NumericVector RQ(1);
  RQ[0]  = RcppDeepState_double();
  qs::c_qsave(RQ,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/FWT2/inputs/RQ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RQ values: "<< RQ << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    FWT2(w[0],RA[0],g0[0],g1[0],shape1[0],shape2[0],RQ[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
