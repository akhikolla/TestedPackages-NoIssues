// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// racusum_beta_arl_sim_DeepState_TestHarness_generation.cpp and racusum_beta_arl_sim_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int racusum_beta_arl_sim(int r, double shape1, double shape2, NumericVector coeff, double h, double RA, int rs, double RQ);

TEST(vlad_deepstate_test,racusum_beta_arl_sim_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector r(1);
  r[0]  = RcppDeepState_int();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  NumericVector shape1(1);
  shape1[0]  = RcppDeepState_double();
  qs::c_qsave(shape1,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/shape1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape1 values: "<< shape1 << std::endl;
  NumericVector shape2(1);
  shape2[0]  = RcppDeepState_double();
  qs::c_qsave(shape2,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/shape2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape2 values: "<< shape2 << std::endl;
  NumericVector coeff  = RcppDeepState_NumericVector();
  qs::c_qsave(coeff,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/coeff.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "coeff values: "<< coeff << std::endl;
  NumericVector h(1);
  h[0]  = RcppDeepState_double();
  qs::c_qsave(h,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/h.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h values: "<< h << std::endl;
  NumericVector RA(1);
  RA[0]  = RcppDeepState_double();
  qs::c_qsave(RA,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/RA.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RA values: "<< RA << std::endl;
  IntegerVector rs(1);
  rs[0]  = RcppDeepState_int();
  qs::c_qsave(rs,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/rs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rs values: "<< rs << std::endl;
  NumericVector RQ(1);
  RQ[0]  = RcppDeepState_double();
  qs::c_qsave(RQ,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_sim/inputs/RQ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RQ values: "<< RQ << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    racusum_beta_arl_sim(r[0],shape1[0],shape2[0],coeff,h[0],RA[0],rs[0],RQ[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
