// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// racusum_beta_arl_mc_DeepState_TestHarness_generation.cpp and racusum_beta_arl_mc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double racusum_beta_arl_mc(double h, double RA, double g0, double g1, double shape1, double shape2, int r, int method, double RQ);

TEST(vlad_deepstate_test,racusum_beta_arl_mc_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector h(1);
  h[0]  = RcppDeepState_double();
  qs::c_qsave(h,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/h.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h values: "<< h << std::endl;
  NumericVector RA(1);
  RA[0]  = RcppDeepState_double();
  qs::c_qsave(RA,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/RA.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RA values: "<< RA << std::endl;
  NumericVector g0(1);
  g0[0]  = RcppDeepState_double();
  qs::c_qsave(g0,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/g0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g0 values: "<< g0 << std::endl;
  NumericVector g1(1);
  g1[0]  = RcppDeepState_double();
  qs::c_qsave(g1,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/g1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g1 values: "<< g1 << std::endl;
  NumericVector shape1(1);
  shape1[0]  = RcppDeepState_double();
  qs::c_qsave(shape1,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/shape1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape1 values: "<< shape1 << std::endl;
  NumericVector shape2(1);
  shape2[0]  = RcppDeepState_double();
  qs::c_qsave(shape2,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/shape2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape2 values: "<< shape2 << std::endl;
  IntegerVector r(1);
  r[0]  = RcppDeepState_int();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  IntegerVector method(1);
  method[0]  = RcppDeepState_int();
  qs::c_qsave(method,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/method.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "method values: "<< method << std::endl;
  NumericVector RQ(1);
  RQ[0]  = RcppDeepState_double();
  qs::c_qsave(RQ,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_beta_arl_mc/inputs/RQ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RQ values: "<< RQ << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    racusum_beta_arl_mc(h[0],RA[0],g0[0],g1[0],shape1[0],shape2[0],r[0],method[0],RQ[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
