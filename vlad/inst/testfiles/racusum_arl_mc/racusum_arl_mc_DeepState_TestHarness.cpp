// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// racusum_arl_mc_DeepState_TestHarness_generation.cpp and racusum_arl_mc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double racusum_arl_mc(NumericMatrix pmix, double RA, double RQ, double h, double scaling, int rounding, int method);

TEST(vlad_deepstate_test,racusum_arl_mc_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix pmix  = RcppDeepState_NumericMatrix();
  qs::c_qsave(pmix,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/pmix.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pmix values: "<< pmix << std::endl;
  NumericVector RA(1);
  RA[0]  = RcppDeepState_double();
  qs::c_qsave(RA,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/RA.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RA values: "<< RA << std::endl;
  NumericVector RQ(1);
  RQ[0]  = RcppDeepState_double();
  qs::c_qsave(RQ,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/RQ.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RQ values: "<< RQ << std::endl;
  NumericVector h(1);
  h[0]  = RcppDeepState_double();
  qs::c_qsave(h,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/h.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "h values: "<< h << std::endl;
  NumericVector scaling(1);
  scaling[0]  = RcppDeepState_double();
  qs::c_qsave(scaling,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/scaling.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "scaling values: "<< scaling << std::endl;
  IntegerVector rounding(1);
  rounding[0]  = RcppDeepState_int();
  qs::c_qsave(rounding,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/rounding.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rounding values: "<< rounding << std::endl;
  IntegerVector method(1);
  method[0]  = RcppDeepState_int();
  qs::c_qsave(method,"/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/racusum_arl_mc/inputs/method.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "method values: "<< method << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    racusum_arl_mc(pmix,RA[0],RQ[0],h[0],scaling[0],rounding[0],method[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
