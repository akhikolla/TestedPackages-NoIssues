// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// integ_t62_DeepState_TestHarness_generation.cpp and integ_t62_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double integ_t62(double xl, double xu, int j, double loc, double RA, double RQ, double g0, double g1, double shape1, double shape2);

TEST(vlad_deepstate_test,integ_t62_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector xl(1);
  xl[0]  = RcppDeepState_double();
  std::string xl_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xl.qs";
  qs::c_qsave(xl,xl_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xl values: "<< xl << std::endl;
  NumericVector xu(1);
  xu[0]  = RcppDeepState_double();
  std::string xu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xu.qs";
  qs::c_qsave(xu,xu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xu values: "<< xu << std::endl;
  IntegerVector j(1);
  j[0]  = RcppDeepState_int();
  std::string j_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_j.qs";
  qs::c_qsave(j,j_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "j values: "<< j << std::endl;
  NumericVector loc(1);
  loc[0]  = RcppDeepState_double();
  std::string loc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_loc.qs";
  qs::c_qsave(loc,loc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "loc values: "<< loc << std::endl;
  NumericVector RA(1);
  RA[0]  = RcppDeepState_double();
  std::string RA_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_RA.qs";
  qs::c_qsave(RA,RA_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RA values: "<< RA << std::endl;
  NumericVector RQ(1);
  RQ[0]  = RcppDeepState_double();
  std::string RQ_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_RQ.qs";
  qs::c_qsave(RQ,RQ_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RQ values: "<< RQ << std::endl;
  NumericVector g0(1);
  g0[0]  = RcppDeepState_double();
  std::string g0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_g0.qs";
  qs::c_qsave(g0,g0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g0 values: "<< g0 << std::endl;
  NumericVector g1(1);
  g1[0]  = RcppDeepState_double();
  std::string g1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_g1.qs";
  qs::c_qsave(g1,g1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g1 values: "<< g1 << std::endl;
  NumericVector shape1(1);
  shape1[0]  = RcppDeepState_double();
  std::string shape1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_shape1.qs";
  qs::c_qsave(shape1,shape1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape1 values: "<< shape1 << std::endl;
  NumericVector shape2(1);
  shape2[0]  = RcppDeepState_double();
  std::string shape2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vlad/inst/testfiles/integ_t62/libFuzzer_integ_t62/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_shape2.qs";
  qs::c_qsave(shape2,shape2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape2 values: "<< shape2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    integ_t62(xl[0],xu[0],j[0],loc[0],RA[0],RQ[0],g0[0],g1[0],shape1[0],shape2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
