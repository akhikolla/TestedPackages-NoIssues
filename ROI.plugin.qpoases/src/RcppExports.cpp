// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// qproblemb
SEXP qproblemb(int number_of_varibales, int hessian_type, int alloc_dense_matrix);
RcppExport SEXP _ROI_plugin_qpoases_qproblemb(SEXP number_of_varibalesSEXP, SEXP hessian_typeSEXP, SEXP alloc_dense_matrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type number_of_varibales(number_of_varibalesSEXP);
    Rcpp::traits::input_parameter< int >::type hessian_type(hessian_typeSEXP);
    Rcpp::traits::input_parameter< int >::type alloc_dense_matrix(alloc_dense_matrixSEXP);
    rcpp_result_gen = Rcpp::wrap(qproblemb(number_of_varibales, hessian_type, alloc_dense_matrix));
    return rcpp_result_gen;
END_RCPP
}
// qproblem
SEXP qproblem(int number_of_varibales, int number_of_constraints, int hessian_type);
RcppExport SEXP _ROI_plugin_qpoases_qproblem(SEXP number_of_varibalesSEXP, SEXP number_of_constraintsSEXP, SEXP hessian_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type number_of_varibales(number_of_varibalesSEXP);
    Rcpp::traits::input_parameter< int >::type number_of_constraints(number_of_constraintsSEXP);
    Rcpp::traits::input_parameter< int >::type hessian_type(hessian_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(qproblem(number_of_varibales, number_of_constraints, hessian_type));
    return rcpp_result_gen;
END_RCPP
}
// sqproblem
SEXP sqproblem(int number_of_varibales, int number_of_constraints, int hessian_type, int alloc_dense_matrix);
RcppExport SEXP _ROI_plugin_qpoases_sqproblem(SEXP number_of_varibalesSEXP, SEXP number_of_constraintsSEXP, SEXP hessian_typeSEXP, SEXP alloc_dense_matrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type number_of_varibales(number_of_varibalesSEXP);
    Rcpp::traits::input_parameter< int >::type number_of_constraints(number_of_constraintsSEXP);
    Rcpp::traits::input_parameter< int >::type hessian_type(hessian_typeSEXP);
    Rcpp::traits::input_parameter< int >::type alloc_dense_matrix(alloc_dense_matrixSEXP);
    rcpp_result_gen = Rcpp::wrap(sqproblem(number_of_varibales, number_of_constraints, hessian_type, alloc_dense_matrix));
    return rcpp_result_gen;
END_RCPP
}
// set_options
SEXP set_options(SEXP r_model, Rcpp::List control);
RcppExport SEXP _ROI_plugin_qpoases_set_options(SEXP r_modelSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(set_options(r_model, control));
    return rcpp_result_gen;
END_RCPP
}
// init_qproblem
SEXP init_qproblem(SEXP r_model, NumericVector r_H, NumericVector r_g, NumericVector r_A, NumericVector r_lb, NumericVector r_ub, NumericVector r_lbA, NumericVector r_ubA, int r_nWSRm, double r_cputime);
RcppExport SEXP _ROI_plugin_qpoases_init_qproblem(SEXP r_modelSEXP, SEXP r_HSEXP, SEXP r_gSEXP, SEXP r_ASEXP, SEXP r_lbSEXP, SEXP r_ubSEXP, SEXP r_lbASEXP, SEXP r_ubASEXP, SEXP r_nWSRmSEXP, SEXP r_cputimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_H(r_HSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_g(r_gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_A(r_ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lb(r_lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ub(r_ubSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lbA(r_lbASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ubA(r_ubASEXP);
    Rcpp::traits::input_parameter< int >::type r_nWSRm(r_nWSRmSEXP);
    Rcpp::traits::input_parameter< double >::type r_cputime(r_cputimeSEXP);
    rcpp_result_gen = Rcpp::wrap(init_qproblem(r_model, r_H, r_g, r_A, r_lb, r_ub, r_lbA, r_ubA, r_nWSRm, r_cputime));
    return rcpp_result_gen;
END_RCPP
}
// init_qproblemb
SEXP init_qproblemb(SEXP r_model, NumericVector r_H, NumericVector r_g, NumericVector r_lb, NumericVector r_ub, int r_nWSRm, double r_cputime);
RcppExport SEXP _ROI_plugin_qpoases_init_qproblemb(SEXP r_modelSEXP, SEXP r_HSEXP, SEXP r_gSEXP, SEXP r_lbSEXP, SEXP r_ubSEXP, SEXP r_nWSRmSEXP, SEXP r_cputimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_H(r_HSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_g(r_gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lb(r_lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ub(r_ubSEXP);
    Rcpp::traits::input_parameter< int >::type r_nWSRm(r_nWSRmSEXP);
    Rcpp::traits::input_parameter< double >::type r_cputime(r_cputimeSEXP);
    rcpp_result_gen = Rcpp::wrap(init_qproblemb(r_model, r_H, r_g, r_lb, r_ub, r_nWSRm, r_cputime));
    return rcpp_result_gen;
END_RCPP
}
// init_sqproblem
SEXP init_sqproblem(SEXP r_model, NumericVector r_H, NumericVector r_g, NumericVector r_A, NumericVector r_lb, NumericVector r_ub, NumericVector r_lbA, NumericVector r_ubA, int r_nWSRm, double r_cputime);
RcppExport SEXP _ROI_plugin_qpoases_init_sqproblem(SEXP r_modelSEXP, SEXP r_HSEXP, SEXP r_gSEXP, SEXP r_ASEXP, SEXP r_lbSEXP, SEXP r_ubSEXP, SEXP r_lbASEXP, SEXP r_ubASEXP, SEXP r_nWSRmSEXP, SEXP r_cputimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_H(r_HSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_g(r_gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_A(r_ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lb(r_lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ub(r_ubSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lbA(r_lbASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ubA(r_ubASEXP);
    Rcpp::traits::input_parameter< int >::type r_nWSRm(r_nWSRmSEXP);
    Rcpp::traits::input_parameter< double >::type r_cputime(r_cputimeSEXP);
    rcpp_result_gen = Rcpp::wrap(init_sqproblem(r_model, r_H, r_g, r_A, r_lb, r_ub, r_lbA, r_ubA, r_nWSRm, r_cputime));
    return rcpp_result_gen;
END_RCPP
}
// hotstart_qproblem
SEXP hotstart_qproblem(SEXP r_model, NumericVector r_g, NumericVector r_lb, NumericVector r_ub, NumericVector r_lbA, NumericVector r_ubA, int r_nWSR);
RcppExport SEXP _ROI_plugin_qpoases_hotstart_qproblem(SEXP r_modelSEXP, SEXP r_gSEXP, SEXP r_lbSEXP, SEXP r_ubSEXP, SEXP r_lbASEXP, SEXP r_ubASEXP, SEXP r_nWSRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_g(r_gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lb(r_lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ub(r_ubSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lbA(r_lbASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ubA(r_ubASEXP);
    Rcpp::traits::input_parameter< int >::type r_nWSR(r_nWSRSEXP);
    rcpp_result_gen = Rcpp::wrap(hotstart_qproblem(r_model, r_g, r_lb, r_ub, r_lbA, r_ubA, r_nWSR));
    return rcpp_result_gen;
END_RCPP
}
// hotstart_qproblemb
SEXP hotstart_qproblemb(SEXP r_model, NumericVector r_g, NumericVector r_lb, NumericVector r_ub, int r_nWSR);
RcppExport SEXP _ROI_plugin_qpoases_hotstart_qproblemb(SEXP r_modelSEXP, SEXP r_gSEXP, SEXP r_lbSEXP, SEXP r_ubSEXP, SEXP r_nWSRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_g(r_gSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_lb(r_lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_ub(r_ubSEXP);
    Rcpp::traits::input_parameter< int >::type r_nWSR(r_nWSRSEXP);
    rcpp_result_gen = Rcpp::wrap(hotstart_qproblemb(r_model, r_g, r_lb, r_ub, r_nWSR));
    return rcpp_result_gen;
END_RCPP
}
// print_options
SEXP print_options(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_print_options(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(print_options(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_objval
double get_objval(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_objval(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_objval(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_variables
int get_number_of_variables(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_variables(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_variables(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_free_variables
int get_number_of_free_variables(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_free_variables(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_free_variables(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_fixed_variables
int get_number_of_fixed_variables(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_fixed_variables(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_fixed_variables(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_constraints
int get_number_of_constraints(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_constraints(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_constraints(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_equality_constraints
int get_number_of_equality_constraints(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_equality_constraints(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_equality_constraints(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_active_constraints
int get_number_of_active_constraints(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_active_constraints(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_active_constraints(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_number_of_inactive_constraints
int get_number_of_inactive_constraints(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_number_of_inactive_constraints(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_number_of_inactive_constraints(r_model));
    return rcpp_result_gen;
END_RCPP
}
// is_initialised
int is_initialised(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_is_initialised(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(is_initialised(r_model));
    return rcpp_result_gen;
END_RCPP
}
// is_solved
int is_solved(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_is_solved(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(is_solved(r_model));
    return rcpp_result_gen;
END_RCPP
}
// is_infeasible
int is_infeasible(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_is_infeasible(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(is_infeasible(r_model));
    return rcpp_result_gen;
END_RCPP
}
// is_unbounded
int is_unbounded(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_is_unbounded(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(is_unbounded(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_primal_solution
SEXP get_primal_solution(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_primal_solution(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_primal_solution(r_model));
    return rcpp_result_gen;
END_RCPP
}
// get_dual_solution
SEXP get_dual_solution(SEXP r_model);
RcppExport SEXP _ROI_plugin_qpoases_get_dual_solution(SEXP r_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_model(r_modelSEXP);
    rcpp_result_gen = Rcpp::wrap(get_dual_solution(r_model));
    return rcpp_result_gen;
END_RCPP
}
// read_oqp_dimensions
SEXP read_oqp_dimensions(std::string r_path);
RcppExport SEXP _ROI_plugin_qpoases_read_oqp_dimensions(SEXP r_pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type r_path(r_pathSEXP);
    rcpp_result_gen = Rcpp::wrap(read_oqp_dimensions(r_path));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ROI_plugin_qpoases_qproblemb", (DL_FUNC) &_ROI_plugin_qpoases_qproblemb, 3},
    {"_ROI_plugin_qpoases_qproblem", (DL_FUNC) &_ROI_plugin_qpoases_qproblem, 3},
    {"_ROI_plugin_qpoases_sqproblem", (DL_FUNC) &_ROI_plugin_qpoases_sqproblem, 4},
    {"_ROI_plugin_qpoases_set_options", (DL_FUNC) &_ROI_plugin_qpoases_set_options, 2},
    {"_ROI_plugin_qpoases_init_qproblem", (DL_FUNC) &_ROI_plugin_qpoases_init_qproblem, 10},
    {"_ROI_plugin_qpoases_init_qproblemb", (DL_FUNC) &_ROI_plugin_qpoases_init_qproblemb, 7},
    {"_ROI_plugin_qpoases_init_sqproblem", (DL_FUNC) &_ROI_plugin_qpoases_init_sqproblem, 10},
    {"_ROI_plugin_qpoases_hotstart_qproblem", (DL_FUNC) &_ROI_plugin_qpoases_hotstart_qproblem, 7},
    {"_ROI_plugin_qpoases_hotstart_qproblemb", (DL_FUNC) &_ROI_plugin_qpoases_hotstart_qproblemb, 5},
    {"_ROI_plugin_qpoases_print_options", (DL_FUNC) &_ROI_plugin_qpoases_print_options, 1},
    {"_ROI_plugin_qpoases_get_objval", (DL_FUNC) &_ROI_plugin_qpoases_get_objval, 1},
    {"_ROI_plugin_qpoases_get_number_of_variables", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_variables, 1},
    {"_ROI_plugin_qpoases_get_number_of_free_variables", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_free_variables, 1},
    {"_ROI_plugin_qpoases_get_number_of_fixed_variables", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_fixed_variables, 1},
    {"_ROI_plugin_qpoases_get_number_of_constraints", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_constraints, 1},
    {"_ROI_plugin_qpoases_get_number_of_equality_constraints", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_equality_constraints, 1},
    {"_ROI_plugin_qpoases_get_number_of_active_constraints", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_active_constraints, 1},
    {"_ROI_plugin_qpoases_get_number_of_inactive_constraints", (DL_FUNC) &_ROI_plugin_qpoases_get_number_of_inactive_constraints, 1},
    {"_ROI_plugin_qpoases_is_initialised", (DL_FUNC) &_ROI_plugin_qpoases_is_initialised, 1},
    {"_ROI_plugin_qpoases_is_solved", (DL_FUNC) &_ROI_plugin_qpoases_is_solved, 1},
    {"_ROI_plugin_qpoases_is_infeasible", (DL_FUNC) &_ROI_plugin_qpoases_is_infeasible, 1},
    {"_ROI_plugin_qpoases_is_unbounded", (DL_FUNC) &_ROI_plugin_qpoases_is_unbounded, 1},
    {"_ROI_plugin_qpoases_get_primal_solution", (DL_FUNC) &_ROI_plugin_qpoases_get_primal_solution, 1},
    {"_ROI_plugin_qpoases_get_dual_solution", (DL_FUNC) &_ROI_plugin_qpoases_get_dual_solution, 1},
    {"_ROI_plugin_qpoases_read_oqp_dimensions", (DL_FUNC) &_ROI_plugin_qpoases_read_oqp_dimensions, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_ROI_plugin_qpoases(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
