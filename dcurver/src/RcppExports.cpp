// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ddc
NumericVector ddc(NumericVector x, NumericVector phi);
RcppExport SEXP _dcurver_ddc(SEXP xSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(ddc(x, phi));
    return rcpp_result_gen;
END_RCPP
}
// rdc
NumericVector rdc(int n, NumericVector phi);
RcppExport SEXP _dcurver_rdc(SEXP nSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(rdc(n, phi));
    return rcpp_result_gen;
END_RCPP
}
// dc_grad
NumericVector dc_grad(NumericVector x, NumericVector phi);
RcppExport SEXP _dcurver_dc_grad(SEXP xSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(dc_grad(x, phi));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dcurver_ddc", (DL_FUNC) &_dcurver_ddc, 2},
    {"_dcurver_rdc", (DL_FUNC) &_dcurver_rdc, 2},
    {"_dcurver_dc_grad", (DL_FUNC) &_dcurver_dc_grad, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_dcurver(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
