// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// src_EED_Calc_Overall_StatUncertainty_DeepState_TestHarness_generation.cpp and src_EED_Calc_Overall_StatUncertainty_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix src_EED_Calc_Overall_StatUncertainty(NumericMatrix M_Simul, int Ndata, int Nsimul, int MinNbSimExp);

TEST(Luminescence_deepstate_test,src_EED_Calc_Overall_StatUncertainty_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix M_Simul  = RcppDeepState_NumericMatrix();
  qs::c_qsave(M_Simul,"/home/akhila/fuzzer_packages/fuzzedpackages/Luminescence/inst/testfiles/src_EED_Calc_Overall_StatUncertainty/inputs/M_Simul.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M_Simul values: "<< M_Simul << std::endl;
  IntegerVector Ndata(1);
  Ndata[0]  = RcppDeepState_int();
  qs::c_qsave(Ndata,"/home/akhila/fuzzer_packages/fuzzedpackages/Luminescence/inst/testfiles/src_EED_Calc_Overall_StatUncertainty/inputs/Ndata.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ndata values: "<< Ndata << std::endl;
  IntegerVector Nsimul(1);
  Nsimul[0]  = RcppDeepState_int();
  qs::c_qsave(Nsimul,"/home/akhila/fuzzer_packages/fuzzedpackages/Luminescence/inst/testfiles/src_EED_Calc_Overall_StatUncertainty/inputs/Nsimul.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nsimul values: "<< Nsimul << std::endl;
  IntegerVector MinNbSimExp(1);
  MinNbSimExp[0]  = RcppDeepState_int();
  qs::c_qsave(MinNbSimExp,"/home/akhila/fuzzer_packages/fuzzedpackages/Luminescence/inst/testfiles/src_EED_Calc_Overall_StatUncertainty/inputs/MinNbSimExp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "MinNbSimExp values: "<< MinNbSimExp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    src_EED_Calc_Overall_StatUncertainty(M_Simul,Ndata[0],Nsimul[0],MinNbSimExp[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
