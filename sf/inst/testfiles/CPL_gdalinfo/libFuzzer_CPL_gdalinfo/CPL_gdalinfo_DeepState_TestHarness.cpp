// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// CPL_gdalinfo_DeepState_TestHarness_generation.cpp and CPL_gdalinfo_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::CharacterVector CPL_gdalinfo(Rcpp::CharacterVector obj, Rcpp::CharacterVector options, Rcpp::CharacterVector oo);

TEST(sf_deepstate_test,CPL_gdalinfo_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector obj  = RcppDeepState_CharacterVector();
  std::string obj_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sf/inst/testfiles/CPL_gdalinfo/libFuzzer_CPL_gdalinfo/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_obj.qs";
  qs::c_qsave(obj,obj_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "obj values: "<< obj << std::endl;
  CharacterVector options  = RcppDeepState_CharacterVector();
  std::string options_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sf/inst/testfiles/CPL_gdalinfo/libFuzzer_CPL_gdalinfo/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_options.qs";
  qs::c_qsave(options,options_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "options values: "<< options << std::endl;
  CharacterVector oo  = RcppDeepState_CharacterVector();
  std::string oo_t = "/home/akhila/fuzzer_packages/fuzzedpackages/sf/inst/testfiles/CPL_gdalinfo/libFuzzer_CPL_gdalinfo/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_oo.qs";
  qs::c_qsave(oo,oo_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "oo values: "<< oo << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    CPL_gdalinfo(obj,options,oo);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
