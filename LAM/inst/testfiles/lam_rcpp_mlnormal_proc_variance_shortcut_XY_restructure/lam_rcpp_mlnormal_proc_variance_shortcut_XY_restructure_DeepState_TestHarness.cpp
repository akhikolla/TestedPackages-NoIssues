// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure_DeepState_TestHarness_generation.cpp and lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure(Rcpp::NumericMatrix freq_id, Rcpp::NumericVector y, Rcpp::NumericMatrix X, int G);

TEST(LAM_deepstate_test,lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix freq_id  = RcppDeepState_NumericMatrix();
  qs::c_qsave(freq_id,"/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/inputs/freq_id.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "freq_id values: "<< freq_id << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  qs::c_qsave(X,"/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/inputs/X.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector G(1);
  G[0]  = RcppDeepState_int();
  qs::c_qsave(G,"/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/inputs/G.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "G values: "<< G << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure(freq_id,y,X,G[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
