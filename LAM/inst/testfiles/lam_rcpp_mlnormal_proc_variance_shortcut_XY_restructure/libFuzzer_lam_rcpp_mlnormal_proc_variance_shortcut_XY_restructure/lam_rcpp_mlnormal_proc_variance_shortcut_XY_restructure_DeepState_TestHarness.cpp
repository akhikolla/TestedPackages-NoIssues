// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure_DeepState_TestHarness_generation.cpp and lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure(Rcpp::NumericMatrix freq_id, Rcpp::NumericVector y, Rcpp::NumericMatrix X, int G);

TEST(LAM_deepstate_test,lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix freq_id  = RcppDeepState_NumericMatrix();
  std::string freq_id_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libFuzzer_lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_freq_id.qs";
  qs::c_qsave(freq_id,freq_id_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "freq_id values: "<< freq_id << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libFuzzer_lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libFuzzer_lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector G(1);
  G[0]  = RcppDeepState_int();
  std::string G_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LAM/inst/testfiles/lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libFuzzer_lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_G.qs";
  qs::c_qsave(G,G_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "G values: "<< G << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    lam_rcpp_mlnormal_proc_variance_shortcut_XY_restructure(freq_id,y,X,G[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
