// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// PoiSMMsliceInner
List PoiSMMsliceInner(int numMCMC, int ncX, arma::vec y, arma::mat Cmat, arma::vec CTy, double sigmabetaHYP, double AHYP, int msgCode);
RcppExport SEXP _densEstBayes_PoiSMMsliceInner(SEXP numMCMCSEXP, SEXP ncXSEXP, SEXP ySEXP, SEXP CmatSEXP, SEXP CTySEXP, SEXP sigmabetaHYPSEXP, SEXP AHYPSEXP, SEXP msgCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numMCMC(numMCMCSEXP);
    Rcpp::traits::input_parameter< int >::type ncX(ncXSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Cmat(CmatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type CTy(CTySEXP);
    Rcpp::traits::input_parameter< double >::type sigmabetaHYP(sigmabetaHYPSEXP);
    Rcpp::traits::input_parameter< double >::type AHYP(AHYPSEXP);
    Rcpp::traits::input_parameter< int >::type msgCode(msgCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(PoiSMMsliceInner(numMCMC, ncX, y, Cmat, CTy, sigmabetaHYP, AHYP, msgCode));
    return rcpp_result_gen;
END_RCPP
}
// linbin
NumericVector linbin(arma::vec x, arma::vec gpoints, bool truncate);
RcppExport SEXP _densEstBayes_linbin(SEXP xSEXP, SEXP gpointsSEXP, SEXP truncateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gpoints(gpointsSEXP);
    Rcpp::traits::input_parameter< bool >::type truncate(truncateSEXP);
    rcpp_result_gen = Rcpp::wrap(linbin(x, gpoints, truncate));
    return rcpp_result_gen;
END_RCPP
}
// logUnnDens
double logUnnDens(int j, arma::vec betauj, arma::vec betauNotj, arma::mat Cmat, arma::vec CTy, arma::vec sigsqbetau);
RcppExport SEXP _densEstBayes_logUnnDens(SEXP jSEXP, SEXP betaujSEXP, SEXP betauNotjSEXP, SEXP CmatSEXP, SEXP CTySEXP, SEXP sigsqbetauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betauj(betaujSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betauNotj(betauNotjSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Cmat(CmatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type CTy(CTySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigsqbetau(sigsqbetauSEXP);
    rcpp_result_gen = Rcpp::wrap(logUnnDens(j, betauj, betauNotj, Cmat, CTy, sigsqbetau));
    return rcpp_result_gen;
END_RCPP
}
// printPercMsgs
int printPercMsgs(int msgCode, int loopSize, int iLoop, int percCnt);
RcppExport SEXP _densEstBayes_printPercMsgs(SEXP msgCodeSEXP, SEXP loopSizeSEXP, SEXP iLoopSEXP, SEXP percCntSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type msgCode(msgCodeSEXP);
    Rcpp::traits::input_parameter< int >::type loopSize(loopSizeSEXP);
    Rcpp::traits::input_parameter< int >::type iLoop(iLoopSEXP);
    Rcpp::traits::input_parameter< int >::type percCnt(percCntSEXP);
    rcpp_result_gen = Rcpp::wrap(printPercMsgs(msgCode, loopSize, iLoop, percCnt));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4PoissonSimpleMixedModel_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_densEstBayes_PoiSMMsliceInner", (DL_FUNC) &_densEstBayes_PoiSMMsliceInner, 8},
    {"_densEstBayes_linbin", (DL_FUNC) &_densEstBayes_linbin, 3},
    {"_densEstBayes_logUnnDens", (DL_FUNC) &_densEstBayes_logUnnDens, 6},
    {"_densEstBayes_printPercMsgs", (DL_FUNC) &_densEstBayes_printPercMsgs, 4},
    {"_rcpp_module_boot_stan_fit4PoissonSimpleMixedModel_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4PoissonSimpleMixedModel_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_densEstBayes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
