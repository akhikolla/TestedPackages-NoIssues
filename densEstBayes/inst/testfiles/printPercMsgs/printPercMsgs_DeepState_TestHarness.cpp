// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// printPercMsgs_DeepState_TestHarness_generation.cpp and printPercMsgs_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int printPercMsgs(int msgCode, int loopSize, int iLoop, int percCnt);

TEST(densEstBayes_deepstate_test,printPercMsgs_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector msgCode(1);
  msgCode[0]  = RcppDeepState_int();
  qs::c_qsave(msgCode,"/home/akhila/fuzzer_packages/fuzzedpackages/densEstBayes/inst/testfiles/printPercMsgs/inputs/msgCode.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "msgCode values: "<< msgCode << std::endl;
  IntegerVector loopSize(1);
  loopSize[0]  = RcppDeepState_int();
  qs::c_qsave(loopSize,"/home/akhila/fuzzer_packages/fuzzedpackages/densEstBayes/inst/testfiles/printPercMsgs/inputs/loopSize.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "loopSize values: "<< loopSize << std::endl;
  IntegerVector iLoop(1);
  iLoop[0]  = RcppDeepState_int();
  qs::c_qsave(iLoop,"/home/akhila/fuzzer_packages/fuzzedpackages/densEstBayes/inst/testfiles/printPercMsgs/inputs/iLoop.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iLoop values: "<< iLoop << std::endl;
  IntegerVector percCnt(1);
  percCnt[0]  = RcppDeepState_int();
  qs::c_qsave(percCnt,"/home/akhila/fuzzer_packages/fuzzedpackages/densEstBayes/inst/testfiles/printPercMsgs/inputs/percCnt.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "percCnt values: "<< percCnt << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    printPercMsgs(msgCode[0],loopSize[0],iLoop[0],percCnt[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
