// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// warplda_create_DeepState_TestHarness_generation.cpp and warplda_create_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP warplda_create(int n_topics, double doc_topic_prior, double topic_word_prior);

TEST(text2vec_deepstate_test,warplda_create_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector n_topics(1);
  n_topics[0]  = RcppDeepState_int();
  qs::c_qsave(n_topics,"/home/akhila/fuzzer_packages/fuzzedpackages/text2vec/inst/testfiles/warplda_create/inputs/n_topics.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_topics values: "<< n_topics << std::endl;
  NumericVector doc_topic_prior(1);
  doc_topic_prior[0]  = RcppDeepState_double();
  qs::c_qsave(doc_topic_prior,"/home/akhila/fuzzer_packages/fuzzedpackages/text2vec/inst/testfiles/warplda_create/inputs/doc_topic_prior.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "doc_topic_prior values: "<< doc_topic_prior << std::endl;
  NumericVector topic_word_prior(1);
  topic_word_prior[0]  = RcppDeepState_double();
  qs::c_qsave(topic_word_prior,"/home/akhila/fuzzer_packages/fuzzedpackages/text2vec/inst/testfiles/warplda_create/inputs/topic_word_prior.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "topic_word_prior values: "<< topic_word_prior << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    warplda_create(n_topics[0],doc_topic_prior[0],topic_word_prior[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
