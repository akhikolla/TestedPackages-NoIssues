// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fastPdist2_DeepState_TestHarness_generation.cpp and fastPdist2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix fastPdist2(NumericMatrix Ar, NumericMatrix Br);

TEST(hypervolume_deepstate_test,fastPdist2_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix Ar  = RcppDeepState_NumericMatrix();
  std::string Ar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/hypervolume/inst/testfiles/fastPdist2/libFuzzer_fastPdist2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Ar.qs";
  qs::c_qsave(Ar,Ar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ar values: "<< Ar << std::endl;
  NumericMatrix Br  = RcppDeepState_NumericMatrix();
  std::string Br_t = "/home/akhila/fuzzer_packages/fuzzedpackages/hypervolume/inst/testfiles/fastPdist2/libFuzzer_fastPdist2/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Br.qs";
  qs::c_qsave(Br,Br_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Br values: "<< Br << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fastPdist2(Ar,Br);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
