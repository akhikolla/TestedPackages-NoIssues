// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// esf_nmst_sum_matrix_DeepState_TestHarness_generation.cpp and esf_nmst_sum_matrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List esf_nmst_sum_matrix(NumericVector epsi, int order);

TEST(tmt_deepstate_test,esf_nmst_sum_matrix_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector epsi  = RcppDeepState_NumericVector();
  std::string epsi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tmt/inst/testfiles/esf_nmst_sum_matrix/libFuzzer_esf_nmst_sum_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_epsi.qs";
  qs::c_qsave(epsi,epsi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "epsi values: "<< epsi << std::endl;
  IntegerVector order(1);
  order[0]  = RcppDeepState_int();
  std::string order_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tmt/inst/testfiles/esf_nmst_sum_matrix/libFuzzer_esf_nmst_sum_matrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_order.qs";
  qs::c_qsave(order,order_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "order values: "<< order << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    esf_nmst_sum_matrix(epsi,order[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
