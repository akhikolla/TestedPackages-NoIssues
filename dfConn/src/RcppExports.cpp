// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// myseq
arma::uvec myseq(int start, int end, int by);
RcppExport SEXP _dfConn_myseq(SEXP startSEXP, SEXP endSEXP, SEXP bySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type by(bySEXP);
    rcpp_result_gen = Rcpp::wrap(myseq(start, end, by));
    return rcpp_result_gen;
END_RCPP
}
// boot_func
SEXP boot_func(int Boot, arma::umat sw_mat, arma::mat Z_mat, arma::mat L);
RcppExport SEXP _dfConn_boot_func(SEXP BootSEXP, SEXP sw_matSEXP, SEXP Z_matSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Boot(BootSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type sw_mat(sw_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z_mat(Z_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(boot_func(Boot, sw_mat, Z_mat, L));
    return rcpp_result_gen;
END_RCPP
}
// mm_func
Rcpp::NumericVector mm_func(arma::mat Xjj, Function F, int mm, int n_boot, int window_size, int n_sig);
RcppExport SEXP _dfConn_mm_func(SEXP XjjSEXP, SEXP FSEXP, SEXP mmSEXP, SEXP n_bootSEXP, SEXP window_sizeSEXP, SEXP n_sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xjj(XjjSEXP);
    Rcpp::traits::input_parameter< Function >::type F(FSEXP);
    Rcpp::traits::input_parameter< int >::type mm(mmSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type n_sig(n_sigSEXP);
    rcpp_result_gen = Rcpp::wrap(mm_func(Xjj, F, mm, n_boot, window_size, n_sig));
    return rcpp_result_gen;
END_RCPP
}
// boot_cjj_func
arma::mat boot_cjj_func(arma::mat Xjj, Function MLPB3, int boot_rep, int n_boot, int n_sig, int window_size);
RcppExport SEXP _dfConn_boot_cjj_func(SEXP XjjSEXP, SEXP MLPB3SEXP, SEXP boot_repSEXP, SEXP n_bootSEXP, SEXP n_sigSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xjj(XjjSEXP);
    Rcpp::traits::input_parameter< Function >::type MLPB3(MLPB3SEXP);
    Rcpp::traits::input_parameter< int >::type boot_rep(boot_repSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_sig(n_sigSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(boot_cjj_func(Xjj, MLPB3, boot_rep, n_boot, n_sig, window_size));
    return rcpp_result_gen;
END_RCPP
}
// a_func
arma::rowvec a_func(arma::mat bootjj, int up_limit, int n_sig, int window_size);
RcppExport SEXP _dfConn_a_func(SEXP bootjjSEXP, SEXP up_limitSEXP, SEXP n_sigSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type bootjj(bootjjSEXP);
    Rcpp::traits::input_parameter< int >::type up_limit(up_limitSEXP);
    Rcpp::traits::input_parameter< int >::type n_sig(n_sigSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(a_func(bootjj, up_limit, n_sig, window_size));
    return rcpp_result_gen;
END_RCPP
}
// bootcjj
arma::mat bootcjj(arma::mat X, Function MLPB3, int up_limit, int window_size, int boot_rep, int n_boot, int n_sig);
RcppExport SEXP _dfConn_bootcjj(SEXP XSEXP, SEXP MLPB3SEXP, SEXP up_limitSEXP, SEXP window_sizeSEXP, SEXP boot_repSEXP, SEXP n_bootSEXP, SEXP n_sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< Function >::type MLPB3(MLPB3SEXP);
    Rcpp::traits::input_parameter< int >::type up_limit(up_limitSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type boot_rep(boot_repSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_sig(n_sigSEXP);
    rcpp_result_gen = Rcpp::wrap(bootcjj(X, MLPB3, up_limit, window_size, boot_rep, n_boot, n_sig));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dfConn_myseq", (DL_FUNC) &_dfConn_myseq, 3},
    {"_dfConn_boot_func", (DL_FUNC) &_dfConn_boot_func, 4},
    {"_dfConn_mm_func", (DL_FUNC) &_dfConn_mm_func, 6},
    {"_dfConn_boot_cjj_func", (DL_FUNC) &_dfConn_boot_cjj_func, 6},
    {"_dfConn_a_func", (DL_FUNC) &_dfConn_a_func, 4},
    {"_dfConn_bootcjj", (DL_FUNC) &_dfConn_bootcjj, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_dfConn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
