<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./allBinaryTreeShapesReal_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</line>
</preamble>

<pid>964873</pid>
<ppid>964872</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_output/log_23d61a41ba6238524b5d9f475daa4c7604c1f03a/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./allBinaryTreeShapesReal_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_output/23d61a41ba6238524b5d9f475daa4c7604c1f03a.crash</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.028 </time>
</status>

<fatal_signal>
<fatal_signal>
  <tid>1</tid>
  <signo>2</signo>
  <signame>SIGINT</signame>
  <tid>1</tid>
  <sicode>128</sicode>
  <signo>2</signo>
  <siaddr>0x0</siaddr>
  <signame>SIGINT</signame>
  <sicode>128</sicode>
  <siaddr>0x0</siaddr>
  <stack>
  <stack>
    <frame>
      <ip>0x4D4317C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/src/treenomial.so</obj>
      <fn>operator=&lt;arma::Mat&lt;double&gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>SpMat_meat.hpp</file>
      <line>991</line>
    </frame>
    <frame>
      <ip>0x4D4317C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/src/treenomial.so</obj>
      <fn>SpMat&lt;arma::Mat&lt;double&gt; &gt;</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/4.0/RcppArmadillo/include/armadillo_bits</dir>
      <file>SpMat_meat.hpp</file>
      <line>934</line>
    </frame>
    <frame>
      <ip>0x51B2DBA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc-2.31.so</obj>
      <fn>wait4</fn>
      <dir>/build/glibc-ZN95T4/glibc-2.31/posix/../sysdeps/unix/sysv/linux</dir>
      <file>wait4.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x4D4317C</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/src/treenomial.so</obj>
      <fn>wedge(arma::SpMat&lt;double&gt;&amp;, arma::SpMat&lt;double&gt;&amp;)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/src</dir>
      <file>coeffMatrix.h</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x41CCF5</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41CDE4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>

    <frame>
      <ip>0x4D2C8D1</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/src/treenomial.so</obj>
      <fn>allBinaryTreeShapesReal(int) [clone .cold]</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/src</dir>
      <file>allBinTreeShape.cpp</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x409DBA</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_Test_treenomial_deepstate_test_allBinaryTreeShapesReal_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal</dir>
      <file>allBinaryTreeShapesReal_DeepState_TestHarness.cpp</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x409B48</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_Run_treenomial_deepstate_test_allBinaryTreeShapesReal_test()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal</dir>
      <file>allBinaryTreeShapesReal_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41CA68</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41CD09</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41CDE4</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407655</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/treenomial/inst/testfiles/allBinaryTreeShapesReal/allBinaryTreeShapesReal_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:11:13.243 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:11:13.357 </time>
</status>

