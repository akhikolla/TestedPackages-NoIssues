// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rat_DeepState_TestHarness_generation.cpp and rat_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix rat(NumericVector x, double eps, int maxConv);

TEST(fractional_deepstate_test,rat_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/fractional/inst/testfiles/rat/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector eps(1);
  eps[0]  = RcppDeepState_double();
  qs::c_qsave(eps,"/home/akhila/fuzzer_packages/fuzzedpackages/fractional/inst/testfiles/rat/inputs/eps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps values: "<< eps << std::endl;
  IntegerVector maxConv(1);
  maxConv[0]  = RcppDeepState_int();
  qs::c_qsave(maxConv,"/home/akhila/fuzzer_packages/fuzzedpackages/fractional/inst/testfiles/rat/inputs/maxConv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxConv values: "<< maxConv << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rat(x,eps[0],maxConv[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
