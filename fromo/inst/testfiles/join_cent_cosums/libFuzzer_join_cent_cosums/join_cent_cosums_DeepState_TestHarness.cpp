// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// join_cent_cosums_DeepState_TestHarness_generation.cpp and join_cent_cosums_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix join_cent_cosums(NumericMatrix ret1, NumericMatrix ret2);

TEST(fromo_deepstate_test,join_cent_cosums_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix ret1  = RcppDeepState_NumericMatrix();
  std::string ret1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fromo/inst/testfiles/join_cent_cosums/libFuzzer_join_cent_cosums/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ret1.qs";
  qs::c_qsave(ret1,ret1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ret1 values: "<< ret1 << std::endl;
  NumericMatrix ret2  = RcppDeepState_NumericMatrix();
  std::string ret2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fromo/inst/testfiles/join_cent_cosums/libFuzzer_join_cent_cosums/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ret2.qs";
  qs::c_qsave(ret2,ret2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ret2 values: "<< ret2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    join_cent_cosums(ret1,ret2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
