// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// join_cent_sums_DeepState_TestHarness_generation.cpp and join_cent_sums_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector join_cent_sums(NumericVector ret1, NumericVector ret2);

TEST(fromo_deepstate_test,join_cent_sums_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector ret1  = RcppDeepState_NumericVector();
  qs::c_qsave(ret1,"/home/akhila/fuzzer_packages/fuzzedpackages/fromo/inst/testfiles/join_cent_sums/inputs/ret1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ret1 values: "<< ret1 << std::endl;
  NumericVector ret2  = RcppDeepState_NumericVector();
  qs::c_qsave(ret2,"/home/akhila/fuzzer_packages/fuzzedpackages/fromo/inst/testfiles/join_cent_sums/inputs/ret2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ret2 values: "<< ret2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    join_cent_sums(ret1,ret2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
