// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// plnorm_ssd_DeepState_TestHarness_generation.cpp and plnorm_ssd_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double plnorm_ssd(double q, double meanlog, double sdlog);

TEST(ssdtools_deepstate_test,plnorm_ssd_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector q(1);
  q[0]  = RcppDeepState_double();
  qs::c_qsave(q,"/home/akhila/fuzzer_packages/fuzzedpackages/ssdtools/inst/testfiles/plnorm_ssd/inputs/q.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  NumericVector meanlog(1);
  meanlog[0]  = RcppDeepState_double();
  qs::c_qsave(meanlog,"/home/akhila/fuzzer_packages/fuzzedpackages/ssdtools/inst/testfiles/plnorm_ssd/inputs/meanlog.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "meanlog values: "<< meanlog << std::endl;
  NumericVector sdlog(1);
  sdlog[0]  = RcppDeepState_double();
  qs::c_qsave(sdlog,"/home/akhila/fuzzer_packages/fuzzedpackages/ssdtools/inst/testfiles/plnorm_ssd/inputs/sdlog.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sdlog values: "<< sdlog << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    plnorm_ssd(q[0],meanlog[0],sdlog[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
