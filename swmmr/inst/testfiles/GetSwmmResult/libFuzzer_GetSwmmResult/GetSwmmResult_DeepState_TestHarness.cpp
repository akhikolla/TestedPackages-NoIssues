// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// GetSwmmResult_DeepState_TestHarness_generation.cpp and GetSwmmResult_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector GetSwmmResult(int iType, int iIndex, int vIndex);

TEST(swmmr_deepstate_test,GetSwmmResult_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector iType(1);
  iType[0]  = RcppDeepState_int();
  std::string iType_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swmmr/inst/testfiles/GetSwmmResult/libFuzzer_GetSwmmResult/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_iType.qs";
  qs::c_qsave(iType,iType_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iType values: "<< iType << std::endl;
  IntegerVector iIndex(1);
  iIndex[0]  = RcppDeepState_int();
  std::string iIndex_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swmmr/inst/testfiles/GetSwmmResult/libFuzzer_GetSwmmResult/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_iIndex.qs";
  qs::c_qsave(iIndex,iIndex_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iIndex values: "<< iIndex << std::endl;
  IntegerVector vIndex(1);
  vIndex[0]  = RcppDeepState_int();
  std::string vIndex_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swmmr/inst/testfiles/GetSwmmResult/libFuzzer_GetSwmmResult/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vIndex.qs";
  qs::c_qsave(vIndex,vIndex_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vIndex values: "<< vIndex << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    GetSwmmResult(iType[0],iIndex[0],vIndex[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
