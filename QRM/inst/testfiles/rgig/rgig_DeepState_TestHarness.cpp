// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rgig_DeepState_TestHarness_generation.cpp and rgig_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector rgig(int n, double r, double s, double p, double k1, double k2, double lambda, double chi, double psi, double s1, double s2);

TEST(QRM_deepstate_test,rgig_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector r(1);
  r[0]  = RcppDeepState_double();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  NumericVector s(1);
  s[0]  = RcppDeepState_double();
  qs::c_qsave(s,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/s.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector k1(1);
  k1[0]  = RcppDeepState_double();
  qs::c_qsave(k1,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/k1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k1 values: "<< k1 << std::endl;
  NumericVector k2(1);
  k2[0]  = RcppDeepState_double();
  qs::c_qsave(k2,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/k2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k2 values: "<< k2 << std::endl;
  NumericVector lambda(1);
  lambda[0]  = RcppDeepState_double();
  qs::c_qsave(lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  NumericVector chi(1);
  chi[0]  = RcppDeepState_double();
  qs::c_qsave(chi,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/chi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "chi values: "<< chi << std::endl;
  NumericVector psi(1);
  psi[0]  = RcppDeepState_double();
  qs::c_qsave(psi,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/psi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psi values: "<< psi << std::endl;
  NumericVector s1(1);
  s1[0]  = RcppDeepState_double();
  qs::c_qsave(s1,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/s1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s1 values: "<< s1 << std::endl;
  NumericVector s2(1);
  s2[0]  = RcppDeepState_double();
  qs::c_qsave(s2,"/home/akhila/fuzzer_packages/fuzzedpackages/QRM/inst/testfiles/rgig/inputs/s2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s2 values: "<< s2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rgig(n[0],r[0],s[0],p[0],k1[0],k2[0],lambda[0],chi[0],psi[0],s1[0],s2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
