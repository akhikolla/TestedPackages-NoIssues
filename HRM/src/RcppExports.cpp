// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mmult
Rcpp::NumericMatrix mmult(Rcpp::NumericMatrix m, Rcpp::NumericMatrix v);
RcppExport SEXP _HRM_mmult(SEXP mSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(mmult(m, v));
    return rcpp_result_gen;
END_RCPP
}
// transpose
Rcpp::NumericMatrix transpose(Rcpp::NumericMatrix m);
RcppExport SEXP _HRM_transpose(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(transpose(m));
    return rcpp_result_gen;
END_RCPP
}
// inner
float inner(Rcpp::NumericVector a, Rcpp::NumericVector b);
RcppExport SEXP _HRM_inner(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(inner(a, b));
    return rcpp_result_gen;
END_RCPP
}
// calcUCpp
Rcpp::NumericVector calcUCpp(Rcpp::NumericMatrix dat, float n, Rcpp::NumericMatrix K, Rcpp::NumericVector colmeans);
RcppExport SEXP _HRM_calcUCpp(SEXP datSEXP, SEXP nSEXP, SEXP KSEXP, SEXP colmeansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< float >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type colmeans(colmeansSEXP);
    rcpp_result_gen = Rcpp::wrap(calcUCpp(dat, n, K, colmeans));
    return rcpp_result_gen;
END_RCPP
}
// calcUCppV
Rcpp::NumericVector calcUCppV(Rcpp::NumericVector dat, float n, float mean);
RcppExport SEXP _HRM_calcUCppV(SEXP datSEXP, SEXP nSEXP, SEXP meanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type dat(datSEXP);
    Rcpp::traits::input_parameter< float >::type n(nSEXP);
    Rcpp::traits::input_parameter< float >::type mean(meanSEXP);
    rcpp_result_gen = Rcpp::wrap(calcUCppV(dat, n, mean));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HRM_mmult", (DL_FUNC) &_HRM_mmult, 2},
    {"_HRM_transpose", (DL_FUNC) &_HRM_transpose, 1},
    {"_HRM_inner", (DL_FUNC) &_HRM_inner, 2},
    {"_HRM_calcUCpp", (DL_FUNC) &_HRM_calcUCpp, 4},
    {"_HRM_calcUCppV", (DL_FUNC) &_HRM_calcUCppV, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_HRM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
