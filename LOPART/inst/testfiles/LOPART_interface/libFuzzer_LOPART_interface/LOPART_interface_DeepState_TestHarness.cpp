// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// LOPART_interface_DeepState_TestHarness_generation.cpp and LOPART_interface_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DataFrame LOPART_interface(Rcpp::NumericVector input_data, Rcpp::IntegerVector input_label_start, Rcpp::IntegerVector input_label_end, Rcpp::IntegerVector input_label_changes, int n_updates, double penalty_unlabeled, double penalty_labeled);

TEST(LOPART_deepstate_test,LOPART_interface_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector input_data  = RcppDeepState_NumericVector();
  std::string input_data_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_input_data.qs";
  qs::c_qsave(input_data,input_data_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "input_data values: "<< input_data << std::endl;
  IntegerVector input_label_start  = RcppDeepState_IntegerVector();
  std::string input_label_start_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_input_label_start.qs";
  qs::c_qsave(input_label_start,input_label_start_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "input_label_start values: "<< input_label_start << std::endl;
  IntegerVector input_label_end  = RcppDeepState_IntegerVector();
  std::string input_label_end_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_input_label_end.qs";
  qs::c_qsave(input_label_end,input_label_end_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "input_label_end values: "<< input_label_end << std::endl;
  IntegerVector input_label_changes  = RcppDeepState_IntegerVector();
  std::string input_label_changes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_input_label_changes.qs";
  qs::c_qsave(input_label_changes,input_label_changes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "input_label_changes values: "<< input_label_changes << std::endl;
  IntegerVector n_updates(1);
  n_updates[0]  = RcppDeepState_int();
  std::string n_updates_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n_updates.qs";
  qs::c_qsave(n_updates,n_updates_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_updates values: "<< n_updates << std::endl;
  NumericVector penalty_unlabeled(1);
  penalty_unlabeled[0]  = RcppDeepState_double();
  std::string penalty_unlabeled_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_penalty_unlabeled.qs";
  qs::c_qsave(penalty_unlabeled,penalty_unlabeled_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "penalty_unlabeled values: "<< penalty_unlabeled << std::endl;
  NumericVector penalty_labeled(1);
  penalty_labeled[0]  = RcppDeepState_double();
  std::string penalty_labeled_t = "/home/akhila/fuzzer_packages/fuzzedpackages/LOPART/inst/testfiles/LOPART_interface/libFuzzer_LOPART_interface/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_penalty_labeled.qs";
  qs::c_qsave(penalty_labeled,penalty_labeled_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "penalty_labeled values: "<< penalty_labeled << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    LOPART_interface(input_data,input_label_start,input_label_end,input_label_changes,n_updates[0],penalty_unlabeled[0],penalty_labeled[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
