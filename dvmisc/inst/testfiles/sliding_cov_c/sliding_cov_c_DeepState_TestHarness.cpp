// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sliding_cov_c_DeepState_TestHarness_generation.cpp and sliding_cov_c_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector sliding_cov_c(NumericVector shortvec, NumericVector longvec);

TEST(dvmisc_deepstate_test,sliding_cov_c_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector shortvec  = RcppDeepState_NumericVector();
  qs::c_qsave(shortvec,"/home/akhila/fuzzer_packages/fuzzedpackages/dvmisc/inst/testfiles/sliding_cov_c/inputs/shortvec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shortvec values: "<< shortvec << std::endl;
  NumericVector longvec  = RcppDeepState_NumericVector();
  qs::c_qsave(longvec,"/home/akhila/fuzzer_packages/fuzzedpackages/dvmisc/inst/testfiles/sliding_cov_c/inputs/longvec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "longvec values: "<< longvec << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sliding_cov_c(shortvec,longvec);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
