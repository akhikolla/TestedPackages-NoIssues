// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// updateLassoC_DeepState_TestHarness_generation.cpp and updateLassoC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double updateLassoC(double u, double l1, double l2, double v);

TEST(hmlasso_deepstate_test,updateLassoC_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector u(1);
  u[0]  = RcppDeepState_double();
  qs::c_qsave(u,"/home/akhila/fuzzer_packages/fuzzedpackages/hmlasso/inst/testfiles/updateLassoC/inputs/u.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector l1(1);
  l1[0]  = RcppDeepState_double();
  qs::c_qsave(l1,"/home/akhila/fuzzer_packages/fuzzedpackages/hmlasso/inst/testfiles/updateLassoC/inputs/l1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l1 values: "<< l1 << std::endl;
  NumericVector l2(1);
  l2[0]  = RcppDeepState_double();
  qs::c_qsave(l2,"/home/akhila/fuzzer_packages/fuzzedpackages/hmlasso/inst/testfiles/updateLassoC/inputs/l2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "l2 values: "<< l2 << std::endl;
  NumericVector v(1);
  v[0]  = RcppDeepState_double();
  qs::c_qsave(v,"/home/akhila/fuzzer_packages/fuzzedpackages/hmlasso/inst/testfiles/updateLassoC/inputs/v.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v values: "<< v << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    updateLassoC(u[0],l1[0],l2[0],v[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
