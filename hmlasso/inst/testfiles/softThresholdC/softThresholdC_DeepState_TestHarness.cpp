// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// softThresholdC_DeepState_TestHarness_generation.cpp and softThresholdC_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double softThresholdC(double z, double g);

TEST(hmlasso_deepstate_test,softThresholdC_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector z(1);
  z[0]  = RcppDeepState_double();
  qs::c_qsave(z,"/home/akhila/fuzzer_packages/fuzzedpackages/hmlasso/inst/testfiles/softThresholdC/inputs/z.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z values: "<< z << std::endl;
  NumericVector g(1);
  g[0]  = RcppDeepState_double();
  qs::c_qsave(g,"/home/akhila/fuzzer_packages/fuzzedpackages/hmlasso/inst/testfiles/softThresholdC/inputs/g.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "g values: "<< g << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    softThresholdC(z[0],g[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
