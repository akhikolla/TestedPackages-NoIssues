// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// binomialwupdate_DeepState_TestHarness_generation.cpp and binomialwupdate_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List binomialwupdate(const int nsites, const int ntimes, NumericMatrix w, NumericMatrix offset, NumericMatrix offset_proposal, NumericMatrix w_proposal, NumericMatrix y, NumericMatrix failures, NumericMatrix lambda, const int Nchains, NumericVector temps, NumericVector begin, NumericVector regbegin, const int Ntrends);

TEST(CARBayesST_deepstate_test,binomialwupdate_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  qs::c_qsave(nsites,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/nsites.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector ntimes(1);
  ntimes[0]  = RcppDeepState_int();
  qs::c_qsave(ntimes,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/ntimes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntimes values: "<< ntimes << std::endl;
  NumericMatrix w  = RcppDeepState_NumericMatrix();
  qs::c_qsave(w,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/w.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  NumericMatrix offset  = RcppDeepState_NumericMatrix();
  qs::c_qsave(offset,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  NumericMatrix offset_proposal  = RcppDeepState_NumericMatrix();
  qs::c_qsave(offset_proposal,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/offset_proposal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset_proposal values: "<< offset_proposal << std::endl;
  NumericMatrix w_proposal  = RcppDeepState_NumericMatrix();
  qs::c_qsave(w_proposal,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/w_proposal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w_proposal values: "<< w_proposal << std::endl;
  NumericMatrix y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericMatrix failures  = RcppDeepState_NumericMatrix();
  qs::c_qsave(failures,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/failures.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "failures values: "<< failures << std::endl;
  NumericMatrix lambda  = RcppDeepState_NumericMatrix();
  qs::c_qsave(lambda,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/lambda.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  IntegerVector Nchains(1);
  Nchains[0]  = RcppDeepState_int();
  qs::c_qsave(Nchains,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/Nchains.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nchains values: "<< Nchains << std::endl;
  NumericVector temps  = RcppDeepState_NumericVector();
  qs::c_qsave(temps,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/temps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temps values: "<< temps << std::endl;
  NumericVector begin  = RcppDeepState_NumericVector();
  qs::c_qsave(begin,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/begin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "begin values: "<< begin << std::endl;
  NumericVector regbegin  = RcppDeepState_NumericVector();
  qs::c_qsave(regbegin,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/regbegin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "regbegin values: "<< regbegin << std::endl;
  IntegerVector Ntrends(1);
  Ntrends[0]  = RcppDeepState_int();
  qs::c_qsave(Ntrends,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialwupdate/inputs/Ntrends.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ntrends values: "<< Ntrends << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    binomialwupdate(nsites[0],ntimes[0],w,offset,offset_proposal,w_proposal,y,failures,lambda,Nchains[0],temps,begin,regbegin,Ntrends[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
