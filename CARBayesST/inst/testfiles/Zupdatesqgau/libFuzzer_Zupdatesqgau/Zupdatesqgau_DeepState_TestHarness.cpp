// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Zupdatesqgau_DeepState_TestHarness_generation.cpp and Zupdatesqgau_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix Zupdatesqgau(NumericMatrix Z, NumericMatrix Offset, const double delta, NumericVector lambda, const int nsites, const int ntime, const int G, NumericVector SS, NumericVector prioroffset, const double Gstar, const double nu2);

TEST(CARBayesST_deepstate_test,Zupdatesqgau_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix Z  = RcppDeepState_NumericMatrix();
  std::string Z_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Z.qs";
  qs::c_qsave(Z,Z_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Z values: "<< Z << std::endl;
  NumericMatrix Offset  = RcppDeepState_NumericMatrix();
  std::string Offset_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Offset.qs";
  qs::c_qsave(Offset,Offset_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Offset values: "<< Offset << std::endl;
  NumericVector delta(1);
  delta[0]  = RcppDeepState_double();
  std::string delta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_delta.qs";
  qs::c_qsave(delta,delta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta values: "<< delta << std::endl;
  NumericVector lambda  = RcppDeepState_NumericVector();
  std::string lambda_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda.qs";
  qs::c_qsave(lambda,lambda_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  std::string nsites_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nsites.qs";
  qs::c_qsave(nsites,nsites_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector ntime(1);
  ntime[0]  = RcppDeepState_int();
  std::string ntime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ntime.qs";
  qs::c_qsave(ntime,ntime_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntime values: "<< ntime << std::endl;
  IntegerVector G(1);
  G[0]  = RcppDeepState_int();
  std::string G_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_G.qs";
  qs::c_qsave(G,G_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "G values: "<< G << std::endl;
  NumericVector SS  = RcppDeepState_NumericVector();
  std::string SS_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_SS.qs";
  qs::c_qsave(SS,SS_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SS values: "<< SS << std::endl;
  NumericVector prioroffset  = RcppDeepState_NumericVector();
  std::string prioroffset_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prioroffset.qs";
  qs::c_qsave(prioroffset,prioroffset_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prioroffset values: "<< prioroffset << std::endl;
  NumericVector Gstar(1);
  Gstar[0]  = RcppDeepState_double();
  std::string G_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_G.qs";
  std::string Gstar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Gstar.qs";
  qs::c_qsave(Gstar,Gstar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Gstar values: "<< Gstar << std::endl;
  NumericVector nu2(1);
  nu2[0]  = RcppDeepState_double();
  std::string nu2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/Zupdatesqgau/libFuzzer_Zupdatesqgau/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nu2.qs";
  qs::c_qsave(nu2,nu2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nu2 values: "<< nu2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Zupdatesqgau(Z,Offset,delta[0],lambda,nsites[0],ntime[0],G[0],SS,prioroffset,Gstar[0],nu2[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
