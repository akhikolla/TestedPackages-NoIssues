// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// binomialphiupdate_DeepState_TestHarness_generation.cpp and binomialphiupdate_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List binomialphiupdate(NumericMatrix Wtriplet, NumericMatrix Wbegfin, NumericVector Wtripletsum, const int nsites, const int ntimes, NumericMatrix phi, NumericMatrix offset, NumericMatrix y, NumericMatrix failures, NumericVector tau2, NumericVector rho, const int Nchains, NumericVector temps, NumericMatrix phi_tune, NumericVector regbegin);

TEST(CARBayesST_deepstate_test,binomialphiupdate_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix Wtriplet  = RcppDeepState_NumericMatrix();
  std::string Wtriplet_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_Wtriplet.qs";
  qs::c_qsave(Wtriplet,Wtriplet_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wtriplet values: "<< Wtriplet << std::endl;
  NumericMatrix Wbegfin  = RcppDeepState_NumericMatrix();
  std::string Wbegfin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_Wbegfin.qs";
  qs::c_qsave(Wbegfin,Wbegfin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wbegfin values: "<< Wbegfin << std::endl;
  NumericVector Wtripletsum  = RcppDeepState_NumericVector();
  std::string Wtriplet_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_Wtriplet.qs";
  std::string Wtripletsum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_Wtripletsum.qs";
  qs::c_qsave(Wtripletsum,Wtripletsum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wtripletsum values: "<< Wtripletsum << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  std::string nsites_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_nsites.qs";
  qs::c_qsave(nsites,nsites_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector ntimes(1);
  ntimes[0]  = RcppDeepState_int();
  std::string ntimes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_ntimes.qs";
  qs::c_qsave(ntimes,ntimes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntimes values: "<< ntimes << std::endl;
  NumericMatrix phi  = RcppDeepState_NumericMatrix();
  std::string phi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_phi.qs";
  qs::c_qsave(phi,phi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericMatrix offset  = RcppDeepState_NumericMatrix();
  std::string offset_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_offset.qs";
  qs::c_qsave(offset,offset_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  NumericMatrix y  = RcppDeepState_NumericMatrix();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericMatrix failures  = RcppDeepState_NumericMatrix();
  std::string failures_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_failures.qs";
  qs::c_qsave(failures,failures_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "failures values: "<< failures << std::endl;
  NumericVector tau2  = RcppDeepState_NumericVector();
  std::string tau2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_tau2.qs";
  qs::c_qsave(tau2,tau2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau2 values: "<< tau2 << std::endl;
  NumericVector rho  = RcppDeepState_NumericVector();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  IntegerVector Nchains(1);
  Nchains[0]  = RcppDeepState_int();
  std::string Nchains_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_Nchains.qs";
  qs::c_qsave(Nchains,Nchains_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nchains values: "<< Nchains << std::endl;
  NumericVector temps  = RcppDeepState_NumericVector();
  std::string temps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_temps.qs";
  qs::c_qsave(temps,temps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temps values: "<< temps << std::endl;
  NumericMatrix phi_tune  = RcppDeepState_NumericMatrix();
  std::string phi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_phi.qs";
  std::string phi_tune_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_phi_tune.qs";
  qs::c_qsave(phi_tune,phi_tune_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi_tune values: "<< phi_tune << std::endl;
  NumericVector regbegin  = RcppDeepState_NumericVector();
  std::string regbegin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/binomialphiupdate/AFL_binomialphiupdate/afl_inputs/" + std::to_string(t) + "_regbegin.qs";
  qs::c_qsave(regbegin,regbegin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "regbegin values: "<< regbegin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    binomialphiupdate(Wtriplet,Wbegfin,Wtripletsum,nsites[0],ntimes[0],phi,offset,y,failures,tau2,rho,Nchains[0],temps,phi_tune,regbegin);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
