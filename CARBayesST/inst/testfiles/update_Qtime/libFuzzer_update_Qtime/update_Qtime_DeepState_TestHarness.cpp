// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// update_Qtime_DeepState_TestHarness_generation.cpp and update_Qtime_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix update_Qtime(NumericMatrix Qtime, double alpha, int rowNumberLastDiag);

TEST(CARBayesST_deepstate_test,update_Qtime_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix Qtime  = RcppDeepState_NumericMatrix();
  std::string Qtime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/update_Qtime/libFuzzer_update_Qtime/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Qtime.qs";
  qs::c_qsave(Qtime,Qtime_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Qtime values: "<< Qtime << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/update_Qtime/libFuzzer_update_Qtime/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpha,alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  IntegerVector rowNumberLastDiag(1);
  rowNumberLastDiag[0]  = RcppDeepState_int();
  std::string rowNumberLastDiag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/update_Qtime/libFuzzer_update_Qtime/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rowNumberLastDiag.qs";
  qs::c_qsave(rowNumberLastDiag,rowNumberLastDiag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rowNumberLastDiag values: "<< rowNumberLastDiag << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    update_Qtime(Qtime,alpha[0],rowNumberLastDiag[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
