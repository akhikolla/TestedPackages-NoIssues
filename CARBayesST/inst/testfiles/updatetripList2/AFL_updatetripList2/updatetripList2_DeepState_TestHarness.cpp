// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// updatetripList2_DeepState_TestHarness_generation.cpp and updatetripList2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List updatetripList2(NumericMatrix trips, NumericVector vold, NumericVector vnew, const int nedges, int nsites, IntegerVector block, int block_length, double rho, double fixedridge);

TEST(CARBayesST_deepstate_test,updatetripList2_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix trips  = RcppDeepState_NumericMatrix();
  std::string trips_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_trips.qs";
  qs::c_qsave(trips,trips_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "trips values: "<< trips << std::endl;
  NumericVector vold  = RcppDeepState_NumericVector();
  std::string vold_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_vold.qs";
  qs::c_qsave(vold,vold_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vold values: "<< vold << std::endl;
  NumericVector vnew  = RcppDeepState_NumericVector();
  std::string vnew_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_vnew.qs";
  qs::c_qsave(vnew,vnew_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vnew values: "<< vnew << std::endl;
  IntegerVector nedges(1);
  nedges[0]  = RcppDeepState_int();
  std::string nedges_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_nedges.qs";
  qs::c_qsave(nedges,nedges_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nedges values: "<< nedges << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  std::string nsites_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_nsites.qs";
  qs::c_qsave(nsites,nsites_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector block  = RcppDeepState_IntegerVector();
  std::string block_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_block.qs";
  qs::c_qsave(block,block_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "block values: "<< block << std::endl;
  IntegerVector block_length(1);
  block_length[0]  = RcppDeepState_int();
  std::string block_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_block.qs";
  std::string block_length_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_block_length.qs";
  qs::c_qsave(block_length,block_length_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "block_length values: "<< block_length << std::endl;
  NumericVector rho(1);
  rho[0]  = RcppDeepState_double();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  NumericVector fixedridge(1);
  fixedridge[0]  = RcppDeepState_double();
  std::string fixedridge_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/updatetripList2/AFL_updatetripList2/afl_inputs/" + std::to_string(t) + "_fixedridge.qs";
  qs::c_qsave(fixedridge,fixedridge_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fixedridge values: "<< fixedridge << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    updatetripList2(trips,vold,vnew,nedges[0],nsites[0],block,block_length[0],rho[0],fixedridge[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
