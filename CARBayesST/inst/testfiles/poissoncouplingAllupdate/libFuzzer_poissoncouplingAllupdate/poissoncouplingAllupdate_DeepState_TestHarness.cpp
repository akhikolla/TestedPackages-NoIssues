// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// poissoncouplingAllupdate_DeepState_TestHarness_generation.cpp and poissoncouplingAllupdate_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int poissoncouplingAllupdate(const int nsites, const int K, const int p, NumericMatrix w, NumericMatrix offset, NumericMatrix beta, NumericMatrix gamma, NumericMatrix lambda, NumericMatrix phi, NumericVector rho, NumericVector tau2, NumericVector Wtripletsum, NumericMatrix Wtriplet, NumericMatrix Wbegfin, NumericVector y, NumericVector prior_meanbeta, NumericVector prior_varbeta, NumericVector prior_meantrends, NumericVector prior_vartrends, NumericVector prior_lambda, NumericVector prior_tau2, NumericVector swap, NumericVector temps, NumericVector begin, const int Ntrends, const int TrendSel);

TEST(CARBayesST_deepstate_test,poissoncouplingAllupdate_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  std::string nsites_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nsites.qs";
  qs::c_qsave(nsites,nsites_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector K(1);
  K[0]  = RcppDeepState_int();
  std::string K_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_K.qs";
  qs::c_qsave(K,K_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  IntegerVector p(1);
  p[0]  = RcppDeepState_int();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericMatrix w  = RcppDeepState_NumericMatrix();
  std::string w_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_w.qs";
  qs::c_qsave(w,w_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  NumericMatrix offset  = RcppDeepState_NumericMatrix();
  std::string offset_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_offset.qs";
  qs::c_qsave(offset,offset_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  NumericMatrix beta  = RcppDeepState_NumericMatrix();
  std::string beta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_beta.qs";
  qs::c_qsave(beta,beta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  NumericMatrix gamma  = RcppDeepState_NumericMatrix();
  std::string gamma_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gamma.qs";
  qs::c_qsave(gamma,gamma_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma values: "<< gamma << std::endl;
  NumericMatrix lambda  = RcppDeepState_NumericMatrix();
  std::string lambda_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lambda.qs";
  qs::c_qsave(lambda,lambda_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lambda values: "<< lambda << std::endl;
  NumericMatrix phi  = RcppDeepState_NumericMatrix();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string phi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_phi.qs";
  qs::c_qsave(phi,phi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericVector rho  = RcppDeepState_NumericVector();
  std::string rho_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rho.qs";
  qs::c_qsave(rho,rho_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  NumericVector tau2  = RcppDeepState_NumericVector();
  std::string tau2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tau2.qs";
  qs::c_qsave(tau2,tau2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau2 values: "<< tau2 << std::endl;
  NumericVector Wtripletsum  = RcppDeepState_NumericVector();
  std::string Wtripletsum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Wtripletsum.qs";
  std::string Wtriplet_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Wtriplet.qs";
  qs::c_qsave(Wtripletsum,Wtripletsum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wtripletsum values: "<< Wtripletsum << std::endl;
  NumericMatrix Wtriplet  = RcppDeepState_NumericMatrix();
  std::string Wtriplet_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Wtriplet.qs";
  qs::c_qsave(Wtriplet,Wtriplet_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wtriplet values: "<< Wtriplet << std::endl;
  NumericMatrix Wbegfin  = RcppDeepState_NumericMatrix();
  std::string Wbegfin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Wbegfin.qs";
  qs::c_qsave(Wbegfin,Wbegfin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wbegfin values: "<< Wbegfin << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector prior_meanbeta  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string prior_meanbeta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_meanbeta.qs";
  qs::c_qsave(prior_meanbeta,prior_meanbeta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_meanbeta values: "<< prior_meanbeta << std::endl;
  NumericVector prior_varbeta  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string prior_varbeta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_varbeta.qs";
  qs::c_qsave(prior_varbeta,prior_varbeta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_varbeta values: "<< prior_varbeta << std::endl;
  NumericVector prior_meantrends  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string prior_meantrends_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_meantrends.qs";
  qs::c_qsave(prior_meantrends,prior_meantrends_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_meantrends values: "<< prior_meantrends << std::endl;
  NumericVector prior_vartrends  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string prior_vartrends_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_vartrends.qs";
  qs::c_qsave(prior_vartrends,prior_vartrends_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_vartrends values: "<< prior_vartrends << std::endl;
  NumericVector prior_lambda  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string prior_lambda_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_lambda.qs";
  qs::c_qsave(prior_lambda,prior_lambda_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_lambda values: "<< prior_lambda << std::endl;
  NumericVector prior_tau2  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string prior_tau2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_tau2.qs";
  qs::c_qsave(prior_tau2,prior_tau2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_tau2 values: "<< prior_tau2 << std::endl;
  NumericVector swap  = RcppDeepState_NumericVector();
  std::string swap_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_swap.qs";
  qs::c_qsave(swap,swap_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "swap values: "<< swap << std::endl;
  NumericVector temps  = RcppDeepState_NumericVector();
  std::string temps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_temps.qs";
  qs::c_qsave(temps,temps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temps values: "<< temps << std::endl;
  NumericVector begin  = RcppDeepState_NumericVector();
  std::string begin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_begin.qs";
  qs::c_qsave(begin,begin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "begin values: "<< begin << std::endl;
  IntegerVector Ntrends(1);
  Ntrends[0]  = RcppDeepState_int();
  std::string Ntrends_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Ntrends.qs";
  qs::c_qsave(Ntrends,Ntrends_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ntrends values: "<< Ntrends << std::endl;
  IntegerVector TrendSel(1);
  TrendSel[0]  = RcppDeepState_int();
  std::string TrendSel_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissoncouplingAllupdate/libFuzzer_poissoncouplingAllupdate/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_TrendSel.qs";
  qs::c_qsave(TrendSel,TrendSel_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "TrendSel values: "<< TrendSel << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    poissoncouplingAllupdate(nsites[0],K[0],p[0],w,offset,beta,gamma,lambda,phi,rho,tau2,Wtripletsum,Wtriplet,Wbegfin,y,prior_meanbeta,prior_varbeta,prior_meantrends,prior_vartrends,prior_lambda,prior_tau2,swap,temps,begin,Ntrends[0],TrendSel[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
