// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// poissonphiupdate_DeepState_TestHarness_generation.cpp and poissonphiupdate_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List poissonphiupdate(NumericMatrix Wtriplet, NumericMatrix Wbegfin, NumericVector Wtripletsum, const int nsites, const int ntimes, NumericMatrix phi, NumericMatrix offset, NumericMatrix y, NumericVector tau2, NumericVector rho, const int Nchains, NumericVector temps, NumericMatrix phi_tune, NumericVector regbegin);

TEST(CARBayesST_deepstate_test,poissonphiupdate_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix Wtriplet  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Wtriplet,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/Wtriplet.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wtriplet values: "<< Wtriplet << std::endl;
  NumericMatrix Wbegfin  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Wbegfin,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/Wbegfin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wbegfin values: "<< Wbegfin << std::endl;
  NumericVector Wtripletsum  = RcppDeepState_NumericVector();
  qs::c_qsave(Wtripletsum,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/Wtripletsum.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Wtripletsum values: "<< Wtripletsum << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  qs::c_qsave(nsites,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/nsites.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector ntimes(1);
  ntimes[0]  = RcppDeepState_int();
  qs::c_qsave(ntimes,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/ntimes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntimes values: "<< ntimes << std::endl;
  NumericMatrix phi  = RcppDeepState_NumericMatrix();
  qs::c_qsave(phi,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/phi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericMatrix offset  = RcppDeepState_NumericMatrix();
  qs::c_qsave(offset,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  NumericMatrix y  = RcppDeepState_NumericMatrix();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector tau2  = RcppDeepState_NumericVector();
  qs::c_qsave(tau2,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/tau2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau2 values: "<< tau2 << std::endl;
  NumericVector rho  = RcppDeepState_NumericVector();
  qs::c_qsave(rho,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/rho.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rho values: "<< rho << std::endl;
  IntegerVector Nchains(1);
  Nchains[0]  = RcppDeepState_int();
  qs::c_qsave(Nchains,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/Nchains.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nchains values: "<< Nchains << std::endl;
  NumericVector temps  = RcppDeepState_NumericVector();
  qs::c_qsave(temps,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/temps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temps values: "<< temps << std::endl;
  NumericMatrix phi_tune  = RcppDeepState_NumericMatrix();
  qs::c_qsave(phi_tune,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/phi_tune.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi_tune values: "<< phi_tune << std::endl;
  NumericVector regbegin  = RcppDeepState_NumericVector();
  qs::c_qsave(regbegin,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissonphiupdate/inputs/regbegin.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "regbegin values: "<< regbegin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    poissonphiupdate(Wtriplet,Wbegfin,Wtripletsum,nsites[0],ntimes[0],phi,offset,y,tau2,rho,Nchains[0],temps,phi_tune,regbegin);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
