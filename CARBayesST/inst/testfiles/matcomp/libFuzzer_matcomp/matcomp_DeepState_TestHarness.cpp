// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// matcomp_DeepState_TestHarness_generation.cpp and matcomp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix matcomp(NumericMatrix X, NumericMatrix beta, NumericVector prop, const int p, const int Nchains);

TEST(CARBayesST_deepstate_test,matcomp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/matcomp/libFuzzer_matcomp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  NumericMatrix beta  = RcppDeepState_NumericMatrix();
  std::string beta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/matcomp/libFuzzer_matcomp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_beta.qs";
  qs::c_qsave(beta,beta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  NumericVector prop  = RcppDeepState_NumericVector();
  std::string prop_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/matcomp/libFuzzer_matcomp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prop.qs";
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/matcomp/libFuzzer_matcomp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(prop,prop_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prop values: "<< prop << std::endl;
  IntegerVector p(1);
  p[0]  = RcppDeepState_int();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/matcomp/libFuzzer_matcomp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  IntegerVector Nchains(1);
  Nchains[0]  = RcppDeepState_int();
  std::string Nchains_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/matcomp/libFuzzer_matcomp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Nchains.qs";
  qs::c_qsave(Nchains,Nchains_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nchains values: "<< Nchains << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    matcomp(X,beta,prop,p[0],Nchains[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
