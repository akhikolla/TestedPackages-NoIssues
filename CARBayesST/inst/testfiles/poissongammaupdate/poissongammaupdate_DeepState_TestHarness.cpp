// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// poissongammaupdate_DeepState_TestHarness_generation.cpp and poissongammaupdate_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List poissongammaupdate(const int nsites, NumericVector gamma, NumericVector proposal, NumericMatrix offset, NumericMatrix offset_proposal, NumericVector y, double prior_meangamma, double prior_vargamma, const int Nchains, NumericVector temps);

TEST(CARBayesST_deepstate_test,poissongammaupdate_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  qs::c_qsave(nsites,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/nsites.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  NumericVector gamma  = RcppDeepState_NumericVector();
  qs::c_qsave(gamma,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/gamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma values: "<< gamma << std::endl;
  NumericVector proposal  = RcppDeepState_NumericVector();
  qs::c_qsave(proposal,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/proposal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "proposal values: "<< proposal << std::endl;
  NumericMatrix offset  = RcppDeepState_NumericMatrix();
  qs::c_qsave(offset,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/offset.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset values: "<< offset << std::endl;
  NumericMatrix offset_proposal  = RcppDeepState_NumericMatrix();
  qs::c_qsave(offset_proposal,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/offset_proposal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "offset_proposal values: "<< offset_proposal << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector prior_meangamma(1);
  prior_meangamma[0]  = RcppDeepState_double();
  qs::c_qsave(prior_meangamma,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/prior_meangamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_meangamma values: "<< prior_meangamma << std::endl;
  NumericVector prior_vargamma(1);
  prior_vargamma[0]  = RcppDeepState_double();
  qs::c_qsave(prior_vargamma,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/prior_vargamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_vargamma values: "<< prior_vargamma << std::endl;
  IntegerVector Nchains(1);
  Nchains[0]  = RcppDeepState_int();
  qs::c_qsave(Nchains,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/Nchains.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Nchains values: "<< Nchains << std::endl;
  NumericVector temps  = RcppDeepState_NumericVector();
  qs::c_qsave(temps,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/poissongammaupdate/inputs/temps.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temps values: "<< temps << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    poissongammaupdate(nsites[0],gamma,proposal,offset,offset_proposal,y,prior_meangamma[0],prior_vargamma[0],Nchains[0],temps);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
