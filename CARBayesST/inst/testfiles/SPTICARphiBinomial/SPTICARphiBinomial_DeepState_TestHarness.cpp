// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// SPTICARphiBinomial_DeepState_TestHarness_generation.cpp and SPTICARphiBinomial_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List SPTICARphiBinomial(NumericMatrix W, const int nsites, const int ntimes, NumericVector phi, NumericVector nneighbours, double tau, const NumericVector y, double alpha, NumericVector XB, const double phiVarb_tune, NumericVector trials);

TEST(CARBayesST_deepstate_test,SPTICARphiBinomial_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix W  = RcppDeepState_NumericMatrix();
  qs::c_qsave(W,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/W.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  IntegerVector nsites(1);
  nsites[0]  = RcppDeepState_int();
  qs::c_qsave(nsites,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/nsites.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsites values: "<< nsites << std::endl;
  IntegerVector ntimes(1);
  ntimes[0]  = RcppDeepState_int();
  qs::c_qsave(ntimes,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/ntimes.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntimes values: "<< ntimes << std::endl;
  NumericVector phi  = RcppDeepState_NumericVector();
  qs::c_qsave(phi,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/phi.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phi values: "<< phi << std::endl;
  NumericVector nneighbours  = RcppDeepState_NumericVector();
  qs::c_qsave(nneighbours,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/nneighbours.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nneighbours values: "<< nneighbours << std::endl;
  NumericVector tau(1);
  tau[0]  = RcppDeepState_double();
  qs::c_qsave(tau,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/tau.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau values: "<< tau << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  NumericVector XB  = RcppDeepState_NumericVector();
  qs::c_qsave(XB,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/XB.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "XB values: "<< XB << std::endl;
  NumericVector phiVarb_tune(1);
  phiVarb_tune[0]  = RcppDeepState_double();
  qs::c_qsave(phiVarb_tune,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/phiVarb_tune.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phiVarb_tune values: "<< phiVarb_tune << std::endl;
  NumericVector trials  = RcppDeepState_NumericVector();
  qs::c_qsave(trials,"/home/akhila/fuzzer_packages/fuzzedpackages/CARBayesST/inst/testfiles/SPTICARphiBinomial/inputs/trials.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "trials values: "<< trials << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    SPTICARphiBinomial(W,nsites[0],ntimes[0],phi,nneighbours,tau[0],y,alpha[0],XB,phiVarb_tune[0],trials);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
