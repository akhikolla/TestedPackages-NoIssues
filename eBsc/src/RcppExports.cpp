// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Qfunc
double Qfunc(double x, int qq);
RcppExport SEXP _eBsc_Qfunc(SEXP xSEXP, SEXP qqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type qq(qqSEXP);
    rcpp_result_gen = Rcpp::wrap(Qfunc(x, qq));
    return rcpp_result_gen;
END_RCPP
}
// eigenvalues
arma::vec eigenvalues(int nn, int qq);
RcppExport SEXP _eBsc_eigenvalues(SEXP nnSEXP, SEXP qqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nn(nnSEXP);
    Rcpp::traits::input_parameter< int >::type qq(qqSEXP);
    rcpp_result_gen = Rcpp::wrap(eigenvalues(nn, qq));
    return rcpp_result_gen;
END_RCPP
}
// Turn
arma::mat Turn(arma::mat M);
RcppExport SEXP _eBsc_Turn(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(Turn(M));
    return rcpp_result_gen;
END_RCPP
}
// drbasis
extern "C" SEXP drbasis(int nn, int qq);
RcppExport SEXP _eBsc_drbasis(SEXP nnSEXP, SEXP qqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nn(nnSEXP);
    Rcpp::traits::input_parameter< int >::type qq(qqSEXP);
    rcpp_result_gen = Rcpp::wrap(drbasis(nn, qq));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _eBsc_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _eBsc_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _eBsc_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _eBsc_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_eBsc_Qfunc", (DL_FUNC) &_eBsc_Qfunc, 2},
    {"_eBsc_eigenvalues", (DL_FUNC) &_eBsc_eigenvalues, 2},
    {"_eBsc_Turn", (DL_FUNC) &_eBsc_Turn, 1},
    {"_eBsc_drbasis", (DL_FUNC) &_eBsc_drbasis, 2},
    {"_eBsc_rcpparma_hello_world", (DL_FUNC) &_eBsc_rcpparma_hello_world, 0},
    {"_eBsc_rcpparma_outerproduct", (DL_FUNC) &_eBsc_rcpparma_outerproduct, 1},
    {"_eBsc_rcpparma_innerproduct", (DL_FUNC) &_eBsc_rcpparma_innerproduct, 1},
    {"_eBsc_rcpparma_bothproducts", (DL_FUNC) &_eBsc_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_eBsc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
