// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// zcurve_EM_start_fast_RCpp_DeepState_TestHarness_generation.cpp and zcurve_EM_start_fast_RCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List zcurve_EM_start_fast_RCpp(NumericVector x, int K, NumericVector mu, NumericVector sigma, NumericVector mu_alpha, double mu_max, NumericVector theta_alpha, double a, double b, double sig_level, int fit_reps, int max_iter, double criterion);

TEST(zcurve_deepstate_test,zcurve_EM_start_fast_RCpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector K(1);
  K[0]  = RcppDeepState_int();
  std::string K_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_K.qs";
  qs::c_qsave(K,K_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  NumericVector mu  = RcppDeepState_NumericVector();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector sigma  = RcppDeepState_NumericVector();
  std::string sigma_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sigma.qs";
  qs::c_qsave(sigma,sigma_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma values: "<< sigma << std::endl;
  NumericVector mu_alpha  = RcppDeepState_NumericVector();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu.qs";
  std::string mu_alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu_alpha.qs";
  qs::c_qsave(mu_alpha,mu_alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu_alpha values: "<< mu_alpha << std::endl;
  NumericVector mu_max(1);
  mu_max[0]  = RcppDeepState_double();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu.qs";
  std::string mu_max_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu_max.qs";
  qs::c_qsave(mu_max,mu_max_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu_max values: "<< mu_max << std::endl;
  NumericVector theta_alpha  = RcppDeepState_NumericVector();
  std::string theta_alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_theta_alpha.qs";
  qs::c_qsave(theta_alpha,theta_alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta_alpha values: "<< theta_alpha << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector b(1);
  b[0]  = RcppDeepState_double();
  std::string b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_b.qs";
  qs::c_qsave(b,b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector sig_level(1);
  sig_level[0]  = RcppDeepState_double();
  std::string sig_level_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sig_level.qs";
  qs::c_qsave(sig_level,sig_level_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sig_level values: "<< sig_level << std::endl;
  IntegerVector fit_reps(1);
  fit_reps[0]  = RcppDeepState_int();
  std::string fit_reps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fit_reps.qs";
  qs::c_qsave(fit_reps,fit_reps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fit_reps values: "<< fit_reps << std::endl;
  IntegerVector max_iter(1);
  max_iter[0]  = RcppDeepState_int();
  std::string max_iter_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_max_iter.qs";
  qs::c_qsave(max_iter,max_iter_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_iter values: "<< max_iter << std::endl;
  NumericVector criterion(1);
  criterion[0]  = RcppDeepState_double();
  std::string criterion_t = "/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_start_fast_RCpp/libFuzzer_zcurve_EM_start_fast_RCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_criterion.qs";
  qs::c_qsave(criterion,criterion_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "criterion values: "<< criterion << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    zcurve_EM_start_fast_RCpp(x,K[0],mu,sigma,mu_alpha,mu_max[0],theta_alpha,a[0],b[0],sig_level[0],fit_reps[0],max_iter[0],criterion[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
