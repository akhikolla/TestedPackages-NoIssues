// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// zcurve_EM_fit_RCpp_DeepState_TestHarness_generation.cpp and zcurve_EM_fit_RCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List zcurve_EM_fit_RCpp(NumericVector x, int type, NumericVector mu, NumericVector sigma, NumericVector theta, double a, double b, double sig_level, int max_iter, double criterion);

TEST(zcurve_deepstate_test,zcurve_EM_fit_RCpp_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector type(1);
  type[0]  = RcppDeepState_int();
  qs::c_qsave(type,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/type.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "type values: "<< type << std::endl;
  NumericVector mu  = RcppDeepState_NumericVector();
  qs::c_qsave(mu,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/mu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector sigma  = RcppDeepState_NumericVector();
  qs::c_qsave(sigma,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/sigma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma values: "<< sigma << std::endl;
  NumericVector theta  = RcppDeepState_NumericVector();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  qs::c_qsave(a,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/a.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector b(1);
  b[0]  = RcppDeepState_double();
  qs::c_qsave(b,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/b.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector sig_level(1);
  sig_level[0]  = RcppDeepState_double();
  qs::c_qsave(sig_level,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/sig_level.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sig_level values: "<< sig_level << std::endl;
  IntegerVector max_iter(1);
  max_iter[0]  = RcppDeepState_int();
  qs::c_qsave(max_iter,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/max_iter.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_iter values: "<< max_iter << std::endl;
  NumericVector criterion(1);
  criterion[0]  = RcppDeepState_double();
  qs::c_qsave(criterion,"/home/akhila/fuzzer_packages/fuzzedpackages/zcurve/inst/testfiles/zcurve_EM_fit_RCpp/inputs/criterion.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "criterion values: "<< criterion << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    zcurve_EM_fit_RCpp(x,type[0],mu,sigma,theta,a[0],b[0],sig_level[0],max_iter[0],criterion[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
