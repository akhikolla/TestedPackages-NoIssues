// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// engine4_DeepState_TestHarness_generation.cpp and engine4_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix engine4(NumericMatrix data, int radius, double probs, int naVal);

TEST(imagine_deepstate_test,engine4_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericMatrix data  = RcppDeepState_NumericMatrix();
  qs::c_qsave(data,"/home/akhila/fuzzer_packages/fuzzedpackages/imagine/inst/testfiles/engine4/inputs/data.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "data values: "<< data << std::endl;
  IntegerVector radius(1);
  radius[0]  = RcppDeepState_int();
  qs::c_qsave(radius,"/home/akhila/fuzzer_packages/fuzzedpackages/imagine/inst/testfiles/engine4/inputs/radius.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius values: "<< radius << std::endl;
  NumericVector probs(1);
  probs[0]  = RcppDeepState_double();
  qs::c_qsave(probs,"/home/akhila/fuzzer_packages/fuzzedpackages/imagine/inst/testfiles/engine4/inputs/probs.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  IntegerVector naVal(1);
  naVal[0]  = RcppDeepState_int();
  qs::c_qsave(naVal,"/home/akhila/fuzzer_packages/fuzzedpackages/imagine/inst/testfiles/engine4/inputs/naVal.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "naVal values: "<< naVal << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    engine4(data,radius[0],probs[0],naVal[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
