// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// shiftVec_DeepState_TestHarness_generation.cpp and shiftVec_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector shiftVec(NumericVector elv, NumericVector vid);

TEST(tergmLite_deepstate_test,shiftVec_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector elv  = RcppDeepState_NumericVector();
  std::string elv_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tergmLite/inst/testfiles/shiftVec/libFuzzer_shiftVec/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_elv.qs";
  qs::c_qsave(elv,elv_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "elv values: "<< elv << std::endl;
  NumericVector vid  = RcppDeepState_NumericVector();
  std::string vid_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tergmLite/inst/testfiles/shiftVec/libFuzzer_shiftVec/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vid.qs";
  qs::c_qsave(vid,vid_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vid values: "<< vid << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    shiftVec(elv,vid);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
