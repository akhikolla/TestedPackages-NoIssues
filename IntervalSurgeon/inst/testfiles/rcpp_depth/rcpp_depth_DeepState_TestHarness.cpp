// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_depth_DeepState_TestHarness_generation.cpp and rcpp_depth_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector rcpp_depth(IntegerVector sorted_starts, IntegerVector sorted_ends, IntegerVector pts);

TEST(IntervalSurgeon_deepstate_test,rcpp_depth_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector sorted_starts  = RcppDeepState_IntegerVector();
  qs::c_qsave(sorted_starts,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_depth/inputs/sorted_starts.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sorted_starts values: "<< sorted_starts << std::endl;
  IntegerVector sorted_ends  = RcppDeepState_IntegerVector();
  qs::c_qsave(sorted_ends,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_depth/inputs/sorted_ends.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sorted_ends values: "<< sorted_ends << std::endl;
  IntegerVector pts  = RcppDeepState_IntegerVector();
  qs::c_qsave(pts,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_depth/inputs/pts.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pts values: "<< pts << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_depth(sorted_starts,sorted_ends,pts);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
