// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_pile_DeepState_TestHarness_generation.cpp and rcpp_pile_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector rcpp_pile(IntegerVector starts, IntegerVector ends, IntegerVector pts, int total_members);

TEST(IntervalSurgeon_deepstate_test,rcpp_pile_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector starts  = RcppDeepState_IntegerVector();
  qs::c_qsave(starts,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_pile/inputs/starts.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "starts values: "<< starts << std::endl;
  IntegerVector ends  = RcppDeepState_IntegerVector();
  qs::c_qsave(ends,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_pile/inputs/ends.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ends values: "<< ends << std::endl;
  IntegerVector pts  = RcppDeepState_IntegerVector();
  qs::c_qsave(pts,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_pile/inputs/pts.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pts values: "<< pts << std::endl;
  IntegerVector total_members(1);
  total_members[0]  = RcppDeepState_int();
  qs::c_qsave(total_members,"/home/akhila/fuzzer_packages/fuzzedpackages/IntervalSurgeon/inst/testfiles/rcpp_pile/inputs/total_members.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "total_members values: "<< total_members << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_pile(starts,ends,pts,total_members[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
