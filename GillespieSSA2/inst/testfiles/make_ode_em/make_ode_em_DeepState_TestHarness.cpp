// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// make_ode_em_DeepState_TestHarness_generation.cpp and make_ode_em_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP make_ode_em(double tau, double noise_strength);

TEST(GillespieSSA2_deepstate_test,make_ode_em_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector tau(1);
  tau[0]  = RcppDeepState_double();
  qs::c_qsave(tau,"/home/akhila/fuzzer_packages/fuzzedpackages/GillespieSSA2/inst/testfiles/make_ode_em/inputs/tau.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau values: "<< tau << std::endl;
  NumericVector noise_strength(1);
  noise_strength[0]  = RcppDeepState_double();
  qs::c_qsave(noise_strength,"/home/akhila/fuzzer_packages/fuzzedpackages/GillespieSSA2/inst/testfiles/make_ode_em/inputs/noise_strength.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "noise_strength values: "<< noise_strength << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    make_ode_em(tau[0],noise_strength[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
