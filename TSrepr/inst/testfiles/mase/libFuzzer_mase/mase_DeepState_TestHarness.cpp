// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mase_DeepState_TestHarness_generation.cpp and mase_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double mase(NumericVector real, NumericVector forecast, NumericVector naive);

TEST(TSrepr_deepstate_test,mase_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector real  = RcppDeepState_NumericVector();
  std::string real_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TSrepr/inst/testfiles/mase/libFuzzer_mase/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_real.qs";
  qs::c_qsave(real,real_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "real values: "<< real << std::endl;
  NumericVector forecast  = RcppDeepState_NumericVector();
  std::string forecast_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TSrepr/inst/testfiles/mase/libFuzzer_mase/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_forecast.qs";
  qs::c_qsave(forecast,forecast_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "forecast values: "<< forecast << std::endl;
  NumericVector naive  = RcppDeepState_NumericVector();
  std::string naive_t = "/home/akhila/fuzzer_packages/fuzzedpackages/TSrepr/inst/testfiles/mase/libFuzzer_mase/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_naive.qs";
  qs::c_qsave(naive,naive_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "naive values: "<< naive << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mase(real,forecast,naive);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
