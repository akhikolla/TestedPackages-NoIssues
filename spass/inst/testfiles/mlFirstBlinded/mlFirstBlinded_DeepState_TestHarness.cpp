// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mlFirstBlinded_DeepState_TestHarness_generation.cpp and mlFirstBlinded_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double mlFirstBlinded(NumericVector y, NumericMatrix group, int n, NumericVector tp, int type, double theta, double k);

TEST(spass_deepstate_test,mlFirstBlinded_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  qs::c_qsave(y,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/y.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericMatrix group  = RcppDeepState_NumericMatrix();
  qs::c_qsave(group,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/group.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "group values: "<< group << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector tp  = RcppDeepState_NumericVector();
  qs::c_qsave(tp,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/tp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tp values: "<< tp << std::endl;
  IntegerVector type(1);
  type[0]  = RcppDeepState_int();
  qs::c_qsave(type,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/type.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "type values: "<< type << std::endl;
  NumericVector theta(1);
  theta[0]  = RcppDeepState_double();
  qs::c_qsave(theta,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/theta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  NumericVector k(1);
  k[0]  = RcppDeepState_double();
  qs::c_qsave(k,"/home/akhila/fuzzer_packages/fuzzedpackages/spass/inst/testfiles/mlFirstBlinded/inputs/k.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mlFirstBlinded(y,group,n[0],tp,type[0],theta[0],k[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
