// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_convolve_DeepState_TestHarness_generation.cpp and cpp_convolve_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector cpp_convolve(Rcpp::NumericVector xa, Rcpp::NumericVector xb);

TEST(CVXR_deepstate_test,cpp_convolve_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector xa  = RcppDeepState_NumericVector();
  std::string xa_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CVXR/inst/testfiles/cpp_convolve/AFL_cpp_convolve/afl_inputs/" + std::to_string(t) + "_xa.qs";
  qs::c_qsave(xa,xa_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xa values: "<< xa << std::endl;
  NumericVector xb  = RcppDeepState_NumericVector();
  std::string xb_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CVXR/inst/testfiles/cpp_convolve/AFL_cpp_convolve/afl_inputs/" + std::to_string(t) + "_xb.qs";
  qs::c_qsave(xb,xb_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xb values: "<< xb << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_convolve(xa,xb);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
