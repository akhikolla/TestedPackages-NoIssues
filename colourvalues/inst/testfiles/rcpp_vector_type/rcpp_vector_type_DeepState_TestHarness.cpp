// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_vector_type_DeepState_TestHarness_generation.cpp and rcpp_vector_type_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int rcpp_vector_type(int new_type, int existing_type);

TEST(colourvalues_deepstate_test,rcpp_vector_type_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector new_type(1);
  new_type[0]  = RcppDeepState_int();
  qs::c_qsave(new_type,"/home/akhila/fuzzer_packages/fuzzedpackages/colourvalues/inst/testfiles/rcpp_vector_type/inputs/new_type.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "new_type values: "<< new_type << std::endl;
  IntegerVector existing_type(1);
  existing_type[0]  = RcppDeepState_int();
  qs::c_qsave(existing_type,"/home/akhila/fuzzer_packages/fuzzedpackages/colourvalues/inst/testfiles/rcpp_vector_type/inputs/existing_type.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "existing_type values: "<< existing_type << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_vector_type(new_type[0],existing_type[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
