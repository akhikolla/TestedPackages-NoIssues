// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ECapacitance_DeepState_TestHarness_generation.cpp and ECapacitance_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double ECapacitance(double psi, double psiPrev, double PLCprev, double V, double fapo, double c, double d, double pi0, double eps, double timestep);

TEST(medfate_deepstate_test,ECapacitance_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector psi(1);
  psi[0]  = RcppDeepState_double();
  std::string psi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_psi.qs";
  qs::c_qsave(psi,psi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psi values: "<< psi << std::endl;
  NumericVector psiPrev(1);
  psiPrev[0]  = RcppDeepState_double();
  std::string psi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_psi.qs";
  std::string psiPrev_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_psiPrev.qs";
  qs::c_qsave(psiPrev,psiPrev_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiPrev values: "<< psiPrev << std::endl;
  NumericVector PLCprev(1);
  PLCprev[0]  = RcppDeepState_double();
  std::string PLCprev_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_PLCprev.qs";
  qs::c_qsave(PLCprev,PLCprev_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PLCprev values: "<< PLCprev << std::endl;
  NumericVector V(1);
  V[0]  = RcppDeepState_double();
  std::string V_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_V.qs";
  qs::c_qsave(V,V_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "V values: "<< V << std::endl;
  NumericVector fapo(1);
  fapo[0]  = RcppDeepState_double();
  std::string fapo_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fapo.qs";
  qs::c_qsave(fapo,fapo_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fapo values: "<< fapo << std::endl;
  NumericVector c(1);
  c[0]  = RcppDeepState_double();
  std::string c_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_c.qs";
  qs::c_qsave(c,c_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "c values: "<< c << std::endl;
  NumericVector d(1);
  d[0]  = RcppDeepState_double();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  NumericVector pi0(1);
  pi0[0]  = RcppDeepState_double();
  std::string pi0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pi0.qs";
  qs::c_qsave(pi0,pi0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pi0 values: "<< pi0 << std::endl;
  NumericVector eps(1);
  eps[0]  = RcppDeepState_double();
  std::string eps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_eps.qs";
  qs::c_qsave(eps,eps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps values: "<< eps << std::endl;
  NumericVector timestep(1);
  timestep[0]  = RcppDeepState_double();
  std::string timestep_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ECapacitance/libFuzzer_ECapacitance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_timestep.qs";
  qs::c_qsave(timestep,timestep_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timestep values: "<< timestep << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ECapacitance(psi[0],psiPrev[0],PLCprev[0],V[0],fapo[0],c[0],d[0],pi0[0],eps[0],timestep[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
