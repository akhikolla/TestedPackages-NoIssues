// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// snowMelt_DeepState_TestHarness_generation.cpp and snowMelt_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double snowMelt(double tday, double rad, double LgroundSWR, double elevation);

TEST(medfate_deepstate_test,snowMelt_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector tday(1);
  tday[0]  = RcppDeepState_double();
  qs::c_qsave(tday,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/snowMelt/inputs/tday.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tday values: "<< tday << std::endl;
  NumericVector rad(1);
  rad[0]  = RcppDeepState_double();
  qs::c_qsave(rad,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/snowMelt/inputs/rad.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rad values: "<< rad << std::endl;
  NumericVector LgroundSWR(1);
  LgroundSWR[0]  = RcppDeepState_double();
  qs::c_qsave(LgroundSWR,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/snowMelt/inputs/LgroundSWR.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LgroundSWR values: "<< LgroundSWR << std::endl;
  NumericVector elevation(1);
  elevation[0]  = RcppDeepState_double();
  qs::c_qsave(elevation,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/snowMelt/inputs/elevation.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "elevation values: "<< elevation << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    snowMelt(tday[0],rad[0],LgroundSWR[0],elevation[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
