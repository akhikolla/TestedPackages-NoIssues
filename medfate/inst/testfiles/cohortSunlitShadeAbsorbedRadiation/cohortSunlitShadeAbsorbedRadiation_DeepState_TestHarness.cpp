// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cohortSunlitShadeAbsorbedRadiation_DeepState_TestHarness_generation.cpp and cohortSunlitShadeAbsorbedRadiation_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List cohortSunlitShadeAbsorbedRadiation(double Ib0, double Id0, NumericVector Ibf, NumericVector Idf, double beta, NumericMatrix LAIme, NumericMatrix LAImd, NumericVector kb, NumericVector kd, NumericVector alpha, NumericVector gamma);

TEST(medfate_deepstate_test,cohortSunlitShadeAbsorbedRadiation_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Ib0(1);
  Ib0[0]  = RcppDeepState_double();
  qs::c_qsave(Ib0,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/Ib0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ib0 values: "<< Ib0 << std::endl;
  NumericVector Id0(1);
  Id0[0]  = RcppDeepState_double();
  qs::c_qsave(Id0,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/Id0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Id0 values: "<< Id0 << std::endl;
  NumericVector Ibf  = RcppDeepState_NumericVector();
  qs::c_qsave(Ibf,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/Ibf.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ibf values: "<< Ibf << std::endl;
  NumericVector Idf  = RcppDeepState_NumericVector();
  qs::c_qsave(Idf,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/Idf.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Idf values: "<< Idf << std::endl;
  NumericVector beta(1);
  beta[0]  = RcppDeepState_double();
  qs::c_qsave(beta,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/beta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "beta values: "<< beta << std::endl;
  NumericMatrix LAIme  = RcppDeepState_NumericMatrix();
  qs::c_qsave(LAIme,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/LAIme.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LAIme values: "<< LAIme << std::endl;
  NumericMatrix LAImd  = RcppDeepState_NumericMatrix();
  qs::c_qsave(LAImd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/LAImd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LAImd values: "<< LAImd << std::endl;
  NumericVector kb  = RcppDeepState_NumericVector();
  qs::c_qsave(kb,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/kb.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kb values: "<< kb << std::endl;
  NumericVector kd  = RcppDeepState_NumericVector();
  qs::c_qsave(kd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/kd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kd values: "<< kd << std::endl;
  NumericVector alpha  = RcppDeepState_NumericVector();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  NumericVector gamma  = RcppDeepState_NumericVector();
  qs::c_qsave(gamma,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/cohortSunlitShadeAbsorbedRadiation/inputs/gamma.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gamma values: "<< gamma << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cohortSunlitShadeAbsorbedRadiation(Ib0[0],Id0[0],Ibf,Idf,beta[0],LAIme,LAImd,kb,kd,alpha,gamma);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
