// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// stemWaterCapacity_DeepState_TestHarness_generation.cpp and stemWaterCapacity_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double stemWaterCapacity(double Al2As, double height, double wd);

TEST(medfate_deepstate_test,stemWaterCapacity_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Al2As(1);
  Al2As[0]  = RcppDeepState_double();
  qs::c_qsave(Al2As,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/stemWaterCapacity/inputs/Al2As.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Al2As values: "<< Al2As << std::endl;
  NumericVector height(1);
  height[0]  = RcppDeepState_double();
  qs::c_qsave(height,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/stemWaterCapacity/inputs/height.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "height values: "<< height << std::endl;
  NumericVector wd(1);
  wd[0]  = RcppDeepState_double();
  qs::c_qsave(wd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/stemWaterCapacity/inputs/wd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wd values: "<< wd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    stemWaterCapacity(Al2As[0],height[0],wd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
