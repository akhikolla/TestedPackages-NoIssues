// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fineRootSoilVolume_DeepState_TestHarness_generation.cpp and fineRootSoilVolume_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double fineRootSoilVolume(double fineRootBiomass, double specificRootLength, double rootLengthDensity);

TEST(medfate_deepstate_test,fineRootSoilVolume_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector fineRootBiomass(1);
  fineRootBiomass[0]  = RcppDeepState_double();
  std::string fineRootBiomass_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/fineRootSoilVolume/libFuzzer_fineRootSoilVolume/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fineRootBiomass.qs";
  qs::c_qsave(fineRootBiomass,fineRootBiomass_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fineRootBiomass values: "<< fineRootBiomass << std::endl;
  NumericVector specificRootLength(1);
  specificRootLength[0]  = RcppDeepState_double();
  std::string specificRootLength_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/fineRootSoilVolume/libFuzzer_fineRootSoilVolume/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_specificRootLength.qs";
  qs::c_qsave(specificRootLength,specificRootLength_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "specificRootLength values: "<< specificRootLength << std::endl;
  NumericVector rootLengthDensity(1);
  rootLengthDensity[0]  = RcppDeepState_double();
  std::string rootLengthDensity_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/fineRootSoilVolume/libFuzzer_fineRootSoilVolume/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rootLengthDensity.qs";
  qs::c_qsave(rootLengthDensity,rootLengthDensity_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rootLengthDensity values: "<< rootLengthDensity << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fineRootSoilVolume(fineRootBiomass[0],specificRootLength[0],rootLengthDensity[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
