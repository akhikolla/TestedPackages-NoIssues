// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// relativeSapViscosity_DeepState_TestHarness_generation.cpp and relativeSapViscosity_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double relativeSapViscosity(double sugarConc, double temp);

TEST(medfate_deepstate_test,relativeSapViscosity_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector sugarConc(1);
  sugarConc[0]  = RcppDeepState_double();
  std::string sugarConc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/relativeSapViscosity/libFuzzer_relativeSapViscosity/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sugarConc.qs";
  qs::c_qsave(sugarConc,sugarConc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sugarConc values: "<< sugarConc << std::endl;
  NumericVector temp(1);
  temp[0]  = RcppDeepState_double();
  std::string temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/relativeSapViscosity/libFuzzer_relativeSapViscosity/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_temp.qs";
  qs::c_qsave(temp,temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temp values: "<< temp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    relativeSapViscosity(sugarConc[0],temp[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
