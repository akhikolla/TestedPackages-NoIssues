// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// leafWaterCapacity_DeepState_TestHarness_generation.cpp and leafWaterCapacity_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double leafWaterCapacity(double SLA, double ld);

TEST(medfate_deepstate_test,leafWaterCapacity_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector SLA(1);
  SLA[0]  = RcppDeepState_double();
  qs::c_qsave(SLA,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafWaterCapacity/inputs/SLA.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SLA values: "<< SLA << std::endl;
  NumericVector ld(1);
  ld[0]  = RcppDeepState_double();
  qs::c_qsave(ld,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafWaterCapacity/inputs/ld.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ld values: "<< ld << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    leafWaterCapacity(SLA[0],ld[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
