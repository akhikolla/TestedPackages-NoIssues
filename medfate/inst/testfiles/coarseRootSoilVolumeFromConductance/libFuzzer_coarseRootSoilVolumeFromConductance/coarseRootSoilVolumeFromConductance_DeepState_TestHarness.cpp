// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// coarseRootSoilVolumeFromConductance_DeepState_TestHarness_generation.cpp and coarseRootSoilVolumeFromConductance_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double coarseRootSoilVolumeFromConductance(double Kmax_rootxylem, double VCroot_kmax, double Al2As, NumericVector v, NumericVector d, NumericVector rfc);

TEST(medfate_deepstate_test,coarseRootSoilVolumeFromConductance_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Kmax_rootxylem(1);
  Kmax_rootxylem[0]  = RcppDeepState_double();
  std::string Kmax_rootxylem_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/coarseRootSoilVolumeFromConductance/libFuzzer_coarseRootSoilVolumeFromConductance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Kmax_rootxylem.qs";
  qs::c_qsave(Kmax_rootxylem,Kmax_rootxylem_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Kmax_rootxylem values: "<< Kmax_rootxylem << std::endl;
  NumericVector VCroot_kmax(1);
  VCroot_kmax[0]  = RcppDeepState_double();
  std::string VCroot_kmax_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/coarseRootSoilVolumeFromConductance/libFuzzer_coarseRootSoilVolumeFromConductance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_VCroot_kmax.qs";
  qs::c_qsave(VCroot_kmax,VCroot_kmax_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "VCroot_kmax values: "<< VCroot_kmax << std::endl;
  NumericVector Al2As(1);
  Al2As[0]  = RcppDeepState_double();
  std::string Al2As_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/coarseRootSoilVolumeFromConductance/libFuzzer_coarseRootSoilVolumeFromConductance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Al2As.qs";
  qs::c_qsave(Al2As,Al2As_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Al2As values: "<< Al2As << std::endl;
  NumericVector v  = RcppDeepState_NumericVector();
  std::string v_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/coarseRootSoilVolumeFromConductance/libFuzzer_coarseRootSoilVolumeFromConductance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_v.qs";
  qs::c_qsave(v,v_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v values: "<< v << std::endl;
  NumericVector d  = RcppDeepState_NumericVector();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/coarseRootSoilVolumeFromConductance/libFuzzer_coarseRootSoilVolumeFromConductance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  NumericVector rfc  = RcppDeepState_NumericVector();
  std::string rfc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/coarseRootSoilVolumeFromConductance/libFuzzer_coarseRootSoilVolumeFromConductance/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rfc.qs";
  qs::c_qsave(rfc,rfc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rfc values: "<< rfc << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    coarseRootSoilVolumeFromConductance(Kmax_rootxylem[0],VCroot_kmax[0],Al2As[0],v,d,rfc);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
