// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// leafStarchCapacity_DeepState_TestHarness_generation.cpp and leafStarchCapacity_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double leafStarchCapacity(double LAI, double N, double SLA, double leafDensity);

TEST(medfate_deepstate_test,leafStarchCapacity_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector LAI(1);
  LAI[0]  = RcppDeepState_double();
  std::string LAI_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafStarchCapacity/libFuzzer_leafStarchCapacity/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_LAI.qs";
  qs::c_qsave(LAI,LAI_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LAI values: "<< LAI << std::endl;
  NumericVector N(1);
  N[0]  = RcppDeepState_double();
  std::string N_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafStarchCapacity/libFuzzer_leafStarchCapacity/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_N.qs";
  qs::c_qsave(N,N_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  NumericVector SLA(1);
  SLA[0]  = RcppDeepState_double();
  std::string SLA_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafStarchCapacity/libFuzzer_leafStarchCapacity/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_SLA.qs";
  qs::c_qsave(SLA,SLA_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SLA values: "<< SLA << std::endl;
  NumericVector leafDensity(1);
  leafDensity[0]  = RcppDeepState_double();
  std::string leafDensity_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafStarchCapacity/libFuzzer_leafStarchCapacity/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_leafDensity.qs";
  qs::c_qsave(leafDensity,leafDensity_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "leafDensity values: "<< leafDensity << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    leafStarchCapacity(LAI[0],N[0],SLA[0],leafDensity[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
