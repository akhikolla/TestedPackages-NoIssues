// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// windAdjustmentFactor_DeepState_TestHarness_generation.cpp and windAdjustmentFactor_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double windAdjustmentFactor(double topShrubHeight, double bottomCanopyHeight, double topCanopyHeight, double canopyCover);

TEST(medfate_deepstate_test,windAdjustmentFactor_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector topShrubHeight(1);
  topShrubHeight[0]  = RcppDeepState_double();
  std::string topShrubHeight_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/windAdjustmentFactor/libFuzzer_windAdjustmentFactor/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_topShrubHeight.qs";
  qs::c_qsave(topShrubHeight,topShrubHeight_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "topShrubHeight values: "<< topShrubHeight << std::endl;
  NumericVector bottomCanopyHeight(1);
  bottomCanopyHeight[0]  = RcppDeepState_double();
  std::string bottomCanopyHeight_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/windAdjustmentFactor/libFuzzer_windAdjustmentFactor/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_bottomCanopyHeight.qs";
  qs::c_qsave(bottomCanopyHeight,bottomCanopyHeight_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bottomCanopyHeight values: "<< bottomCanopyHeight << std::endl;
  NumericVector topCanopyHeight(1);
  topCanopyHeight[0]  = RcppDeepState_double();
  std::string topCanopyHeight_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/windAdjustmentFactor/libFuzzer_windAdjustmentFactor/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_topCanopyHeight.qs";
  qs::c_qsave(topCanopyHeight,topCanopyHeight_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "topCanopyHeight values: "<< topCanopyHeight << std::endl;
  NumericVector canopyCover(1);
  canopyCover[0]  = RcppDeepState_double();
  std::string canopyCover_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/windAdjustmentFactor/libFuzzer_windAdjustmentFactor/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_canopyCover.qs";
  qs::c_qsave(canopyCover,canopyCover_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "canopyCover values: "<< canopyCover << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    windAdjustmentFactor(topShrubHeight[0],bottomCanopyHeight[0],topCanopyHeight[0],canopyCover[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
