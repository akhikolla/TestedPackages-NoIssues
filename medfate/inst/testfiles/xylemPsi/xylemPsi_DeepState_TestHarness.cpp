// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// xylemPsi_DeepState_TestHarness_generation.cpp and xylemPsi_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double xylemPsi(double kxylem, double kxylemmax, double c, double d);

TEST(medfate_deepstate_test,xylemPsi_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector kxylem(1);
  kxylem[0]  = RcppDeepState_double();
  qs::c_qsave(kxylem,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/xylemPsi/inputs/kxylem.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kxylem values: "<< kxylem << std::endl;
  NumericVector kxylemmax(1);
  kxylemmax[0]  = RcppDeepState_double();
  qs::c_qsave(kxylemmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/xylemPsi/inputs/kxylemmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kxylemmax values: "<< kxylemmax << std::endl;
  NumericVector c(1);
  c[0]  = RcppDeepState_double();
  qs::c_qsave(c,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/xylemPsi/inputs/c.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "c values: "<< c << std::endl;
  NumericVector d(1);
  d[0]  = RcppDeepState_double();
  qs::c_qsave(d,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/xylemPsi/inputs/d.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    xylemPsi(kxylem[0],kxylemmax[0],c[0],d[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
