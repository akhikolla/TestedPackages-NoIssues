// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// EMCdesorption_DeepState_TestHarness_generation.cpp and EMCdesorption_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double EMCdesorption(double fuelTemperature, double fuelHumidity);

TEST(medfate_deepstate_test,EMCdesorption_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector fuelTemperature(1);
  fuelTemperature[0]  = RcppDeepState_double();
  std::string fuelTemperature_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/EMCdesorption/libFuzzer_EMCdesorption/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fuelTemperature.qs";
  qs::c_qsave(fuelTemperature,fuelTemperature_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fuelTemperature values: "<< fuelTemperature << std::endl;
  NumericVector fuelHumidity(1);
  fuelHumidity[0]  = RcppDeepState_double();
  std::string fuelHumidity_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/EMCdesorption/libFuzzer_EMCdesorption/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_fuelHumidity.qs";
  qs::c_qsave(fuelHumidity,fuelHumidity_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "fuelHumidity values: "<< fuelHumidity << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    EMCdesorption(fuelTemperature[0],fuelHumidity[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
