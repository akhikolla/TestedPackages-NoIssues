// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// leafDevelopmentStatus_DeepState_TestHarness_generation.cpp and leafDevelopmentStatus_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector leafDevelopmentStatus(NumericVector Sgdd, NumericVector gdd, double unfoldingDD);

TEST(medfate_deepstate_test,leafDevelopmentStatus_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Sgdd  = RcppDeepState_NumericVector();
  qs::c_qsave(Sgdd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafDevelopmentStatus/inputs/Sgdd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Sgdd values: "<< Sgdd << std::endl;
  NumericVector gdd  = RcppDeepState_NumericVector();
  qs::c_qsave(gdd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafDevelopmentStatus/inputs/gdd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gdd values: "<< gdd << std::endl;
  NumericVector unfoldingDD(1);
  unfoldingDD[0]  = RcppDeepState_double();
  qs::c_qsave(unfoldingDD,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafDevelopmentStatus/inputs/unfoldingDD.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "unfoldingDD values: "<< unfoldingDD << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    leafDevelopmentStatus(Sgdd,gdd,unfoldingDD[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
