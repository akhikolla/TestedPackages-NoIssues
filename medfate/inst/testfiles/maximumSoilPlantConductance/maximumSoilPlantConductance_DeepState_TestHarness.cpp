// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// maximumSoilPlantConductance_DeepState_TestHarness_generation.cpp and maximumSoilPlantConductance_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double maximumSoilPlantConductance(NumericVector krhizomax, NumericVector krootmax, double kstemmax, double kleafmax);

TEST(medfate_deepstate_test,maximumSoilPlantConductance_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector krhizomax  = RcppDeepState_NumericVector();
  qs::c_qsave(krhizomax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/maximumSoilPlantConductance/inputs/krhizomax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "krhizomax values: "<< krhizomax << std::endl;
  NumericVector krootmax  = RcppDeepState_NumericVector();
  qs::c_qsave(krootmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/maximumSoilPlantConductance/inputs/krootmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "krootmax values: "<< krootmax << std::endl;
  NumericVector kstemmax(1);
  kstemmax[0]  = RcppDeepState_double();
  qs::c_qsave(kstemmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/maximumSoilPlantConductance/inputs/kstemmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kstemmax values: "<< kstemmax << std::endl;
  NumericVector kleafmax(1);
  kleafmax[0]  = RcppDeepState_double();
  qs::c_qsave(kleafmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/maximumSoilPlantConductance/inputs/kleafmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kleafmax values: "<< kleafmax << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    maximumSoilPlantConductance(krhizomax,krootmax,kstemmax[0],kleafmax[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
