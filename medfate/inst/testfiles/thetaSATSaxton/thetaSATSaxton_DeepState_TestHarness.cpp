// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// thetaSATSaxton_DeepState_TestHarness_generation.cpp and thetaSATSaxton_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double thetaSATSaxton(double clay, double sand, double om);

TEST(medfate_deepstate_test,thetaSATSaxton_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector clay(1);
  clay[0]  = RcppDeepState_double();
  qs::c_qsave(clay,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/thetaSATSaxton/inputs/clay.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "clay values: "<< clay << std::endl;
  NumericVector sand(1);
  sand[0]  = RcppDeepState_double();
  qs::c_qsave(sand,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/thetaSATSaxton/inputs/sand.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sand values: "<< sand << std::endl;
  NumericVector om(1);
  om[0]  = RcppDeepState_double();
  qs::c_qsave(om,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/thetaSATSaxton/inputs/om.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "om values: "<< om << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    thetaSATSaxton(clay[0],sand[0],om[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
