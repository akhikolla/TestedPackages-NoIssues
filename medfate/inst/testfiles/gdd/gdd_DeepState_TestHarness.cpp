// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gdd_DeepState_TestHarness_generation.cpp and gdd_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector gdd(IntegerVector DOY, NumericVector Temp, double Tbase, double cum);

TEST(medfate_deepstate_test,gdd_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector DOY  = RcppDeepState_IntegerVector();
  qs::c_qsave(DOY,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/gdd/inputs/DOY.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "DOY values: "<< DOY << std::endl;
  NumericVector Temp  = RcppDeepState_NumericVector();
  qs::c_qsave(Temp,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/gdd/inputs/Temp.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Temp values: "<< Temp << std::endl;
  NumericVector Tbase(1);
  Tbase[0]  = RcppDeepState_double();
  qs::c_qsave(Tbase,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/gdd/inputs/Tbase.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Tbase values: "<< Tbase << std::endl;
  NumericVector cum(1);
  cum[0]  = RcppDeepState_double();
  qs::c_qsave(cum,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/gdd/inputs/cum.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cum values: "<< cum << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gdd(DOY,Temp,Tbase[0],cum[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
