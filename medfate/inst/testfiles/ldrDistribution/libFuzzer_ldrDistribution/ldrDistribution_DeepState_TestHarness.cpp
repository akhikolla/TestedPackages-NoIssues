// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ldrDistribution_DeepState_TestHarness_generation.cpp and ldrDistribution_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix ldrDistribution(NumericVector Z50, NumericVector Z95, NumericVector d);

TEST(medfate_deepstate_test,ldrDistribution_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Z50  = RcppDeepState_NumericVector();
  std::string Z50_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ldrDistribution/libFuzzer_ldrDistribution/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Z50.qs";
  qs::c_qsave(Z50,Z50_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Z50 values: "<< Z50 << std::endl;
  NumericVector Z95  = RcppDeepState_NumericVector();
  std::string Z95_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ldrDistribution/libFuzzer_ldrDistribution/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Z95.qs";
  qs::c_qsave(Z95,Z95_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Z95 values: "<< Z95 << std::endl;
  NumericVector d  = RcppDeepState_NumericVector();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/ldrDistribution/libFuzzer_ldrDistribution/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ldrDistribution(Z50,Z95,d);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
