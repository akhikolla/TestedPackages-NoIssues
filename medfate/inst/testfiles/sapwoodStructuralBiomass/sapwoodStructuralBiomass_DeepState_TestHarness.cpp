// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sapwoodStructuralBiomass_DeepState_TestHarness_generation.cpp and sapwoodStructuralBiomass_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double sapwoodStructuralBiomass(double SA, double H, NumericVector L, NumericVector V, double woodDensity);

TEST(medfate_deepstate_test,sapwoodStructuralBiomass_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector SA(1);
  SA[0]  = RcppDeepState_double();
  qs::c_qsave(SA,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/sapwoodStructuralBiomass/inputs/SA.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SA values: "<< SA << std::endl;
  NumericVector H(1);
  H[0]  = RcppDeepState_double();
  qs::c_qsave(H,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/sapwoodStructuralBiomass/inputs/H.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "H values: "<< H << std::endl;
  NumericVector L  = RcppDeepState_NumericVector();
  qs::c_qsave(L,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/sapwoodStructuralBiomass/inputs/L.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "L values: "<< L << std::endl;
  NumericVector V  = RcppDeepState_NumericVector();
  qs::c_qsave(V,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/sapwoodStructuralBiomass/inputs/V.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "V values: "<< V << std::endl;
  NumericVector woodDensity(1);
  woodDensity[0]  = RcppDeepState_double();
  qs::c_qsave(woodDensity,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/sapwoodStructuralBiomass/inputs/woodDensity.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "woodDensity values: "<< woodDensity << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sapwoodStructuralBiomass(SA[0],H[0],L,V,woodDensity[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
