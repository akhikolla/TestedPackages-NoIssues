// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// interceptionGashDay_DeepState_TestHarness_generation.cpp and interceptionGashDay_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double interceptionGashDay(double Precipitation, double Cm, double p, double ER);

TEST(medfate_deepstate_test,interceptionGashDay_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Precipitation(1);
  Precipitation[0]  = RcppDeepState_double();
  qs::c_qsave(Precipitation,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/interceptionGashDay/inputs/Precipitation.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Precipitation values: "<< Precipitation << std::endl;
  NumericVector Cm(1);
  Cm[0]  = RcppDeepState_double();
  qs::c_qsave(Cm,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/interceptionGashDay/inputs/Cm.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Cm values: "<< Cm << std::endl;
  NumericVector p(1);
  p[0]  = RcppDeepState_double();
  qs::c_qsave(p,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/interceptionGashDay/inputs/p.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector ER(1);
  ER[0]  = RcppDeepState_double();
  qs::c_qsave(ER,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/interceptionGashDay/inputs/ER.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ER values: "<< ER << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    interceptionGashDay(Precipitation[0],Cm[0],p[0],ER[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
