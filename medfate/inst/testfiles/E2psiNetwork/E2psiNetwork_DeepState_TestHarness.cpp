// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// E2psiNetwork_DeepState_TestHarness_generation.cpp and E2psiNetwork_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List E2psiNetwork(double E, NumericVector psiSoil, NumericVector krhizomax, NumericVector nsoil, NumericVector alphasoil, NumericVector krootmax, double rootc, double rootd, double kstemmax, double stemc, double stemd, double kleafmax, double leafc, double leafd, NumericVector PLCstem, NumericVector psiIni, int ntrial, double psiTol, double ETol);

TEST(medfate_deepstate_test,E2psiNetwork_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector E(1);
  E[0]  = RcppDeepState_double();
  qs::c_qsave(E,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/E.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "E values: "<< E << std::endl;
  NumericVector psiSoil  = RcppDeepState_NumericVector();
  qs::c_qsave(psiSoil,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/psiSoil.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiSoil values: "<< psiSoil << std::endl;
  NumericVector krhizomax  = RcppDeepState_NumericVector();
  qs::c_qsave(krhizomax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/krhizomax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "krhizomax values: "<< krhizomax << std::endl;
  NumericVector nsoil  = RcppDeepState_NumericVector();
  qs::c_qsave(nsoil,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/nsoil.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nsoil values: "<< nsoil << std::endl;
  NumericVector alphasoil  = RcppDeepState_NumericVector();
  qs::c_qsave(alphasoil,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/alphasoil.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alphasoil values: "<< alphasoil << std::endl;
  NumericVector krootmax  = RcppDeepState_NumericVector();
  qs::c_qsave(krootmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/krootmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "krootmax values: "<< krootmax << std::endl;
  NumericVector rootc(1);
  rootc[0]  = RcppDeepState_double();
  qs::c_qsave(rootc,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/rootc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rootc values: "<< rootc << std::endl;
  NumericVector rootd(1);
  rootd[0]  = RcppDeepState_double();
  qs::c_qsave(rootd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/rootd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rootd values: "<< rootd << std::endl;
  NumericVector kstemmax(1);
  kstemmax[0]  = RcppDeepState_double();
  qs::c_qsave(kstemmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/kstemmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kstemmax values: "<< kstemmax << std::endl;
  NumericVector stemc(1);
  stemc[0]  = RcppDeepState_double();
  qs::c_qsave(stemc,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/stemc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stemc values: "<< stemc << std::endl;
  NumericVector stemd(1);
  stemd[0]  = RcppDeepState_double();
  qs::c_qsave(stemd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/stemd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stemd values: "<< stemd << std::endl;
  NumericVector kleafmax(1);
  kleafmax[0]  = RcppDeepState_double();
  qs::c_qsave(kleafmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/kleafmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kleafmax values: "<< kleafmax << std::endl;
  NumericVector leafc(1);
  leafc[0]  = RcppDeepState_double();
  qs::c_qsave(leafc,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/leafc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "leafc values: "<< leafc << std::endl;
  NumericVector leafd(1);
  leafd[0]  = RcppDeepState_double();
  qs::c_qsave(leafd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/leafd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "leafd values: "<< leafd << std::endl;
  NumericVector PLCstem  = RcppDeepState_NumericVector();
  qs::c_qsave(PLCstem,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/PLCstem.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PLCstem values: "<< PLCstem << std::endl;
  NumericVector psiIni  = RcppDeepState_NumericVector();
  qs::c_qsave(psiIni,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/psiIni.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiIni values: "<< psiIni << std::endl;
  IntegerVector ntrial(1);
  ntrial[0]  = RcppDeepState_int();
  qs::c_qsave(ntrial,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/ntrial.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ntrial values: "<< ntrial << std::endl;
  NumericVector psiTol(1);
  psiTol[0]  = RcppDeepState_double();
  qs::c_qsave(psiTol,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/psiTol.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiTol values: "<< psiTol << std::endl;
  NumericVector ETol(1);
  ETol[0]  = RcppDeepState_double();
  qs::c_qsave(ETol,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/E2psiNetwork/inputs/ETol.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ETol values: "<< ETol << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    E2psiNetwork(E[0],psiSoil,krhizomax,nsoil,alphasoil,krootmax,rootc[0],rootd[0],kstemmax[0],stemc[0],stemd[0],kleafmax[0],leafc[0],leafd[0],PLCstem,psiIni,ntrial[0],psiTol[0],ETol[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
