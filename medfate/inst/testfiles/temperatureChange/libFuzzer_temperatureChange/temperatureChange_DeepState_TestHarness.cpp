// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// temperatureChange_DeepState_TestHarness_generation.cpp and temperatureChange_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector temperatureChange(NumericVector dVec, NumericVector Temp, NumericVector sand, NumericVector clay, NumericVector W, NumericVector Theta_FC, double Gdown);

TEST(medfate_deepstate_test,temperatureChange_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector dVec  = RcppDeepState_NumericVector();
  std::string dVec_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dVec.qs";
  qs::c_qsave(dVec,dVec_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dVec values: "<< dVec << std::endl;
  NumericVector Temp  = RcppDeepState_NumericVector();
  std::string Temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Temp.qs";
  qs::c_qsave(Temp,Temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Temp values: "<< Temp << std::endl;
  NumericVector sand  = RcppDeepState_NumericVector();
  std::string sand_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sand.qs";
  qs::c_qsave(sand,sand_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sand values: "<< sand << std::endl;
  NumericVector clay  = RcppDeepState_NumericVector();
  std::string clay_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_clay.qs";
  qs::c_qsave(clay,clay_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "clay values: "<< clay << std::endl;
  NumericVector W  = RcppDeepState_NumericVector();
  std::string W_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_W.qs";
  qs::c_qsave(W,W_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  NumericVector Theta_FC  = RcppDeepState_NumericVector();
  std::string Theta_FC_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Theta_FC.qs";
  qs::c_qsave(Theta_FC,Theta_FC_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Theta_FC values: "<< Theta_FC << std::endl;
  NumericVector Gdown(1);
  Gdown[0]  = RcppDeepState_double();
  std::string Gdown_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/temperatureChange/libFuzzer_temperatureChange/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Gdown.qs";
  qs::c_qsave(Gdown,Gdown_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Gdown values: "<< Gdown << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    temperatureChange(dVec,Temp,sand,clay,W,Theta_FC,Gdown[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
