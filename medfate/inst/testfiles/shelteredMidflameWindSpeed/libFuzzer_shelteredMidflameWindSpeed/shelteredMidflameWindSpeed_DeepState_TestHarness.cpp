// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// shelteredMidflameWindSpeed_DeepState_TestHarness_generation.cpp and shelteredMidflameWindSpeed_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double shelteredMidflameWindSpeed(double wind20H, double crownFillProportion, double topCanopyHeight);

TEST(medfate_deepstate_test,shelteredMidflameWindSpeed_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector wind20H(1);
  wind20H[0]  = RcppDeepState_double();
  std::string wind20H_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/shelteredMidflameWindSpeed/libFuzzer_shelteredMidflameWindSpeed/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_wind20H.qs";
  qs::c_qsave(wind20H,wind20H_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wind20H values: "<< wind20H << std::endl;
  NumericVector crownFillProportion(1);
  crownFillProportion[0]  = RcppDeepState_double();
  std::string crownFillProportion_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/shelteredMidflameWindSpeed/libFuzzer_shelteredMidflameWindSpeed/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_crownFillProportion.qs";
  qs::c_qsave(crownFillProportion,crownFillProportion_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "crownFillProportion values: "<< crownFillProportion << std::endl;
  NumericVector topCanopyHeight(1);
  topCanopyHeight[0]  = RcppDeepState_double();
  std::string topCanopyHeight_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/shelteredMidflameWindSpeed/libFuzzer_shelteredMidflameWindSpeed/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_topCanopyHeight.qs";
  qs::c_qsave(topCanopyHeight,topCanopyHeight_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "topCanopyHeight values: "<< topCanopyHeight << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    shelteredMidflameWindSpeed(wind20H[0],crownFillProportion[0],topCanopyHeight[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
