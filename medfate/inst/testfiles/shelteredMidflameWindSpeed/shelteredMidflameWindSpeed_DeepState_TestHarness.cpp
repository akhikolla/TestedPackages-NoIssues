// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// shelteredMidflameWindSpeed_DeepState_TestHarness_generation.cpp and shelteredMidflameWindSpeed_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double shelteredMidflameWindSpeed(double wind20H, double crownFillProportion, double topCanopyHeight);

TEST(medfate_deepstate_test,shelteredMidflameWindSpeed_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector wind20H(1);
  wind20H[0]  = RcppDeepState_double();
  qs::c_qsave(wind20H,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/shelteredMidflameWindSpeed/inputs/wind20H.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wind20H values: "<< wind20H << std::endl;
  NumericVector crownFillProportion(1);
  crownFillProportion[0]  = RcppDeepState_double();
  qs::c_qsave(crownFillProportion,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/shelteredMidflameWindSpeed/inputs/crownFillProportion.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "crownFillProportion values: "<< crownFillProportion << std::endl;
  NumericVector topCanopyHeight(1);
  topCanopyHeight[0]  = RcppDeepState_double();
  qs::c_qsave(topCanopyHeight,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/shelteredMidflameWindSpeed/inputs/topCanopyHeight.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "topCanopyHeight values: "<< topCanopyHeight << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    shelteredMidflameWindSpeed(wind20H[0],crownFillProportion[0],topCanopyHeight[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
