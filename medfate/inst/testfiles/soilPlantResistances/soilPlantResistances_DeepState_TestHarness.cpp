// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// soilPlantResistances_DeepState_TestHarness_generation.cpp and soilPlantResistances_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector soilPlantResistances(NumericVector psiSoil, NumericVector psiRhizo, NumericVector psiStem, NumericVector PLCstem, double psiLeaf, NumericVector krhizomax, NumericVector n, NumericVector alpha, NumericVector krootmax, double rootc, double rootd, double kstemmax, double stemc, double stemd, double kleafmax, double leafc, double leafd);

TEST(medfate_deepstate_test,soilPlantResistances_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector psiSoil  = RcppDeepState_NumericVector();
  qs::c_qsave(psiSoil,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/psiSoil.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiSoil values: "<< psiSoil << std::endl;
  NumericVector psiRhizo  = RcppDeepState_NumericVector();
  qs::c_qsave(psiRhizo,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/psiRhizo.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiRhizo values: "<< psiRhizo << std::endl;
  NumericVector psiStem  = RcppDeepState_NumericVector();
  qs::c_qsave(psiStem,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/psiStem.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiStem values: "<< psiStem << std::endl;
  NumericVector PLCstem  = RcppDeepState_NumericVector();
  qs::c_qsave(PLCstem,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/PLCstem.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "PLCstem values: "<< PLCstem << std::endl;
  NumericVector psiLeaf(1);
  psiLeaf[0]  = RcppDeepState_double();
  qs::c_qsave(psiLeaf,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/psiLeaf.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiLeaf values: "<< psiLeaf << std::endl;
  NumericVector krhizomax  = RcppDeepState_NumericVector();
  qs::c_qsave(krhizomax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/krhizomax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "krhizomax values: "<< krhizomax << std::endl;
  NumericVector n  = RcppDeepState_NumericVector();
  qs::c_qsave(n,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/n.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector alpha  = RcppDeepState_NumericVector();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  NumericVector krootmax  = RcppDeepState_NumericVector();
  qs::c_qsave(krootmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/krootmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "krootmax values: "<< krootmax << std::endl;
  NumericVector rootc(1);
  rootc[0]  = RcppDeepState_double();
  qs::c_qsave(rootc,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/rootc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rootc values: "<< rootc << std::endl;
  NumericVector rootd(1);
  rootd[0]  = RcppDeepState_double();
  qs::c_qsave(rootd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/rootd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rootd values: "<< rootd << std::endl;
  NumericVector kstemmax(1);
  kstemmax[0]  = RcppDeepState_double();
  qs::c_qsave(kstemmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/kstemmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kstemmax values: "<< kstemmax << std::endl;
  NumericVector stemc(1);
  stemc[0]  = RcppDeepState_double();
  qs::c_qsave(stemc,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/stemc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stemc values: "<< stemc << std::endl;
  NumericVector stemd(1);
  stemd[0]  = RcppDeepState_double();
  qs::c_qsave(stemd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/stemd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stemd values: "<< stemd << std::endl;
  NumericVector kleafmax(1);
  kleafmax[0]  = RcppDeepState_double();
  qs::c_qsave(kleafmax,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/kleafmax.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kleafmax values: "<< kleafmax << std::endl;
  NumericVector leafc(1);
  leafc[0]  = RcppDeepState_double();
  qs::c_qsave(leafc,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/leafc.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "leafc values: "<< leafc << std::endl;
  NumericVector leafd(1);
  leafd[0]  = RcppDeepState_double();
  qs::c_qsave(leafd,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/soilPlantResistances/inputs/leafd.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "leafd values: "<< leafd << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    soilPlantResistances(psiSoil,psiRhizo,psiStem,PLCstem,psiLeaf[0],krhizomax,n,alpha,krootmax,rootc[0],rootd[0],kstemmax[0],stemc[0],stemd[0],kleafmax[0],leafc[0],leafd[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
