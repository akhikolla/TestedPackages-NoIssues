// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// criticalFirelineIntensity_DeepState_TestHarness_generation.cpp and criticalFirelineIntensity_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double criticalFirelineIntensity(double CBH, double M);

TEST(medfate_deepstate_test,criticalFirelineIntensity_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector CBH(1);
  CBH[0]  = RcppDeepState_double();
  qs::c_qsave(CBH,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/criticalFirelineIntensity/inputs/CBH.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "CBH values: "<< CBH << std::endl;
  NumericVector M(1);
  M[0]  = RcppDeepState_double();
  qs::c_qsave(M,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/criticalFirelineIntensity/inputs/M.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M values: "<< M << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    criticalFirelineIntensity(CBH[0],M[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
