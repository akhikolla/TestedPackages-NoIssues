// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// erFactor_DeepState_TestHarness_generation.cpp and erFactor_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double erFactor(int doy, double pet, double prec, double Rconv, double Rsyn);

TEST(medfate_deepstate_test,erFactor_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector doy(1);
  doy[0]  = RcppDeepState_int();
  qs::c_qsave(doy,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/erFactor/inputs/doy.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "doy values: "<< doy << std::endl;
  NumericVector pet(1);
  pet[0]  = RcppDeepState_double();
  qs::c_qsave(pet,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/erFactor/inputs/pet.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pet values: "<< pet << std::endl;
  NumericVector prec(1);
  prec[0]  = RcppDeepState_double();
  qs::c_qsave(prec,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/erFactor/inputs/prec.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prec values: "<< prec << std::endl;
  NumericVector Rconv(1);
  Rconv[0]  = RcppDeepState_double();
  qs::c_qsave(Rconv,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/erFactor/inputs/Rconv.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rconv values: "<< Rconv << std::endl;
  NumericVector Rsyn(1);
  Rsyn[0]  = RcppDeepState_double();
  qs::c_qsave(Rsyn,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/erFactor/inputs/Rsyn.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rsyn values: "<< Rsyn << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    erFactor(doy[0],pet[0],prec[0],Rconv[0],Rsyn[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
