// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rockWeight2Volume_DeepState_TestHarness_generation.cpp and rockWeight2Volume_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double rockWeight2Volume(double pWeight, double bulkDensity, double rockDensity);

TEST(medfate_deepstate_test,rockWeight2Volume_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector pWeight(1);
  pWeight[0]  = RcppDeepState_double();
  std::string pWeight_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/rockWeight2Volume/libFuzzer_rockWeight2Volume/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pWeight.qs";
  qs::c_qsave(pWeight,pWeight_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pWeight values: "<< pWeight << std::endl;
  NumericVector bulkDensity(1);
  bulkDensity[0]  = RcppDeepState_double();
  std::string bulkDensity_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/rockWeight2Volume/libFuzzer_rockWeight2Volume/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_bulkDensity.qs";
  qs::c_qsave(bulkDensity,bulkDensity_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bulkDensity values: "<< bulkDensity << std::endl;
  NumericVector rockDensity(1);
  rockDensity[0]  = RcppDeepState_double();
  std::string rockDensity_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/rockWeight2Volume/libFuzzer_rockWeight2Volume/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rockDensity.qs";
  qs::c_qsave(rockDensity,rockDensity_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rockDensity values: "<< rockDensity << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rockWeight2Volume(pWeight[0],bulkDensity[0],rockDensity[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
