// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// symplasticRelativeWaterContent_DeepState_TestHarness_generation.cpp and symplasticRelativeWaterContent_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double symplasticRelativeWaterContent(double psiSym, double pi0, double epsilon);

TEST(medfate_deepstate_test,symplasticRelativeWaterContent_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector psiSym(1);
  psiSym[0]  = RcppDeepState_double();
  qs::c_qsave(psiSym,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/symplasticRelativeWaterContent/inputs/psiSym.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "psiSym values: "<< psiSym << std::endl;
  NumericVector pi0(1);
  pi0[0]  = RcppDeepState_double();
  qs::c_qsave(pi0,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/symplasticRelativeWaterContent/inputs/pi0.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pi0 values: "<< pi0 << std::endl;
  NumericVector epsilon(1);
  epsilon[0]  = RcppDeepState_double();
  qs::c_qsave(epsilon,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/symplasticRelativeWaterContent/inputs/epsilon.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "epsilon values: "<< epsilon << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    symplasticRelativeWaterContent(psiSym[0],pi0[0],epsilon[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
