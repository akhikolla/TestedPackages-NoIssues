// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// JmaxTemp_DeepState_TestHarness_generation.cpp and JmaxTemp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double JmaxTemp(double Jmax298, double Tleaf);

TEST(medfate_deepstate_test,JmaxTemp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Jmax298(1);
  Jmax298[0]  = RcppDeepState_double();
  std::string Jmax298_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/JmaxTemp/libFuzzer_JmaxTemp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Jmax298.qs";
  qs::c_qsave(Jmax298,Jmax298_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Jmax298 values: "<< Jmax298 << std::endl;
  NumericVector Tleaf(1);
  Tleaf[0]  = RcppDeepState_double();
  std::string Tleaf_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/JmaxTemp/libFuzzer_JmaxTemp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Tleaf.qs";
  qs::c_qsave(Tleaf,Tleaf_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Tleaf values: "<< Tleaf << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    JmaxTemp(Jmax298[0],Tleaf[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
