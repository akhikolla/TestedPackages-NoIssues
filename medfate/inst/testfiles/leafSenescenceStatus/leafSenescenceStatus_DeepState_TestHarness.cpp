// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// leafSenescenceStatus_DeepState_TestHarness_generation.cpp and leafSenescenceStatus_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

LogicalVector leafSenescenceStatus(NumericVector Ssen, NumericVector sen);

TEST(medfate_deepstate_test,leafSenescenceStatus_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Ssen  = RcppDeepState_NumericVector();
  qs::c_qsave(Ssen,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafSenescenceStatus/inputs/Ssen.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ssen values: "<< Ssen << std::endl;
  NumericVector sen  = RcppDeepState_NumericVector();
  qs::c_qsave(sen,"/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafSenescenceStatus/inputs/sen.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sen values: "<< sen << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    leafSenescenceStatus(Ssen,sen);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
