// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// leafSenescenceStatus_DeepState_TestHarness_generation.cpp and leafSenescenceStatus_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

LogicalVector leafSenescenceStatus(NumericVector Ssen, NumericVector sen);

TEST(medfate_deepstate_test,leafSenescenceStatus_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Ssen  = RcppDeepState_NumericVector();
  std::string Ssen_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafSenescenceStatus/libFuzzer_leafSenescenceStatus/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Ssen.qs";
  qs::c_qsave(Ssen,Ssen_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ssen values: "<< Ssen << std::endl;
  NumericVector sen  = RcppDeepState_NumericVector();
  std::string sen_t = "/home/akhila/fuzzer_packages/fuzzedpackages/medfate/inst/testfiles/leafSenescenceStatus/libFuzzer_leafSenescenceStatus/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sen.qs";
  qs::c_qsave(sen,sen_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sen values: "<< sen << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    leafSenescenceStatus(Ssen,sen);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
