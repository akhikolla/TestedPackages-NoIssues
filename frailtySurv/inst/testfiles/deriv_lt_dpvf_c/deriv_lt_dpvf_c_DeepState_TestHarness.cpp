// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// deriv_lt_dpvf_c_DeepState_TestHarness_generation.cpp and deriv_lt_dpvf_c_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double deriv_lt_dpvf_c(int m, double s, double alpha);

TEST(frailtySurv_deepstate_test,deriv_lt_dpvf_c_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  qs::c_qsave(m,"/home/akhila/fuzzer_packages/fuzzedpackages/frailtySurv/inst/testfiles/deriv_lt_dpvf_c/inputs/m.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  NumericVector s(1);
  s[0]  = RcppDeepState_double();
  qs::c_qsave(s,"/home/akhila/fuzzer_packages/fuzzedpackages/frailtySurv/inst/testfiles/deriv_lt_dpvf_c/inputs/s.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  NumericVector alpha(1);
  alpha[0]  = RcppDeepState_double();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/frailtySurv/inst/testfiles/deriv_lt_dpvf_c/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    deriv_lt_dpvf_c(m[0],s[0],alpha[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
