// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ChangePointAnalyzePoissUnRes_DeepState_TestHarness_generation.cpp and ChangePointAnalyzePoissUnRes_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector ChangePointAnalyzePoissUnRes(NumericVector Data, IntegerVector InputLength, NumericVector Prior);

TEST(StepSignalMargiLike_deepstate_test,ChangePointAnalyzePoissUnRes_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector Data  = RcppDeepState_NumericVector();
  qs::c_qsave(Data,"/home/akhila/fuzzer_packages/fuzzedpackages/StepSignalMargiLike/inst/testfiles/ChangePointAnalyzePoissUnRes/inputs/Data.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Data values: "<< Data << std::endl;
  IntegerVector InputLength  = RcppDeepState_IntegerVector();
  qs::c_qsave(InputLength,"/home/akhila/fuzzer_packages/fuzzedpackages/StepSignalMargiLike/inst/testfiles/ChangePointAnalyzePoissUnRes/inputs/InputLength.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "InputLength values: "<< InputLength << std::endl;
  NumericVector Prior  = RcppDeepState_NumericVector();
  qs::c_qsave(Prior,"/home/akhila/fuzzer_packages/fuzzedpackages/StepSignalMargiLike/inst/testfiles/ChangePointAnalyzePoissUnRes/inputs/Prior.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Prior values: "<< Prior << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ChangePointAnalyzePoissUnRes(Data,InputLength,Prior);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
