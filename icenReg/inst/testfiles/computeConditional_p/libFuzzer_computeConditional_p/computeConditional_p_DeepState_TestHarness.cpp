// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// computeConditional_p_DeepState_TestHarness_generation.cpp and computeConditional_p_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector computeConditional_p(Rcpp::NumericVector q, Rcpp::NumericVector etas, Rcpp::NumericMatrix baselineParams, Rcpp::CharacterVector reg_model, Rcpp::CharacterVector base_dist);

TEST(icenReg_deepstate_test,computeConditional_p_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector q  = RcppDeepState_NumericVector();
  std::string q_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icenReg/inst/testfiles/computeConditional_p/libFuzzer_computeConditional_p/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_q.qs";
  qs::c_qsave(q,q_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  NumericVector etas  = RcppDeepState_NumericVector();
  std::string etas_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icenReg/inst/testfiles/computeConditional_p/libFuzzer_computeConditional_p/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_etas.qs";
  qs::c_qsave(etas,etas_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "etas values: "<< etas << std::endl;
  NumericMatrix baselineParams  = RcppDeepState_NumericMatrix();
  std::string baselineParams_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icenReg/inst/testfiles/computeConditional_p/libFuzzer_computeConditional_p/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_baselineParams.qs";
  qs::c_qsave(baselineParams,baselineParams_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "baselineParams values: "<< baselineParams << std::endl;
  CharacterVector reg_model  = RcppDeepState_CharacterVector();
  std::string reg_model_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icenReg/inst/testfiles/computeConditional_p/libFuzzer_computeConditional_p/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_reg_model.qs";
  qs::c_qsave(reg_model,reg_model_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "reg_model values: "<< reg_model << std::endl;
  CharacterVector base_dist  = RcppDeepState_CharacterVector();
  std::string base_dist_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icenReg/inst/testfiles/computeConditional_p/libFuzzer_computeConditional_p/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_base_dist.qs";
  qs::c_qsave(base_dist,base_dist_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "base_dist values: "<< base_dist << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    computeConditional_p(q,etas,baselineParams,reg_model,base_dist);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
