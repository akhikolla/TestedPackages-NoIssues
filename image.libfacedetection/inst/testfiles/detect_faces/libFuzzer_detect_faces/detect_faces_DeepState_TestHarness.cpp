// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// detect_faces_DeepState_TestHarness_generation.cpp and detect_faces_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List detect_faces(IntegerVector x, int width, int height, int step);

TEST(image.libfacedetection_deepstate_test,detect_faces_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector x  = RcppDeepState_IntegerVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.libfacedetection/inst/testfiles/detect_faces/libFuzzer_detect_faces/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector width(1);
  width[0]  = RcppDeepState_int();
  std::string width_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.libfacedetection/inst/testfiles/detect_faces/libFuzzer_detect_faces/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_width.qs";
  qs::c_qsave(width,width_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "width values: "<< width << std::endl;
  IntegerVector height(1);
  height[0]  = RcppDeepState_int();
  std::string height_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.libfacedetection/inst/testfiles/detect_faces/libFuzzer_detect_faces/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_height.qs";
  qs::c_qsave(height,height_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "height values: "<< height << std::endl;
  IntegerVector step(1);
  step[0]  = RcppDeepState_int();
  std::string step_t = "/home/akhila/fuzzer_packages/fuzzedpackages/image.libfacedetection/inst/testfiles/detect_faces/libFuzzer_detect_faces/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_step.qs";
  qs::c_qsave(step,step_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "step values: "<< step << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    detect_faces(x,width[0],height[0],step[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
