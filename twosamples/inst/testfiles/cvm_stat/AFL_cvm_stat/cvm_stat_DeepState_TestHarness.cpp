// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cvm_stat_DeepState_TestHarness_generation.cpp and cvm_stat_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double cvm_stat(NumericVector a, NumericVector b, double power);

TEST(twosamples_deepstate_test,cvm_stat_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector a  = RcppDeepState_NumericVector();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/twosamples/inst/testfiles/cvm_stat/AFL_cvm_stat/afl_inputs/" + std::to_string(t) + "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector b  = RcppDeepState_NumericVector();
  std::string b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/twosamples/inst/testfiles/cvm_stat/AFL_cvm_stat/afl_inputs/" + std::to_string(t) + "_b.qs";
  qs::c_qsave(b,b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector power(1);
  power[0]  = RcppDeepState_double();
  std::string power_t = "/home/akhila/fuzzer_packages/fuzzedpackages/twosamples/inst/testfiles/cvm_stat/AFL_cvm_stat/afl_inputs/" + std::to_string(t) + "_power.qs";
  qs::c_qsave(power,power_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "power values: "<< power << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cvm_stat(a,b,power[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
