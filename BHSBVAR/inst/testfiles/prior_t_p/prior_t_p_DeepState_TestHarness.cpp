// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// prior_t_p_DeepState_TestHarness_generation.cpp and prior_t_p_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double prior_t_p(const double a1, const double p1, const double sigma1, const double nu);

TEST(BHSBVAR_deepstate_test,prior_t_p_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector a1(1);
  a1[0]  = RcppDeepState_double();
  qs::c_qsave(a1,"/home/akhila/fuzzer_packages/fuzzedpackages/BHSBVAR/inst/testfiles/prior_t_p/inputs/a1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a1 values: "<< a1 << std::endl;
  NumericVector p1(1);
  p1[0]  = RcppDeepState_double();
  qs::c_qsave(p1,"/home/akhila/fuzzer_packages/fuzzedpackages/BHSBVAR/inst/testfiles/prior_t_p/inputs/p1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p1 values: "<< p1 << std::endl;
  NumericVector sigma1(1);
  sigma1[0]  = RcppDeepState_double();
  qs::c_qsave(sigma1,"/home/akhila/fuzzer_packages/fuzzedpackages/BHSBVAR/inst/testfiles/prior_t_p/inputs/sigma1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma1 values: "<< sigma1 << std::endl;
  NumericVector nu(1);
  nu[0]  = RcppDeepState_double();
  qs::c_qsave(nu,"/home/akhila/fuzzer_packages/fuzzedpackages/BHSBVAR/inst/testfiles/prior_t_p/inputs/nu.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nu values: "<< nu << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    prior_t_p(a1[0],p1[0],sigma1[0],nu[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
