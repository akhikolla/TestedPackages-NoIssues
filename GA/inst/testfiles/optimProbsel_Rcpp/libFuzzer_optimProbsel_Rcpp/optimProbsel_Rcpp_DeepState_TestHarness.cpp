// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// optimProbsel_Rcpp_DeepState_TestHarness_generation.cpp and optimProbsel_Rcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector optimProbsel_Rcpp(NumericVector x, double q);

TEST(GA_deepstate_test,optimProbsel_Rcpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GA/inst/testfiles/optimProbsel_Rcpp/libFuzzer_optimProbsel_Rcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector q(1);
  q[0]  = RcppDeepState_double();
  std::string q_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GA/inst/testfiles/optimProbsel_Rcpp/libFuzzer_optimProbsel_Rcpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_q.qs";
  qs::c_qsave(q,q_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "q values: "<< q << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    optimProbsel_Rcpp(x,q[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
