// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// tesseract_engine_internal_DeepState_TestHarness_generation.cpp and tesseract_engine_internal_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

TessPtr tesseract_engine_internal(Rcpp::CharacterVector datapath, Rcpp::CharacterVector language, Rcpp::CharacterVector confpaths, Rcpp::CharacterVector opt_names, Rcpp::CharacterVector opt_values);

TEST(tesseract_deepstate_test,tesseract_engine_internal_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector datapath  = RcppDeepState_CharacterVector();
  std::string datapath_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tesseract/inst/testfiles/tesseract_engine_internal/libFuzzer_tesseract_engine_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_datapath.qs";
  qs::c_qsave(datapath,datapath_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "datapath values: "<< datapath << std::endl;
  CharacterVector language  = RcppDeepState_CharacterVector();
  std::string language_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tesseract/inst/testfiles/tesseract_engine_internal/libFuzzer_tesseract_engine_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_language.qs";
  qs::c_qsave(language,language_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "language values: "<< language << std::endl;
  CharacterVector confpaths  = RcppDeepState_CharacterVector();
  std::string confpaths_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tesseract/inst/testfiles/tesseract_engine_internal/libFuzzer_tesseract_engine_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_confpaths.qs";
  qs::c_qsave(confpaths,confpaths_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "confpaths values: "<< confpaths << std::endl;
  CharacterVector opt_names  = RcppDeepState_CharacterVector();
  std::string opt_names_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tesseract/inst/testfiles/tesseract_engine_internal/libFuzzer_tesseract_engine_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_opt_names.qs";
  qs::c_qsave(opt_names,opt_names_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "opt_names values: "<< opt_names << std::endl;
  CharacterVector opt_values  = RcppDeepState_CharacterVector();
  std::string opt_values_t = "/home/akhila/fuzzer_packages/fuzzedpackages/tesseract/inst/testfiles/tesseract_engine_internal/libFuzzer_tesseract_engine_internal/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_opt_values.qs";
  qs::c_qsave(opt_values,opt_values_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "opt_values values: "<< opt_values << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    tesseract_engine_internal(datapath,language,confpaths,opt_names,opt_values);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
