// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// z_C_DeepState_TestHarness_generation.cpp and z_C_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double z_C(int r, int k, int s, int t);

TEST(TLMoments_deepstate_test,z_C_test){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector r(1);
  r[0]  = RcppDeepState_int();
  qs::c_qsave(r,"/home/akhila/fuzzer_packages/fuzzedpackages/TLMoments/inst/testfiles/z_C/inputs/r.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  IntegerVector k(1);
  k[0]  = RcppDeepState_int();
  qs::c_qsave(k,"/home/akhila/fuzzer_packages/fuzzedpackages/TLMoments/inst/testfiles/z_C/inputs/k.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  IntegerVector s(1);
  s[0]  = RcppDeepState_int();
  qs::c_qsave(s,"/home/akhila/fuzzer_packages/fuzzedpackages/TLMoments/inst/testfiles/z_C/inputs/s.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  IntegerVector t(1);
  t[0]  = RcppDeepState_int();
  qs::c_qsave(t,"/home/akhila/fuzzer_packages/fuzzedpackages/TLMoments/inst/testfiles/z_C/inputs/t.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    z_C(r[0],k[0],s[0],t[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
