% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R, R/summary.R
\name{==,Basic,Basic-method}
\alias{==,Basic,Basic-method}
\alias{!=,Basic,Basic-method}
\alias{Arith,SymEngineDataType,SymEngineDataType-method}
\alias{Arith,SymEngineDataType,vector-method}
\alias{Arith,vector,SymEngineDataType-method}
\alias{-,SymEngineDataType,missing-method}
\alias{+,SymEngineDataType,missing-method}
\alias{\%*\%,DenseMatrix,DenseMatrix-method}
\alias{\%*\%,VecBasic,VecBasic-method}
\alias{\%*\%,DenseMatrix,VecBasic-method}
\alias{\%*\%,DenseMatrix,vector-method}
\alias{\%*\%,VecBasic,DenseMatrix-method}
\alias{\%*\%,vector,DenseMatrix-method}
\alias{Math,SymEngineDataType-method}
\alias{sinpi,SymEngineDataType-method}
\alias{cospi,SymEngineDataType-method}
\alias{tanpi,SymEngineDataType-method}
\alias{log,SymEngineDataType-method}
\alias{log2,SymEngineDataType-method}
\alias{log10,SymEngineDataType-method}
\alias{log1p,SymEngineDataType-method}
\alias{expm1,SymEngineDataType-method}
\alias{sum,SymEngineDataType-method}
\alias{prod,SymEngineDataType-method}
\title{Bindings for Operators and Math Functions}
\usage{
\S4method{==}{Basic,Basic}(e1, e2)

\S4method{!=}{Basic,Basic}(e1, e2)

\S4method{Arith}{SymEngineDataType,SymEngineDataType}(e1, e2)

\S4method{Arith}{SymEngineDataType,vector}(e1, e2)

\S4method{Arith}{vector,SymEngineDataType}(e1, e2)

\S4method{-}{SymEngineDataType,missing}(e1, e2)

\S4method{+}{SymEngineDataType,missing}(e1, e2)

\S4method{\%*\%}{DenseMatrix,DenseMatrix}(x, y)

\S4method{\%*\%}{VecBasic,VecBasic}(x, y)

\S4method{\%*\%}{DenseMatrix,VecBasic}(x, y)

\S4method{\%*\%}{DenseMatrix,vector}(x, y)

\S4method{\%*\%}{VecBasic,DenseMatrix}(x, y)

\S4method{\%*\%}{vector,DenseMatrix}(x, y)

\S4method{Math}{SymEngineDataType}(x)

\S4method{sinpi}{SymEngineDataType}(x)

\S4method{cospi}{SymEngineDataType}(x)

\S4method{tanpi}{SymEngineDataType}(x)

\S4method{log}{SymEngineDataType}(x, base)

\S4method{log2}{SymEngineDataType}(x)

\S4method{log10}{SymEngineDataType}(x)

\S4method{log1p}{SymEngineDataType}(x)

\S4method{expm1}{SymEngineDataType}(x)

\S4method{sum}{SymEngineDataType}(x, ..., na.rm = FALSE)

\S4method{prod}{SymEngineDataType}(x, ..., na.rm = FALSE)
}
\arguments{
\item{e1, e2, x, y, base, ...}{Objects.}

\item{na.rm}{Ignored}
}
\value{
\code{==} and \code{!=} will return a logical vector. Other
  functions will return a \code{Basic}, \code{VecBasic} or \code{DenseMatrix}.
}
\description{
These are S4 methods defined for \code{Basic}, \code{VecBasic}
and \code{DenseMatrix}.
}
